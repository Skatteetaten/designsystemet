"use strict";(self.webpackChunk_skatteetaten_designsystemet=self.webpackChunk_skatteetaten_designsystemet||[]).push([[3795],{"./apps/ds-playground/src/stories/__tests__/DatePickerCalendar.test.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ClickAndChangeMonthAndYear:()=>ClickAndChangeMonthAndYear,Defaults:()=>Defaults,WithAttributes:()=>WithAttributes,WithBreakpointMobile:()=>WithBreakpointMobile,WithMaxDate:()=>WithMaxDate,WithMaxDateWhereSelectedDateIsWithinTheRange:()=>WithMaxDateWhereSelectedDateIsWithinTheRange,WithMinDate:()=>WithMinDate,WithRef:()=>WithRef,WithSelectedDate:()=>WithSelectedDate,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/ds-core-utils/src/index.ts"),_storybook_test__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),_libs_ds_forms_src_DatePickerCalendar_DatePickerCalendar__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./libs/ds-forms/src/DatePickerCalendar/DatePickerCalendar.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");const today=new Date("2024.01.15"),__WEBPACK_DEFAULT_EXPORT__={component:_libs_ds_forms_src_DatePickerCalendar_DatePickerCalendar__WEBPACK_IMPORTED_MODULE_3__.h,title:"Tester/DatePicker/DatePickerCalendar",argTypes:{key:{table:{disable:!0}},ref:{table:{disable:!0}},className:{table:{disable:!0}},id:{table:{disable:!0}},lang:{table:{disable:!0}},"data-testid":{table:{disable:!0}},selectedDate:{table:{disable:!0},control:"date"},minDate:{table:{disable:!0},control:"date"},maxDate:{table:{disable:!0},control:"date"},onSelectDate:{table:{disable:!0}},onTabKeyOut:{table:{disable:!0}}},parameters:{mockDate:today},render:args=>(args.selectedDate=new Date(args.selectedDate),args.minDate=new Date(args.minDate),args.maxDate=new Date(args.maxDate),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_libs_ds_forms_src_DatePickerCalendar_DatePickerCalendar__WEBPACK_IMPORTED_MODULE_3__.h,Object.assign({},args,{selectedDate:args.selectedDate,minDate:args.minDate,maxDate:args.maxDate})))},defaultArgs={selectedDate:today,onSelectDate:()=>{Function.prototype()}},WithRef={name:"With Ref (FA1)",args:Object.assign({},defaultArgs,{ref:instance=>{instance&&(instance.id="dummyIdForwardedFromRef")}}),argTypes:{ref:{table:{disable:!1}}},parameters:{imageSnapshot:{disable:!0}},play:async({canvasElement})=>{const calendar=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getAllByRole("generic")[1];await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(calendar).toHaveAttribute("id","dummyIdForwardedFromRef")}},WithAttributes={name:"With Attributes (FA2-5)",args:Object.assign({},defaultArgs,{id:"htmlId",className:"dummyClassname",lang:"en","data-testid":"123ID"}),argTypes:{id:{table:{disable:!1}},className:{table:{disable:!1}},lang:{table:{disable:!1}},"data-testid":{table:{disable:!1}}},play:async({canvasElement})=>{const calendar=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getAllByRole("generic")[1];await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(calendar).toHaveAttribute("id","htmlId"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(calendar).toHaveClass("dummyClassname"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(calendar).toHaveAttribute("lang","en"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(calendar).toHaveAttribute("data-testid","123ID")}},Defaults={name:"Defaults (A1 delvis, B1, B2)",args:Object.assign({},defaultArgs),argTypes:{},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement),prevArrowBtnText=`${_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__.g0.t("ds_forms:datepicker.PreviousMonth")} ${_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__.g0.t("ds_forms:datepicker.December")} 2023`,nextArrowBtnText=`${_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__.g0.t("ds_forms:datepicker.NextMonth")} ${_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__.g0.t("ds_forms:datepicker.February")} 2024`;await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(canvas.getByRole("button",{name:prevArrowBtnText})).toBeInTheDocument(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(canvas.getByRole("button",{name:nextArrowBtnText})).toBeInTheDocument(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(canvas.getByRole("combobox",{name:_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__.g0.t("ds_forms:datepicker.SelectMonth")})).toBeInTheDocument(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(canvas.getByRole("textbox",{name:_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__.g0.t("ds_forms:datepicker.Year")})).toBeInTheDocument();const calendarTable=canvas.getByRole("table"),caption=calendarTable.querySelector("caption"),cells=calendarTable.querySelectorAll("td"),buttons=calendarTable.querySelectorAll("button"),focusableButtons=calendarTable.querySelectorAll('button[tabindex="0"]');await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(calendarTable).toBeInTheDocument(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(caption).toBeInTheDocument(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(cells.length).toBe(buttons.length),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(focusableButtons.length).toBe(1);const defaultSelectedDateButton=canvas.getAllByText("15")[0];await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(defaultSelectedDateButton).toHaveAttribute("aria-label","I dag 15. Januar 2024"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(defaultSelectedDateButton).toHaveAttribute("aria-current","true"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(defaultSelectedDateButton).toHaveAttribute("tabindex","0")}},WithSelectedDate={name:"WithSelectedDate (B2)",args:Object.assign({},defaultArgs,{selectedDate:new Date("2024.01.31")}),argTypes:{selectedDate:{table:{disable:!1}}},play:async({canvasElement})=>{const selectedDateButton=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByText("31");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(selectedDateButton).toHaveAttribute("aria-current","true")}},WithMinDate={name:"With MinDate (A3 delvis)",args:Object.assign({},defaultArgs,{minDate:new Date("2024.01.15")}),argTypes:{minDate:{table:{disable:!1}}},play:async({canvasElement})=>{const disabledButtons=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("table").querySelectorAll("button:disabled");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(disabledButtons.length).toBe(14)}},WithMaxDate={name:"With MaxDate (A3 delvis)",args:Object.assign({},defaultArgs,{maxDate:new Date("2024.01.15")}),argTypes:{maxDate:{table:{disable:!1}}},play:async({canvasElement})=>{const disabledButtons=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("table").querySelectorAll("button:disabled");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(disabledButtons.length).toBe(20)}},WithMaxDateWhereSelectedDateIsWithinTheRange={name:"With MaxDate Where Selected Date Is Within The Range",args:Object.assign({},defaultArgs,{selectedDate:new Date("2024.01.16"),maxDate:new Date("2024.01.15")}),argTypes:{selectedDate:{table:{disable:!1}},maxDate:{table:{disable:!1}}},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement),oldSelectedDateButton=canvas.getByText("16");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(oldSelectedDateButton).toHaveAttribute("tabindex","-1");const newSelectedDateButton=canvas.getByText("15");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(newSelectedDateButton).toHaveAttribute("tabindex","0")}},WithBreakpointMobile={name:"With Breakpoint-mobile (A1 delvis)",args:Object.assign({},defaultArgs),argTypes:{},parameters:{viewport:{defaultViewport:"--mobile"}}},ClickAndChangeMonthAndYear={name:"Click And Change Month And Year (A5 delvis)",args:Object.assign({},defaultArgs),argTypes:{},parameters:{imageSnapshot:{disable:!0},HTMLSnapshot:{disable:!0}},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement),prevArrowBtnText=`${_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__.g0.t("ds_forms:datepicker.PreviousMonth")} ${_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__.g0.t("ds_forms:datepicker.December")} 2023`,prevButton=canvas.getByRole("button",{name:prevArrowBtnText}),nextArrowBtnText=`${_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__.g0.t("ds_forms:datepicker.NextMonth")} ${_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__.g0.t("ds_forms:datepicker.February")} 2024`,nextButton=canvas.getByRole("button",{name:nextArrowBtnText}),monthSelect=canvas.getByRole("combobox",{name:_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__.g0.t("ds_forms:datepicker.SelectMonth")}),yearInput=canvas.getByRole("textbox",{name:_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__.g0.t("ds_forms:datepicker.Year")});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(monthSelect).toHaveValue("0"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(yearInput).toHaveValue("2024"),await _storybook_test__WEBPACK_IMPORTED_MODULE_2__.BX.click(prevButton),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(monthSelect).toHaveValue("11"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(yearInput).toHaveValue("2023"),await _storybook_test__WEBPACK_IMPORTED_MODULE_2__.BX.click(nextButton),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(monthSelect).toHaveValue("0"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(yearInput).toHaveValue("2024")}};WithRef.parameters={...WithRef.parameters,docs:{...WithRef.parameters?.docs,source:{originalSource:"{\n  name: 'With Ref (FA1)',\n  args: {\n    ...defaultArgs,\n    ref: (instance: HTMLDivElement | null): void => {\n      if (instance) {\n        instance.id = 'dummyIdForwardedFromRef';\n      }\n    }\n  },\n  argTypes: {\n    ref: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      disable: true\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const calendar = canvas.getAllByRole('generic')[1];\n    await expect(calendar).toHaveAttribute('id', 'dummyIdForwardedFromRef');\n  }\n} satisfies Story",...WithRef.parameters?.docs?.source}}},WithAttributes.parameters={...WithAttributes.parameters,docs:{...WithAttributes.parameters?.docs,source:{originalSource:"{\n  name: 'With Attributes (FA2-5)',\n  args: {\n    ...defaultArgs,\n    id: 'htmlId',\n    className: 'dummyClassname',\n    lang: 'en',\n    'data-testid': '123ID'\n  },\n  argTypes: {\n    id: {\n      table: {\n        disable: false\n      }\n    },\n    className: {\n      table: {\n        disable: false\n      }\n    },\n    lang: {\n      table: {\n        disable: false\n      }\n    },\n    'data-testid': {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const calendar = canvas.getAllByRole('generic')[1];\n    await expect(calendar).toHaveAttribute('id', 'htmlId');\n    await expect(calendar).toHaveClass('dummyClassname');\n    await expect(calendar).toHaveAttribute('lang', 'en');\n    await expect(calendar).toHaveAttribute('data-testid', '123ID');\n  }\n} satisfies Story",...WithAttributes.parameters?.docs?.source}}},Defaults.parameters={...Defaults.parameters,docs:{...Defaults.parameters?.docs,source:{originalSource:"{\n  name: 'Defaults (A1 delvis, B1, B2)',\n  args: {\n    ...defaultArgs\n  },\n  argTypes: {},\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const prevArrowBtnText = `${dsI18n.t('ds_forms:datepicker.PreviousMonth')} ${dsI18n.t('ds_forms:datepicker.December')} 2023`;\n    const nextArrowBtnText = `${dsI18n.t('ds_forms:datepicker.NextMonth')} ${dsI18n.t('ds_forms:datepicker.February')} 2024`;\n    await expect(canvas.getByRole('button', {\n      name: prevArrowBtnText\n    })).toBeInTheDocument();\n    await expect(canvas.getByRole('button', {\n      name: nextArrowBtnText\n    })).toBeInTheDocument();\n    await expect(canvas.getByRole('combobox', {\n      name: dsI18n.t('ds_forms:datepicker.SelectMonth')\n    })).toBeInTheDocument();\n    await expect(canvas.getByRole('textbox', {\n      name: dsI18n.t('ds_forms:datepicker.Year')\n    })).toBeInTheDocument();\n    const calendarTable = canvas.getByRole('table');\n    // eslint-disable-next-line testing-library/no-node-access\n    const caption = calendarTable.querySelector('caption');\n    // eslint-disable-next-line testing-library/no-node-access\n    const cells = calendarTable.querySelectorAll('td');\n    // eslint-disable-next-line testing-library/no-node-access\n    const buttons = calendarTable.querySelectorAll('button');\n    // eslint-disable-next-line testing-library/no-node-access\n    const focusableButtons = calendarTable.querySelectorAll('button[tabindex=\"0\"]');\n    await expect(calendarTable).toBeInTheDocument();\n    await expect(caption).toBeInTheDocument();\n    await expect(cells.length).toBe(buttons.length);\n    await expect(focusableButtons.length).toBe(1);\n    const defaultSelectedDateButton = canvas.getAllByText('15')[0];\n    await expect(defaultSelectedDateButton).toHaveAttribute('aria-label', 'I dag 15. Januar 2024');\n    await expect(defaultSelectedDateButton).toHaveAttribute('aria-current', 'true');\n    await expect(defaultSelectedDateButton).toHaveAttribute('tabindex', '0');\n  }\n} satisfies Story",...Defaults.parameters?.docs?.source}}},WithSelectedDate.parameters={...WithSelectedDate.parameters,docs:{...WithSelectedDate.parameters?.docs,source:{originalSource:"{\n  name: 'WithSelectedDate (B2)',\n  args: {\n    ...defaultArgs,\n    selectedDate: new Date('2024.01.31')\n  },\n  argTypes: {\n    selectedDate: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const selectedDateButton = canvas.getByText('31');\n    await expect(selectedDateButton).toHaveAttribute('aria-current', 'true');\n  }\n} satisfies Story",...WithSelectedDate.parameters?.docs?.source}}},WithMinDate.parameters={...WithMinDate.parameters,docs:{...WithMinDate.parameters?.docs,source:{originalSource:"{\n  name: 'With MinDate (A3 delvis)',\n  args: {\n    ...defaultArgs,\n    minDate: new Date('2024.01.15')\n  },\n  argTypes: {\n    minDate: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const calendarTable = canvas.getByRole('table');\n    // eslint-disable-next-line testing-library/no-node-access\n    const disabledButtons = calendarTable.querySelectorAll('button:disabled');\n    await expect(disabledButtons.length).toBe(14);\n  }\n} satisfies Story",...WithMinDate.parameters?.docs?.source}}},WithMaxDate.parameters={...WithMaxDate.parameters,docs:{...WithMaxDate.parameters?.docs,source:{originalSource:"{\n  name: 'With MaxDate (A3 delvis)',\n  args: {\n    ...defaultArgs,\n    maxDate: new Date('2024.01.15')\n  },\n  argTypes: {\n    maxDate: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const calendarTable = canvas.getByRole('table');\n    // eslint-disable-next-line testing-library/no-node-access\n    const disabledButtons = calendarTable.querySelectorAll('button:disabled');\n    await expect(disabledButtons.length).toBe(20);\n  }\n} satisfies Story",...WithMaxDate.parameters?.docs?.source}}},WithMaxDateWhereSelectedDateIsWithinTheRange.parameters={...WithMaxDateWhereSelectedDateIsWithinTheRange.parameters,docs:{...WithMaxDateWhereSelectedDateIsWithinTheRange.parameters?.docs,source:{originalSource:"{\n  name: 'With MaxDate Where Selected Date Is Within The Range',\n  args: {\n    ...defaultArgs,\n    selectedDate: new Date('2024.01.16'),\n    maxDate: new Date('2024.01.15')\n  },\n  argTypes: {\n    selectedDate: {\n      table: {\n        disable: false\n      }\n    },\n    maxDate: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const oldSelectedDateButton = canvas.getByText('16');\n    await expect(oldSelectedDateButton).toHaveAttribute('tabindex', '-1');\n    const newSelectedDateButton = canvas.getByText('15');\n    await expect(newSelectedDateButton).toHaveAttribute('tabindex', '0');\n  }\n} satisfies Story",...WithMaxDateWhereSelectedDateIsWithinTheRange.parameters?.docs?.source}}},WithBreakpointMobile.parameters={...WithBreakpointMobile.parameters,docs:{...WithBreakpointMobile.parameters?.docs,source:{originalSource:"{\n  name: 'With Breakpoint-mobile (A1 delvis)',\n  args: {\n    ...defaultArgs\n  },\n  argTypes: {},\n  parameters: {\n    viewport: {\n      defaultViewport: '--mobile'\n    }\n  }\n} satisfies Story",...WithBreakpointMobile.parameters?.docs?.source}}},ClickAndChangeMonthAndYear.parameters={...ClickAndChangeMonthAndYear.parameters,docs:{...ClickAndChangeMonthAndYear.parameters?.docs,source:{originalSource:"{\n  name: 'Click And Change Month And Year (A5 delvis)',\n  args: {\n    ...defaultArgs\n  },\n  argTypes: {},\n  parameters: {\n    imageSnapshot: {\n      disable: true\n    },\n    HTMLSnapshot: {\n      disable: true\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const prevArrowBtnText = `${dsI18n.t('ds_forms:datepicker.PreviousMonth')} ${dsI18n.t('ds_forms:datepicker.December')} 2023`;\n    const prevButton = canvas.getByRole('button', {\n      name: prevArrowBtnText\n    });\n    const nextArrowBtnText = `${dsI18n.t('ds_forms:datepicker.NextMonth')} ${dsI18n.t('ds_forms:datepicker.February')} 2024`;\n    const nextButton = canvas.getByRole('button', {\n      name: nextArrowBtnText\n    });\n    const monthSelect = canvas.getByRole('combobox', {\n      name: dsI18n.t('ds_forms:datepicker.SelectMonth')\n    });\n    const yearInput = canvas.getByRole('textbox', {\n      name: dsI18n.t('ds_forms:datepicker.Year')\n    });\n    await expect(monthSelect).toHaveValue('0');\n    await expect(yearInput).toHaveValue('2024');\n    await fireEvent.click(prevButton);\n    await expect(monthSelect).toHaveValue('11');\n    await expect(yearInput).toHaveValue('2023');\n    await fireEvent.click(nextButton);\n    await expect(monthSelect).toHaveValue('0');\n    await expect(yearInput).toHaveValue('2024');\n  }\n} satisfies Story",...ClickAndChangeMonthAndYear.parameters?.docs?.source}}};const __namedExportsOrder=["WithRef","WithAttributes","Defaults","WithSelectedDate","WithMinDate","WithMaxDate","WithMaxDateWhereSelectedDateIsWithinTheRange","WithBreakpointMobile","ClickAndChangeMonthAndYear"]}}]);