"use strict";(self.webpackChunk_skatteetaten_designsystemet=self.webpackChunk_skatteetaten_designsystemet||[]).push([[1796],{"./apps/ds-playground/src/stories/__tests__/TableHeaderCell.test.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{WithAttributes:()=>WithAttributes,WithChildren:()=>WithChildren,WithRef:()=>WithRef,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _skatteetaten_ds_table__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./libs/ds-table/src/index.ts"),_storybook_test__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={component:_skatteetaten_ds_table__WEBPACK_IMPORTED_MODULE_0__.iA.HeaderCell,title:"Tester/Table/HeaderCell",argTypes:{key:{table:{disable:!0}},ref:{table:{disable:!0}},className:{table:{disable:!0}},id:{table:{disable:!0}},lang:{table:{disable:!0}},"data-testid":{table:{disable:!0}},alignment:{table:{disable:!0}},as:{table:{disable:!0}},children:{table:{disable:!0}},colSpan:{table:{disable:!0}},isSortable:{table:{disable:!0}},scope:{table:{disable:!0}},sortKey:{table:{disable:!0}}}},defaultArgs={children:"cake"},Template=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("table",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_skatteetaten_ds_table__WEBPACK_IMPORTED_MODULE_0__.iA.Header,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_skatteetaten_ds_table__WEBPACK_IMPORTED_MODULE_0__.iA.Row,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_skatteetaten_ds_table__WEBPACK_IMPORTED_MODULE_0__.iA.HeaderCell,Object.assign({},args,{children:args.children}))})})}),WithRef={render:Template,name:"With Ref (FA1)",args:Object.assign({},defaultArgs,{ref:instance=>{instance&&(instance.id="dummyIdForwardedFromRef")}}),argTypes:{ref:{table:{disable:!1}}},parameters:{imageSnapshot:{disable:!0}},play:async({canvasElement})=>{const table=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement).getByRole("columnheader");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.l_)(table).toBeInTheDocument(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.l_)(table).toHaveAttribute("id","dummyIdForwardedFromRef")}},WithAttributes={render:Template,name:"With Attributes (FA2-5)",args:Object.assign({},defaultArgs,{id:"htmlId",className:"dummyClassname",lang:"nb","data-testid":"123ID"}),argTypes:{id:{table:{disable:!1}},className:{table:{disable:!1}},lang:{table:{disable:!1}},"data-testid":{table:{disable:!1}}},parameters:{imageSnapshot:{disable:!0}},play:async({canvasElement})=>{const dataCell=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement).getByRole("columnheader");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.l_)(dataCell).toHaveClass("dummyClassname"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.l_)(dataCell).toHaveAttribute("id","htmlId"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.l_)(dataCell).toHaveAttribute("lang","nb"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.l_)(dataCell).toHaveAttribute("data-testid","123ID")}},WithChildren={render:Template,name:"With Children (Table A8)",args:{children:"columnheader"},argTypes:{children:{table:{disable:!1}}},parameters:{imageSnapshot:{disable:!0}},play:async({canvasElement})=>{const dataCell=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement).getByText("columnheader");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.l_)(dataCell).toBeInTheDocument()}};WithRef.parameters={...WithRef.parameters,docs:{...WithRef.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  name: 'With Ref (FA1)',\n  args: {\n    ...defaultArgs,\n    ref: (instance: HTMLTableCellElement | null): void => {\n      if (instance) {\n        instance.id = 'dummyIdForwardedFromRef';\n      }\n    }\n  },\n  argTypes: {\n    ref: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      disable: true\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const table = canvas.getByRole('columnheader');\n    await expect(table).toBeInTheDocument();\n    await expect(table).toHaveAttribute('id', 'dummyIdForwardedFromRef');\n  }\n} satisfies Story",...WithRef.parameters?.docs?.source}}},WithAttributes.parameters={...WithAttributes.parameters,docs:{...WithAttributes.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  name: 'With Attributes (FA2-5)',\n  args: {\n    ...defaultArgs,\n    id: 'htmlId',\n    className: 'dummyClassname',\n    lang: 'nb',\n    'data-testid': '123ID'\n  },\n  argTypes: {\n    id: {\n      table: {\n        disable: false\n      }\n    },\n    className: {\n      table: {\n        disable: false\n      }\n    },\n    lang: {\n      table: {\n        disable: false\n      }\n    },\n    'data-testid': {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      disable: true\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const dataCell = canvas.getByRole('columnheader');\n    await expect(dataCell).toHaveClass('dummyClassname');\n    await expect(dataCell).toHaveAttribute('id', 'htmlId');\n    await expect(dataCell).toHaveAttribute('lang', 'nb');\n    await expect(dataCell).toHaveAttribute('data-testid', '123ID');\n  }\n} satisfies Story",...WithAttributes.parameters?.docs?.source}}},WithChildren.parameters={...WithChildren.parameters,docs:{...WithChildren.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  name: 'With Children (Table A8)',\n  args: {\n    children: 'columnheader'\n  },\n  argTypes: {\n    children: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      disable: true\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const dataCell = canvas.getByText('columnheader');\n    await expect(dataCell).toBeInTheDocument();\n  }\n} satisfies Story",...WithChildren.parameters?.docs?.source}}};const __namedExportsOrder=["WithRef","WithAttributes","WithChildren"]}}]);