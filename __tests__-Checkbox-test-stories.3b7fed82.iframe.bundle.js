"use strict";(self.webpackChunk_skatteetaten_designsystemet=self.webpackChunk_skatteetaten_designsystemet||[]).push([[2694],{"./apps/ds-playground/src/stories/__tests__/testUtils/storybook.testing.utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{YS:()=>wrapper,fH:()=>loremIpsum,ob:()=>loremIpsumWithoutSpaces});const wrapper="[data-test-block]",loremIpsum="Lorem ipsum dolor sit amet. Alle som har laget en nettside, trengt litt fylltekst eller bare surfet rundt på nettet har antageligvis sett disse ordene, etterfulgt av en tilsynelatende eviglang tekst fylt med latinske liksomsetninger.",loremIpsumWithoutSpaces="Loremipsumdolorsitamet.Allesomharlagetennettside,trengtlittfylltekstellerbaresurfetrundtpånettetharantageligvissettdisseordene,etterfulgtaventilsynelatendeeviglangtekstfyltmedlatinskeliksomsetninger."},"./apps/ds-playground/src/stories/__tests__/Checkbox.test.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Defaults:()=>Defaults,WithAriaDescribedby:()=>WithAriaDescribedby,WithAttributes:()=>WithAttributes,WithChecked:()=>WithChecked,WithCheckedAndRequired:()=>WithCheckedAndRequired,WithDefaultChecked:()=>WithDefaultChecked,WithDescription:()=>WithDescription,WithDescriptionAndDisabled:()=>WithDescriptionAndDisabled,WithDescriptionAndLongText:()=>WithDescriptionAndLongText,WithDisabled:()=>WithDisabled,WithDisabledAndChecked:()=>WithDisabledAndChecked,WithDisabledAndRequired:()=>WithDisabledAndRequired,WithError:()=>WithError,WithErrorAndRequired:()=>WithErrorAndRequired,WithEventHandlers:()=>WithEventHandlers,WithHideLabel:()=>WithHideLabel,WithLongText:()=>WithLongText,WithLongTextAndBreaking:()=>WithLongTextAndBreaking,WithName:()=>WithName,WithRef:()=>WithRef,WithRequired:()=>WithRequired,WithRequiredAndChecked:()=>WithRequiredAndChecked,WithRequiredAndMark:()=>WithRequiredAndMark,WithValue:()=>WithValue,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_skatteetaten_ds_forms__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/ds-forms/src/index.ts"),_storybook_test__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./apps/ds-playground/src/stories/__tests__/testUtils/storybook.testing.utils.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");const verifyAttribute=(attribute,expectedValue)=>async({canvasElement})=>{const button=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("checkbox");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(button).toBeInTheDocument(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(button).toHaveAttribute(attribute,expectedValue)},__WEBPACK_DEFAULT_EXPORT__={component:_skatteetaten_ds_forms__WEBPACK_IMPORTED_MODULE_1__.XZ,title:"Tester/Checkbox",argTypes:{key:{table:{disable:!0}},ref:{table:{disable:!0}},className:{table:{disable:!0}},id:{table:{disable:!0}},lang:{table:{disable:!0}},"data-testid":{table:{disable:!0}},children:{table:{disable:!0}},defaultChecked:{table:{disable:!0}},description:{table:{disable:!0}},errorMessage:{table:{disable:!0}},hasError:{table:{disable:!0}},hideLabel:{table:{disable:!0}},showRequiredMark:{table:{disable:!0}},checked:{table:{disable:!0}},disabled:{table:{disable:!0}},form:{table:{disable:!0}},name:{table:{disable:!0}},required:{table:{disable:!0}},value:{table:{disable:!0}},ariaDescribedby:{table:{disable:!0}},onChange:{table:{disable:!0}}}},defaultArgs={children:"Checkbox"},WithRef={name:"With Ref (FA1)",args:Object.assign({},defaultArgs,{ref:instance=>{instance&&(instance.name="dummyNameForwardedFromRef")}}),argTypes:{ref:{table:{disable:!1}}},parameters:{imageSnapshot:{disable:!0}},play:verifyAttribute("name","dummyNameForwardedFromRef")},WithAttributes={name:"With Attributes (FA2-5)",args:Object.assign({},defaultArgs,{id:"htmlid",className:"dummyClassname",lang:"nb","data-testid":"123ID",form:"123form"}),argTypes:{id:{table:{disable:!1}},className:{table:{disable:!1}},lang:{table:{disable:!1}},"data-testid":{table:{disable:!1}},form:{table:{disable:!1}}},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement),inputNode=canvas.getByRole("checkbox"),container=canvas.getAllByRole("generic")[1];await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toHaveAttribute("id","htmlid"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(container).toHaveClass("dummyClassname"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(container).toHaveAttribute("lang","nb"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toHaveAttribute("data-testid","123ID"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toHaveAttribute("form","123form")}},Defaults={name:"Defaults (A1, B1)",args:Object.assign({},defaultArgs),argTypes:{children:{table:{disable:!1}}},parameters:{imageSnapshot:{hover:`${_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__.YS} label`,focus:`${_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__.YS} input`,click:`${_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__.YS} label`}},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement),inputNode=canvas.getByLabelText("Checkbox");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeInTheDocument(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode.tagName).toBe("INPUT"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).not.toHaveAttribute("aria-invalid"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).not.toBeChecked(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).not.toBeRequired(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeEnabled(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).not.toHaveAttribute("aria-describedby");const errorMessage=canvas.getAllByRole("generic")[6];await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(errorMessage).toBeInTheDocument()}},WithDescription={name:"With Description (A1)",args:Object.assign({},defaultArgs,{description:"En beskrivelse av punktet"}),argTypes:{description:{table:{disable:!1}}},parameters:{imageSnapshot:{hover:`${_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__.YS} label`,focus:`${_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__.YS} input`,click:`${_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__.YS} label`}},play:async({canvasElement})=>{const description=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByText("En beskrivelse av punktet");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(description).toBeInTheDocument()}},WithDescriptionAndLongText={name:"With Description And Long Text (A1)",args:Object.assign({},defaultArgs,{children:"Får ekstra lang reisevei til jobb på grunn av levering til barnehage eller skolefritidsordning eller annen fritidsordning",description:"Litt rart å ha en beskrivende tekst rett under en lang tekst, men sånn har det blitt"}),argTypes:{description:{table:{disable:!1}}},parameters:{viewport:{defaultViewport:"--breakpoint-xs"}}},WithDescriptionAndDisabled={name:"With Description And Disabled (A1)",args:Object.assign({},defaultArgs,{description:"En beskrivelse av punktet",disabled:!0}),argTypes:{description:{table:{disable:!1}},disabled:{table:{disable:!1}}}},WithLongText={name:"With Long Text (A2)",args:Object.assign({},defaultArgs,{children:"Får ekstra lang reisevei til jobb på grunn av levering til barnehage eller skolefritidsordning eller annen fritidsordning"}),argTypes:{children:{table:{disable:!1}}},parameters:{viewport:{defaultViewport:"--breakpoint-xs"}}},WithLongTextAndBreaking={name:"With Long Text And Breaking (A2)",args:Object.assign({},defaultArgs,{children:"Fårekstrareiseveitiljobbpågrunnavleveringtilbarnehageellerskolefritidsordning"}),argTypes:{children:{table:{disable:!1}}},parameters:{viewport:{defaultViewport:"--breakpoint-xs"}}},WithHideLabel={name:"With HideLabel (A2)",args:Object.assign({},defaultArgs,{hideLabel:!0}),argTypes:{hideLabel:{table:{disable:!1}}},play:async({canvasElement})=>{const inputNode=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByLabelText("Checkbox");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeInTheDocument()}},WithChecked={name:"With Checked (A1, A3)",args:Object.assign({},defaultArgs,{checked:!0}),argTypes:{checked:{table:{disable:!1}}},parameters:{imageSnapshot:{hover:`${_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__.YS} label`,focus:`${_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__.YS} input`,click:`${_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__.YS} label`}},play:async({canvasElement})=>{const inputNode=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("checkbox");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeChecked(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).not.toHaveAttribute("aria-invalid")}},WithDisabled={name:"With Disabled (A1, A5 delvis, B2)",args:Object.assign({},defaultArgs,{disabled:!0}),argTypes:{disabled:{table:{disable:!1}}},play:async({canvasElement})=>{const inputNode=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("checkbox");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeDisabled()}},WithDisabledAndChecked={name:"With Disabled And Checked (A1, A5 delvis, B2)",args:Object.assign({},defaultArgs,{checked:!0,disabled:!0}),argTypes:{checked:{table:{disable:!1}},disabled:{table:{disable:!1}}},play:async({canvasElement})=>{const inputNode=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("checkbox");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeChecked(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeDisabled()}},WithRequired={name:"With Required (B3)",args:Object.assign({},defaultArgs,{required:!0}),argTypes:{required:{table:{disable:!1}}},play:async({canvasElement})=>{const inputNode=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("checkbox");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeRequired()}},WithRequiredAndMark={name:"With Required And Mark (A1, B3)",args:Object.assign({},defaultArgs,{required:!0,showRequiredMark:!0}),argTypes:{required:{table:{disable:!1}},showRequiredMark:{table:{disable:!1}}},play:async({canvasElement})=>{const inputNode=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("checkbox");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeRequired()}},WithRequiredAndChecked={name:"With Required And Checked (B3)",args:Object.assign({},defaultArgs,{checked:!0,required:!0}),argTypes:{checked:{table:{disable:!1}},required:{table:{disable:!1}}},parameters:{imageSnapshot:{disable:!0}},play:async({canvasElement})=>{const inputNode=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("checkbox");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeChecked(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).not.toBeRequired()}},WithError={name:"With Error And ErrorMessage (A1, B4)",args:Object.assign({},defaultArgs,{errorMessage:"Du må lese og forstå innholdet for å gå videre",hasError:!0}),argTypes:{errorMessage:{table:{disable:!1}},hasError:{table:{disable:!1}}},parameters:{imageSnapshot:{hover:`${_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__.YS} label`,focus:`${_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__.YS} input`,click:`${_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__.YS} label`}},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement),errorMessageNode=canvas.getAllByRole("generic")[6];await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(errorMessageNode).toHaveAttribute("id");const inputNode=canvas.getByRole("checkbox",{description:"Du må lese og forstå innholdet for å gå videre"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toHaveAttribute("aria-invalid","true")}},WithDisabledAndRequired={name:"With Disabled And Required (A1)",args:Object.assign({},defaultArgs,{disabled:!0,required:!0,showRequiredMark:!0}),argTypes:{disabled:{table:{disable:!1}},required:{table:{disable:!1}},showRequiredMark:{table:{disable:!1}}},play:async({canvasElement})=>{const inputNode=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("checkbox");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeDisabled(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeRequired()}},WithErrorAndRequired={name:"With Error And Required (A1)",args:Object.assign({},defaultArgs,{errorMessage:"Feilmelding",hasError:!0,required:!0,showRequiredMark:!0}),argTypes:{errorMessage:{table:{disable:!1}},hasError:{table:{disable:!1}},required:{table:{disable:!1}},showRequiredMark:{table:{disable:!1}}},parameters:{imageSnapshot:{hover:`${_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__.YS} label`,focus:`${_testUtils_storybook_testing_utils__WEBPACK_IMPORTED_MODULE_3__.YS} input`}},play:async({canvasElement})=>{const inputNode=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("checkbox");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toHaveAttribute("aria-invalid","true"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeRequired()}},WithCheckedAndRequired={name:"With Checked And Required (B3)",args:Object.assign({},defaultArgs,{checked:!0,required:!0}),argTypes:{checked:{table:{disable:!1}},required:{table:{disable:!1}}},play:async({canvasElement})=>{const inputNode=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("checkbox");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeChecked(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).not.toBeRequired()}},WithAriaDescribedby={name:"With AriaDescribedby (B1)",args:Object.assign({},defaultArgs,{ariaDescribedby:"testID"}),argTypes:{ariaDescribedby:{table:{disable:!1}}},parameters:{imageSnapshot:{disable:!0}},play:async({canvasElement})=>{const inputNode=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("checkbox");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toHaveAttribute("aria-describedby"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toHaveAttribute("aria-describedby",_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_.stringMatching("testID"))}},WithValue={name:"With Value",args:Object.assign({},defaultArgs,{value:"test_value_checkbox"}),argTypes:{value:{table:{disable:!1}}},parameters:{imageSnapshot:{disable:!0}},play:verifyAttribute("value","test_value_checkbox")},WithDefaultChecked={name:"With DefaultChecked",args:Object.assign({},defaultArgs,{defaultChecked:!0}),argTypes:{defaultChecked:{table:{disable:!1}}},parameters:{imageSnapshot:{disable:!0}},play:async({canvasElement})=>{const inputNode=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("checkbox");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(inputNode).toBeChecked()}},WithName={name:"With Name",args:Object.assign({},defaultArgs,{name:"test_name_checkbox"}),argTypes:{name:{table:{disable:!1}}},parameters:{imageSnapshot:{disable:!0}},play:verifyAttribute("name","test_name_checkbox")},WithEventHandlers={render:args=>{const[labelText,setLabelText]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("Checkbox");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_skatteetaten_ds_forms__WEBPACK_IMPORTED_MODULE_1__.XZ,Object.assign({},args,{onChange:event=>{setLabelText("Checkbox har blitt klikket på"),args.onChange&&args.onChange(event)},children:labelText}))},name:"With EventHandlers",args:Object.assign({},defaultArgs,{onChange:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.fn)()}),parameters:{imageSnapshot:{disable:!0}},play:async({args,canvasElement})=>{const inputNode=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByRole("checkbox");await _storybook_test__WEBPACK_IMPORTED_MODULE_2__.mV.click(inputNode),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.X_)((()=>(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(args.onChange).toHaveBeenCalled()))}};WithRef.parameters={...WithRef.parameters,docs:{...WithRef.parameters?.docs,source:{originalSource:"{\n  name: 'With Ref (FA1)',\n  args: {\n    ...defaultArgs,\n    ref: (instance: HTMLInputElement | null): void => {\n      if (instance) {\n        instance.name = 'dummyNameForwardedFromRef';\n      }\n    }\n  },\n  argTypes: {\n    ref: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      disable: true\n    }\n  },\n  play: verifyAttribute('name', 'dummyNameForwardedFromRef')\n} satisfies Story",...WithRef.parameters?.docs?.source}}},WithAttributes.parameters={...WithAttributes.parameters,docs:{...WithAttributes.parameters?.docs,source:{originalSource:"{\n  name: 'With Attributes (FA2-5)',\n  args: {\n    ...defaultArgs,\n    id: 'htmlid',\n    className: 'dummyClassname',\n    lang: 'nb',\n    'data-testid': '123ID',\n    form: '123form'\n  },\n  argTypes: {\n    id: {\n      table: {\n        disable: false\n      }\n    },\n    className: {\n      table: {\n        disable: false\n      }\n    },\n    lang: {\n      table: {\n        disable: false\n      }\n    },\n    'data-testid': {\n      table: {\n        disable: false\n      }\n    },\n    form: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByRole('checkbox');\n    const container = canvas.getAllByRole('generic')[1];\n    await expect(inputNode).toHaveAttribute('id', 'htmlid');\n    await expect(container).toHaveClass('dummyClassname');\n    await expect(container).toHaveAttribute('lang', 'nb');\n    await expect(inputNode).toHaveAttribute('data-testid', '123ID');\n    await expect(inputNode).toHaveAttribute('form', '123form');\n  }\n} satisfies Story",...WithAttributes.parameters?.docs?.source}}},Defaults.parameters={...Defaults.parameters,docs:{...Defaults.parameters?.docs,source:{originalSource:"{\n  name: 'Defaults (A1, B1)',\n  args: {\n    ...defaultArgs\n  },\n  argTypes: {\n    children: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      hover: `${wrapper} label`,\n      focus: `${wrapper} input`,\n      click: `${wrapper} label`\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByLabelText(defaultLabelText);\n    await expect(inputNode).toBeInTheDocument();\n    await expect(inputNode.tagName).toBe('INPUT');\n    await expect(inputNode).not.toHaveAttribute('aria-invalid');\n    await expect(inputNode).not.toBeChecked();\n    await expect(inputNode).not.toBeRequired();\n    await expect(inputNode).toBeEnabled();\n    await expect(inputNode).not.toHaveAttribute('aria-describedby');\n    const errorMessage = canvas.getAllByRole('generic')[6];\n    await expect(errorMessage).toBeInTheDocument();\n  }\n} satisfies Story",...Defaults.parameters?.docs?.source}}},WithDescription.parameters={...WithDescription.parameters,docs:{...WithDescription.parameters?.docs,source:{originalSource:"{\n  name: 'With Description (A1)',\n  args: {\n    ...defaultArgs,\n    description: 'En beskrivelse av punktet'\n  },\n  argTypes: {\n    description: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      hover: `${wrapper} label`,\n      focus: `${wrapper} input`,\n      click: `${wrapper} label`\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const description = canvas.getByText('En beskrivelse av punktet');\n    await expect(description).toBeInTheDocument();\n  }\n} satisfies Story",...WithDescription.parameters?.docs?.source}}},WithDescriptionAndLongText.parameters={...WithDescriptionAndLongText.parameters,docs:{...WithDescriptionAndLongText.parameters?.docs,source:{originalSource:"{\n  name: 'With Description And Long Text (A1)',\n  args: {\n    ...defaultArgs,\n    children: 'Får ekstra lang reisevei til jobb på grunn av levering til barnehage eller skolefritidsordning eller annen fritidsordning',\n    description: 'Litt rart å ha en beskrivende tekst rett under en lang tekst, men sånn har det blitt'\n  },\n  argTypes: {\n    description: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    viewport: {\n      defaultViewport: '--breakpoint-xs'\n    }\n  }\n} satisfies Story",...WithDescriptionAndLongText.parameters?.docs?.source}}},WithDescriptionAndDisabled.parameters={...WithDescriptionAndDisabled.parameters,docs:{...WithDescriptionAndDisabled.parameters?.docs,source:{originalSource:"{\n  name: 'With Description And Disabled (A1)',\n  args: {\n    ...defaultArgs,\n    description: 'En beskrivelse av punktet',\n    disabled: true\n  },\n  argTypes: {\n    description: {\n      table: {\n        disable: false\n      }\n    },\n    disabled: {\n      table: {\n        disable: false\n      }\n    }\n  }\n} satisfies Story",...WithDescriptionAndDisabled.parameters?.docs?.source}}},WithLongText.parameters={...WithLongText.parameters,docs:{...WithLongText.parameters?.docs,source:{originalSource:"{\n  name: 'With Long Text (A2)',\n  args: {\n    ...defaultArgs,\n    children: 'Får ekstra lang reisevei til jobb på grunn av levering til barnehage eller skolefritidsordning eller annen fritidsordning'\n  },\n  argTypes: {\n    children: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    viewport: {\n      defaultViewport: '--breakpoint-xs'\n    }\n  }\n} satisfies Story",...WithLongText.parameters?.docs?.source}}},WithLongTextAndBreaking.parameters={...WithLongTextAndBreaking.parameters,docs:{...WithLongTextAndBreaking.parameters?.docs,source:{originalSource:"{\n  name: 'With Long Text And Breaking (A2)',\n  args: {\n    ...defaultArgs,\n    children: 'Fårekstrareiseveitiljobbpågrunnavleveringtilbarnehageellerskolefritidsordning'\n  },\n  argTypes: {\n    children: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    viewport: {\n      defaultViewport: '--breakpoint-xs'\n    }\n  }\n} satisfies Story",...WithLongTextAndBreaking.parameters?.docs?.source}}},WithHideLabel.parameters={...WithHideLabel.parameters,docs:{...WithHideLabel.parameters?.docs,source:{originalSource:"{\n  name: 'With HideLabel (A2)',\n  args: {\n    ...defaultArgs,\n    hideLabel: true\n  },\n  argTypes: {\n    hideLabel: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByLabelText(defaultLabelText);\n    await expect(inputNode).toBeInTheDocument();\n  }\n} satisfies Story",...WithHideLabel.parameters?.docs?.source}}},WithChecked.parameters={...WithChecked.parameters,docs:{...WithChecked.parameters?.docs,source:{originalSource:"{\n  name: 'With Checked (A1, A3)',\n  args: {\n    ...defaultArgs,\n    checked: true\n  },\n  argTypes: {\n    checked: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      hover: `${wrapper} label`,\n      focus: `${wrapper} input`,\n      click: `${wrapper} label`\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByRole('checkbox');\n    await expect(inputNode).toBeChecked();\n    await expect(inputNode).not.toHaveAttribute('aria-invalid');\n  }\n} satisfies Story",...WithChecked.parameters?.docs?.source}}},WithDisabled.parameters={...WithDisabled.parameters,docs:{...WithDisabled.parameters?.docs,source:{originalSource:"{\n  name: 'With Disabled (A1, A5 delvis, B2)',\n  args: {\n    ...defaultArgs,\n    disabled: true\n  },\n  argTypes: {\n    disabled: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByRole('checkbox');\n    await expect(inputNode).toBeDisabled();\n  }\n} satisfies Story",...WithDisabled.parameters?.docs?.source}}},WithDisabledAndChecked.parameters={...WithDisabledAndChecked.parameters,docs:{...WithDisabledAndChecked.parameters?.docs,source:{originalSource:"{\n  name: 'With Disabled And Checked (A1, A5 delvis, B2)',\n  args: {\n    ...defaultArgs,\n    checked: true,\n    disabled: true\n  },\n  argTypes: {\n    checked: {\n      table: {\n        disable: false\n      }\n    },\n    disabled: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByRole('checkbox');\n    await expect(inputNode).toBeChecked();\n    await expect(inputNode).toBeDisabled();\n  }\n} satisfies Story",...WithDisabledAndChecked.parameters?.docs?.source}}},WithRequired.parameters={...WithRequired.parameters,docs:{...WithRequired.parameters?.docs,source:{originalSource:"{\n  name: 'With Required (B3)',\n  args: {\n    ...defaultArgs,\n    required: true\n  },\n  argTypes: {\n    required: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByRole('checkbox');\n    await expect(inputNode).toBeRequired();\n  }\n} satisfies Story",...WithRequired.parameters?.docs?.source}}},WithRequiredAndMark.parameters={...WithRequiredAndMark.parameters,docs:{...WithRequiredAndMark.parameters?.docs,source:{originalSource:"{\n  name: 'With Required And Mark (A1, B3)',\n  args: {\n    ...defaultArgs,\n    required: true,\n    showRequiredMark: true\n  },\n  argTypes: {\n    required: {\n      table: {\n        disable: false\n      }\n    },\n    showRequiredMark: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByRole('checkbox');\n    await expect(inputNode).toBeRequired();\n  }\n} satisfies Story",...WithRequiredAndMark.parameters?.docs?.source}}},WithRequiredAndChecked.parameters={...WithRequiredAndChecked.parameters,docs:{...WithRequiredAndChecked.parameters?.docs,source:{originalSource:"{\n  name: 'With Required And Checked (B3)',\n  args: {\n    ...defaultArgs,\n    checked: true,\n    required: true\n  },\n  argTypes: {\n    checked: {\n      table: {\n        disable: false\n      }\n    },\n    required: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      disable: true\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByRole('checkbox');\n    await expect(inputNode).toBeChecked();\n    await expect(inputNode).not.toBeRequired();\n  }\n} satisfies Story",...WithRequiredAndChecked.parameters?.docs?.source}}},WithError.parameters={...WithError.parameters,docs:{...WithError.parameters?.docs,source:{originalSource:"{\n  name: 'With Error And ErrorMessage (A1, B4)',\n  args: {\n    ...defaultArgs,\n    errorMessage: defaultErrorMessage,\n    hasError: true\n  },\n  argTypes: {\n    errorMessage: {\n      table: {\n        disable: false\n      }\n    },\n    hasError: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      hover: `${wrapper} label`,\n      focus: `${wrapper} input`,\n      click: `${wrapper} label`\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const errorMessageNode = canvas.getAllByRole('generic')[6];\n    await expect(errorMessageNode).toHaveAttribute('id');\n    const inputNode = canvas.getByRole('checkbox', {\n      description: defaultErrorMessage\n    });\n    await expect(inputNode).toHaveAttribute('aria-invalid', 'true');\n  }\n} satisfies Story",...WithError.parameters?.docs?.source}}},WithDisabledAndRequired.parameters={...WithDisabledAndRequired.parameters,docs:{...WithDisabledAndRequired.parameters?.docs,source:{originalSource:"{\n  name: 'With Disabled And Required (A1)',\n  args: {\n    ...defaultArgs,\n    disabled: true,\n    required: true,\n    showRequiredMark: true\n  },\n  argTypes: {\n    disabled: {\n      table: {\n        disable: false\n      }\n    },\n    required: {\n      table: {\n        disable: false\n      }\n    },\n    showRequiredMark: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByRole('checkbox');\n    await expect(inputNode).toBeDisabled();\n    await expect(inputNode).toBeRequired();\n  }\n} satisfies Story",...WithDisabledAndRequired.parameters?.docs?.source}}},WithErrorAndRequired.parameters={...WithErrorAndRequired.parameters,docs:{...WithErrorAndRequired.parameters?.docs,source:{originalSource:"{\n  name: 'With Error And Required (A1)',\n  args: {\n    ...defaultArgs,\n    errorMessage: 'Feilmelding',\n    hasError: true,\n    required: true,\n    showRequiredMark: true\n  },\n  argTypes: {\n    errorMessage: {\n      table: {\n        disable: false\n      }\n    },\n    hasError: {\n      table: {\n        disable: false\n      }\n    },\n    required: {\n      table: {\n        disable: false\n      }\n    },\n    showRequiredMark: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      hover: `${wrapper} label`,\n      focus: `${wrapper} input`\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByRole('checkbox');\n    await expect(inputNode).toHaveAttribute('aria-invalid', 'true');\n    await expect(inputNode).toBeRequired();\n  }\n} satisfies Story",...WithErrorAndRequired.parameters?.docs?.source}}},WithCheckedAndRequired.parameters={...WithCheckedAndRequired.parameters,docs:{...WithCheckedAndRequired.parameters?.docs,source:{originalSource:"{\n  name: 'With Checked And Required (B3)',\n  args: {\n    ...defaultArgs,\n    checked: true,\n    required: true\n  },\n  argTypes: {\n    checked: {\n      table: {\n        disable: false\n      }\n    },\n    required: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByRole('checkbox');\n    await expect(inputNode).toBeChecked();\n    await expect(inputNode).not.toBeRequired();\n  }\n} satisfies Story",...WithCheckedAndRequired.parameters?.docs?.source}}},WithAriaDescribedby.parameters={...WithAriaDescribedby.parameters,docs:{...WithAriaDescribedby.parameters?.docs,source:{originalSource:"{\n  name: 'With AriaDescribedby (B1)',\n  args: {\n    ...defaultArgs,\n    ariaDescribedby: 'testID'\n  },\n  argTypes: {\n    ariaDescribedby: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      disable: true\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByRole('checkbox');\n    await expect(inputNode).toHaveAttribute('aria-describedby');\n    await expect(inputNode).toHaveAttribute('aria-describedby', expect.stringMatching('testID'));\n  }\n} satisfies Story",...WithAriaDescribedby.parameters?.docs?.source}}},WithValue.parameters={...WithValue.parameters,docs:{...WithValue.parameters?.docs,source:{originalSource:"{\n  name: 'With Value',\n  args: {\n    ...defaultArgs,\n    value: 'test_value_checkbox'\n  },\n  argTypes: {\n    value: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      disable: true\n    }\n  },\n  play: verifyAttribute('value', 'test_value_checkbox')\n} satisfies Story",...WithValue.parameters?.docs?.source}}},WithDefaultChecked.parameters={...WithDefaultChecked.parameters,docs:{...WithDefaultChecked.parameters?.docs,source:{originalSource:"{\n  name: 'With DefaultChecked',\n  args: {\n    ...defaultArgs,\n    defaultChecked: true\n  },\n  argTypes: {\n    defaultChecked: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      disable: true\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByRole('checkbox');\n    await expect(inputNode).toBeChecked();\n  }\n} satisfies Story",...WithDefaultChecked.parameters?.docs?.source}}},WithName.parameters={...WithName.parameters,docs:{...WithName.parameters?.docs,source:{originalSource:"{\n  name: 'With Name',\n  args: {\n    ...defaultArgs,\n    name: 'test_name_checkbox'\n  },\n  argTypes: {\n    name: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      disable: true\n    }\n  },\n  play: verifyAttribute('name', 'test_name_checkbox')\n} satisfies Story",...WithName.parameters?.docs?.source}}},WithEventHandlers.parameters={...WithEventHandlers.parameters,docs:{...WithEventHandlers.parameters?.docs,source:{originalSource:"{\n  render: EventHandlersTemplate,\n  name: 'With EventHandlers',\n  args: {\n    ...defaultArgs,\n    onChange: fn()\n  },\n  parameters: {\n    imageSnapshot: {\n      disable: true\n    }\n  },\n  play: async ({\n    args,\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const inputNode = canvas.getByRole('checkbox');\n    await userEvent.click(inputNode);\n    await waitFor(() => expect(args.onChange).toHaveBeenCalled());\n  }\n} satisfies Story",...WithEventHandlers.parameters?.docs?.source}}};const __namedExportsOrder=["WithRef","WithAttributes","Defaults","WithDescription","WithDescriptionAndLongText","WithDescriptionAndDisabled","WithLongText","WithLongTextAndBreaking","WithHideLabel","WithChecked","WithDisabled","WithDisabledAndChecked","WithRequired","WithRequiredAndMark","WithRequiredAndChecked","WithError","WithDisabledAndRequired","WithErrorAndRequired","WithCheckedAndRequired","WithAriaDescribedby","WithValue","WithDefaultChecked","WithName","WithEventHandlers"]}}]);