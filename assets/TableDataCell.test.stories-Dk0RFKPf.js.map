{"version":3,"file":"TableDataCell.test.stories-Dk0RFKPf.js","sources":["../../../../apps/ds-playground/src/stories/__tests__/TableDataCell.test.stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from '@storybook/react';\nimport { expect, within } from '@storybook/test';\n\nimport { Table } from '@skatteetaten/ds-table';\n\nconst meta = {\n  component: Table.DataCell,\n  title: 'Tester/Table/DataCell',\n  argTypes: {\n    // Baseprops\n    key: { table: { disable: true } },\n    ref: { table: { disable: true } },\n    className: { table: { disable: true } },\n    id: { table: { disable: true } },\n    lang: { table: { disable: true } },\n    'data-testid': { table: { disable: true } },\n    // Props\n    alignment: { table: { disable: true } },\n    as: { table: { disable: true } },\n    colSpan: { table: { disable: true } },\n    rowSpan: { table: { disable: true } },\n    scope: { table: { disable: true } },\n    children: { table: { disable: true } },\n  },\n} satisfies Meta<typeof Table.DataCell>;\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nconst defaultArgs = {\n  children: 'cake',\n};\n\nexport const WithRef = {\n  name: 'With Ref (FA1)',\n  args: {\n    ...defaultArgs,\n    ref: (instance: HTMLTableCellElement | null): void => {\n      if (instance) {\n        instance.id = 'dummyIdForwardedFromRef';\n      }\n    },\n  },\n  argTypes: {\n    ref: { table: { disable: false } },\n  },\n  parameters: {\n    imageSnapshot: { disable: true },\n  },\n  play: async ({ canvasElement }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const table = canvas.getByRole('cell');\n    await expect(table).toBeInTheDocument();\n    await expect(table).toHaveAttribute('id', 'dummyIdForwardedFromRef');\n  },\n} satisfies Story;\n\nexport const WithAttributes = {\n  name: 'With Attributes (FA2-5)',\n  args: {\n    ...defaultArgs,\n    id: 'htmlId',\n    className: 'dummyClassname',\n    lang: 'nb',\n    'data-testid': '123ID',\n  },\n  argTypes: {\n    id: { table: { disable: false } },\n    className: { table: { disable: false } },\n    lang: { table: { disable: false } },\n    'data-testid': { table: { disable: false } },\n  },\n  parameters: {\n    imageSnapshot: { disable: true },\n  },\n  play: async ({ canvasElement }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const dataCell = canvas.getByRole('cell');\n    await expect(dataCell).toHaveClass('dummyClassname');\n    await expect(dataCell).toHaveAttribute('id', 'htmlId');\n    await expect(dataCell).toHaveAttribute('lang', 'nb');\n    await expect(dataCell).toHaveAttribute('data-testid', '123ID');\n  },\n} satisfies Story;\n\nexport const WithThAndScope = {\n  name: 'With Scope And As th (TableRow B2, TableHeader B1)',\n  args: {\n    ...defaultArgs,\n    as: 'th',\n    scope: 'row',\n  },\n  argTypes: {\n    as: { table: { disable: false } },\n    scope: { table: { disable: false } },\n  },\n  parameters: {\n    imageSnapshot: { disable: true },\n  },\n  play: async ({ canvasElement }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const dataCell = canvas.getByRole('rowheader');\n    await expect(dataCell).toHaveAttribute('scope', 'row');\n  },\n} satisfies Story;\n\nexport const WithChildren = {\n  name: 'With children (TableRow A1)',\n  args: {\n    children: 'cellChildren',\n  },\n  argTypes: {\n    children: { table: { disable: false } },\n  },\n  parameters: {\n    imageSnapshot: { disable: true },\n  },\n  play: async ({ canvasElement }): Promise<void> => {\n    const canvas = within(canvasElement);\n    await expect(canvas.getByText('cellChildren')).toBeInTheDocument();\n  },\n} satisfies Story;\n"],"names":["meta","component","Table","DataCell","title","argTypes","key","table","disable","ref","className","id","lang","alignment","as","colSpan","rowSpan","scope","children","defaultArgs","WithRef","name","args","instance","parameters","imageSnapshot","play","canvasElement","within","getByRole","expect","toBeInTheDocument","toHaveAttribute","WithAttributes","dataCell","toHaveClass","WithThAndScope","WithChildren","canvas","getByText","docs","source","originalSource"],"mappings":"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"}