{"version":3,"file":"preview-42OkNvhI.js","sources":["../../../../node_modules/mockdate/lib/mockdate.js","../../../../apps/ds-playground/.storybook/preview.tsx"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.MockDate = {}));\n}(this, (function (exports) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\n\n    var RealDate = Date;\r\n    var now = null;\r\n    var MockDate = /** @class */ (function (_super) {\r\n        __extends(Date, _super);\r\n        function Date(y, m, d, h, M, s, ms) {\r\n            _super.call(this) || this;\r\n            var date;\r\n            switch (arguments.length) {\r\n                case 0:\r\n                    if (now !== null) {\r\n                        date = new RealDate(now.valueOf());\r\n                    }\r\n                    else {\r\n                        date = new RealDate();\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    date = new RealDate(y);\r\n                    break;\r\n                default:\r\n                    d = typeof d === 'undefined' ? 1 : d;\r\n                    h = h || 0;\r\n                    M = M || 0;\r\n                    s = s || 0;\r\n                    ms = ms || 0;\r\n                    date = new RealDate(y, m, d, h, M, s, ms);\r\n                    break;\r\n            }\r\n            return date;\r\n        }\r\n        return Date;\r\n    }(RealDate));\r\n    MockDate.prototype = RealDate.prototype;\r\n    MockDate.UTC = RealDate.UTC;\r\n    MockDate.now = function () {\r\n        return new MockDate().valueOf();\r\n    };\r\n    MockDate.parse = function (dateString) {\r\n        return RealDate.parse(dateString);\r\n    };\r\n    MockDate.toString = function () {\r\n        return RealDate.toString();\r\n    };\r\n    function set(date) {\r\n        var dateObj = new Date(date.valueOf());\r\n        if (isNaN(dateObj.getTime())) {\r\n            throw new TypeError('mockdate: The time set is an invalid date: ' + date);\r\n        }\r\n        // @ts-ignore\r\n        Date = MockDate;\r\n        now = dateObj.valueOf();\r\n    }\r\n    function reset() {\r\n        Date = RealDate;\r\n    }\r\n    var mockdate = {\r\n        set: set,\r\n        reset: reset,\r\n    };\n\n    exports.default = mockdate;\n    exports.reset = reset;\n    exports.set = set;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/* eslint-disable @typescript-eslint/no-var-requires */\nimport { JSX } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport breakpoints from '@skatteetaten/ds-core-designtokens/designtokens/breakpoints.json';\nimport {\n  dsI18n,\n  getCommonClassNameDefault,\n  Languages,\n} from '@skatteetaten/ds-core-utils';\nimport { useEffect, useGlobals } from '@storybook/preview-api';\nimport { Decorator, Preview } from '@storybook/react';\nimport * as MockDate from 'mockdate';\n\nimport { category } from './helpers';\n\nimport '@skatteetaten/ds-core-designtokens/index.css';\nimport './playground.css';\nimport '../src/stories/designtokens/designtokens.css';\n//const breakpoints = require('@skatteetaten/ds-core-designtokens/designtokens/breakpoints.json');\n//TODO hvorfor feiler typecheck når breakpoints importeres med import i stedet for require\n\nconst LanguageUpdater: Decorator = (Story, context) => {\n  const [{ locale }, updateGlobals] = useGlobals();\n  useEffect(() => {\n    const locale = context.parameters.locale;\n    if (locale) {\n      updateGlobals({ locale: context.parameters.locale });\n    }\n  }, [context.parameters.locale, updateGlobals]);\n  useEffect(() => {\n    dsI18n.changeLanguage(locale);\n    const lang = locale.substring(0, locale.indexOf('_'));\n    document.documentElement.setAttribute('lang', lang);\n  }, [locale]);\n  return <Story />;\n};\n\nconst testBlock: Decorator = (Story, context) => {\n  if (context.title.startsWith('Tester')) {\n    return (\n      <div data-test-block>\n        <Story />\n      </div>\n    );\n  } else {\n    return <Story />;\n  }\n};\n\nconst mockDate: Decorator = (Story, context) => {\n  MockDate.reset();\n  if (context.parameters.mockDate) {\n    MockDate.set(context.parameters.mockDate);\n  }\n  return <Story />;\n};\n\nconst makeViewPort = (\n  dsbreakpoint: keyof typeof breakpoints | '--mobile'\n): object => {\n  return {\n    [dsbreakpoint]: {\n      name: dsbreakpoint,\n      styles: {\n        width:\n          dsbreakpoint === '--mobile' ? '320px' : breakpoints[dsbreakpoint],\n        height: '100%',\n      },\n    },\n  };\n};\n\nconst DSViewports = {\n  ...makeViewPort('--mobile'),\n  ...makeViewPort('--breakpoint-xs'),\n  ...makeViewPort('--breakpoint-s'),\n  ...makeViewPort('--breakpoint-m'),\n  ...makeViewPort('--breakpoint-l'),\n  ...makeViewPort('--breakpoint-xl'),\n};\n\nconst parameters = {\n  docs: { controls: { sort: 'requiredFirst' } },\n  controls: {\n    sort: 'requiredFirst',\n    hideNoControlsWarning: true,\n  },\n  viewport: { viewports: DSViewports },\n  options: {\n    storySort: {\n      method: 'alphabetical',\n      order: ['Generelt', 'Designtokens', 'Komponenter', 'Tester'],\n    },\n  },\n  backgrounds: {\n    default: 'light',\n    values: [\n      {\n        name: 'light',\n        value: 'var(--palette-graphite-0)',\n      },\n      {\n        name: 'dark',\n        value: 'var(--palette-graphite-100)',\n      },\n      {\n        name: 'grey',\n        value: 'var(--palette-graphite-70)',\n      },\n      {\n        name: 'themePrimary',\n        value: 'var(--theme-primary)',\n      },\n    ],\n  },\n};\n\nconst argTypes = {\n  key: {\n    control: { disable: true },\n    description:\n      'Spesielt string attributt som brukes for å iterere gjennom elementer',\n    table: { type: { summary: 'string' }, category: category.baseProps },\n  },\n  ref: {\n    control: { disable: true },\n    description: 'React ref sendt gjennom React.forwardref',\n    table: {\n      type: { summary: 'React.ForwardedRef' },\n      category: category.baseProps,\n    },\n  },\n  className: {\n    control: 'select',\n    options: ['', 'dummyClassname'],\n    description: 'html class attributt til noden',\n    table: {\n      type: { summary: 'string' },\n      category: category.baseProps,\n      defaultValue: { summary: getCommonClassNameDefault() },\n    },\n  },\n  id: {\n    control: 'text',\n    description: 'html id attributt',\n    table: { type: { summary: 'string' }, category: category.baseProps },\n  },\n  lang: {\n    control: 'text',\n    description: 'html lang attributt',\n    table: { type: { summary: 'string' }, category: category.baseProps },\n  },\n  'data-testid': {\n    control: 'text',\n    description: 'html data attributt som brukes for tester',\n    table: { type: { summary: 'string' }, category: category.baseProps },\n  },\n} satisfies Preview['argTypes'];\n\nconst langs = Object.entries(Languages).map(([key, value]) => ({\n  title: key,\n  value,\n}));\n\nconst Spacing = [\n  { title: 'On', value: 'spacing' },\n  { title: 'Off', value: 'no-spacing' },\n];\n\nconst clearStyles = (element: HTMLElement): void => {\n  for (const className of Object.values(Spacing)) {\n    element.classList.remove(className.value);\n  }\n};\n\nconst applyStyle = (element: HTMLElement, className: string): void => {\n  element.classList.add(className);\n};\n\nconst SpacingUpdater: Decorator = (Story, context) => {\n  useEffect(() => {\n    const body = window.document.body;\n    clearStyles(body);\n    applyStyle(body, context.globals.spacing);\n    return () => {\n      clearStyles(body);\n    };\n  }, [context.globals.spacing]);\n  return <Story />;\n};\n\nconst globalTypes = {\n  locale: {\n    name: 'Locale',\n    description: 'Internationalization locale',\n    defaultValue: Languages.Bokmal,\n    toolbar: {\n      icon: 'globe',\n      items: [...langs, { title: 'key', value: 'cimode' }],\n    },\n  },\n  spacing: {\n    name: 'Spacing',\n    description: 'Remove padding and margin around component',\n    defaultValue: Spacing[0].value,\n    toolbar: {\n      title: 'Margin',\n      icon: 'browser',\n      items: Spacing,\n    },\n  },\n};\n\nconst preview = {\n  decorators: [\n    (Story): JSX.Element => <Story />,\n    LanguageUpdater,\n    testBlock,\n    mockDate,\n    SpacingUpdater,\n  ],\n  parameters,\n  globalTypes,\n  argTypes,\n} satisfies Preview;\nexport default preview;\n"],"names":["global","factory","exports","this","extendStatics","d","b","p","__extends","__","RealDate","now","MockDate","_super","Date","y","m","h","M","s","ms","date","dateString","set","dateObj","reset","mockdate","cov_pvoberztw","path","hash","gcv","coverageData","coverage","actualCoverage","useEffect","useGlobals","__STORYBOOK_MODULE_PREVIEW_API__","LanguageUpdater","Story","context","f","locale","updateGlobals","parameters","dsI18n","changeLanguage","lang","substring","indexOf","document","documentElement","setAttribute","jsx","testBlock","title","startsWith","children","mockDate","dsbreakpoint","name","styles","width","breakpoints","height","DSViewports","makeViewPort","docs","controls","sort","hideNoControlsWarning","viewport","viewports","options","storySort","method","order","backgrounds","default","values","value","argTypes","key","control","disable","description","table","type","summary","category","baseProps","ref","className","defaultValue","getCommonClassNameDefault","id","langs","Object","entries","Languages","map","Spacing","clearStyles","element","classList","remove","applyStyle","add","SpacingUpdater","body","window","globals","spacing","globalTypes"],"mappings":"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GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OA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","x_google_ignoreList":[0]}