{"version":3,"file":"Card.stories-tadjiLX8.js","sources":["../../../../apps/ds-playground/src/stories/components/Card.stories.tsx"],"sourcesContent":["import { JSX, useRef } from 'react';\n\nimport { Meta, StoryObj } from '@storybook/react';\n\nimport { IconButton, InlineButton, Link } from '@skatteetaten/ds-buttons';\nimport {\n  Card,\n  DescriptionList,\n  getCardColorDefault,\n} from '@skatteetaten/ds-content';\nimport {\n  ArbeidTrygdPensjonIcon,\n  CancelSVGpath,\n  CheckSVGpath,\n  DeleteSVGpath,\n  EditSVGpath,\n  FileIcon,\n  InfoOutlineSVGpath,\n  WarningIcon,\n} from '@skatteetaten/ds-icons';\nimport { Tag } from '@skatteetaten/ds-status';\nimport { Heading, Paragraph } from '@skatteetaten/ds-typography';\n\nimport { category } from '../../../.storybook/helpers';\nimport { loremIpsum } from '../__tests__/testUtils/storybook.testing.utils';\nimport { exampleParameters } from '../utils/stories.utils';\n\nCard.Header.displayName = 'Card.Header';\nCard.Content.displayName = 'Card.Content';\nCard.Actions.displayName = 'Card.Actions';\nCard.Alert.displayName = 'Card.Alert';\n\nconst meta = {\n  component: Card,\n  title: 'Komponenter/Card/Card',\n  argTypes: {\n    // Props\n    children: {\n      control: 'text',\n      table: { category: category.props },\n    },\n    spacing: {\n      table: { category: category.props },\n    },\n    color: {\n      control: 'inline-radio',\n      table: {\n        category: category.props,\n        defaultValue: { summary: getCardColorDefault() },\n      },\n    },\n    // Aria\n    ariaLabelledBy: { table: { category: category.aria } },\n  },\n  args: {\n    children: loremIpsum,\n  },\n} satisfies Meta<typeof Card>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Preview: Story = {\n  render: (args) => (\n    <Card {...args}>\n      <Card.Content>{args.children}</Card.Content>\n    </Card>\n  ),\n} satisfies Story;\n\nexport const Examples: Story = {\n  name: 'Skjemakort',\n  render: (_args): JSX.Element => {\n    return (\n      <div className={'containerS flex flexColumn gapS'}>\n        <Card color={'graphite'}>\n          <Card.Header\n            rightContent={\n              <Tag svgPath={InfoOutlineSVGpath}>{'Endret av deg'}</Tag>\n            }\n          >\n            <Heading as={'h3'} level={3}>\n              {'Andre inntekter'}\n            </Heading>\n          </Card.Header>\n          <Card.Content>\n            <DescriptionList>\n              <DescriptionList.Element term={'Beløp'}>\n                {'654 321'}\n              </DescriptionList.Element>\n              <DescriptionList.Element term={'Fradrag'}>\n                {'321 098'}\n              </DescriptionList.Element>\n              <DescriptionList.Element term={'Ytelser'}>\n                {'987 654'}\n              </DescriptionList.Element>\n            </DescriptionList>\n          </Card.Content>\n          <Card.Actions>\n            <InlineButton svgPath={EditSVGpath}>{'Endre'}</InlineButton>\n          </Card.Actions>\n        </Card>\n\n        <Card color={'graphite'}>\n          <Card.Header\n            rightContent={\n              <Paragraph>\n                <InlineButton svgPath={DeleteSVGpath}>{'Fjern'}</InlineButton>\n              </Paragraph>\n            }\n          >\n            <ArbeidTrygdPensjonIcon\n              size={'extraLarge'}\n              className={'flexShrinkZero'}\n            />\n            <Heading as={'h3'} level={3}>\n              {'Andre inntekter'}\n            </Heading>\n          </Card.Header>\n          <Card.Content>\n            <DescriptionList>\n              <DescriptionList.Element term={'Opprinnelig beløp'}>\n                {'1 753 kroner'}\n              </DescriptionList.Element>\n              <DescriptionList.Element term={'Forsinkelsesrenter'}>\n                {'200 kroner'}\n              </DescriptionList.Element>\n              <DescriptionList.Element term={'Betaligsfrist'}>\n                {'09.10.2024'}\n              </DescriptionList.Element>\n            </DescriptionList>\n          </Card.Content>\n          <Card.Actions>\n            <InlineButton svgPath={EditSVGpath}>{'Endre'}</InlineButton>\n          </Card.Actions>\n        </Card>\n\n        <Card>\n          <Card.Header\n            rightContent={\n              <Tag color={'forest'} svgPath={CheckSVGpath}>\n                {'OK til innsending'}\n              </Tag>\n            }\n          >\n            <Heading as={'h3'} level={3} hasSpacing>\n              {'Andre inntekter'}\n            </Heading>\n          </Card.Header>\n          <Card.Content>\n            <DescriptionList>\n              <DescriptionList.Element term={'Beløp'}>\n                {'1 000 000 kr'}\n              </DescriptionList.Element>\n            </DescriptionList>\n          </Card.Content>\n          <Card.Actions>\n            <InlineButton svgPath={EditSVGpath}>{'Endre'}</InlineButton>\n          </Card.Actions>\n        </Card>\n      </div>\n    );\n  },\n} satisfies Story;\nExamples.parameters = exampleParameters;\n\nexport const FileListExample: Story = {\n  name: 'Liste med filer',\n  render: (_args): JSX.Element => {\n    return (\n      <div\n        className={'flex flexColumn gapS width400 topSpacingXL centerMargin'}\n      >\n        <Card spacing={'xxs'} color={'denim'}>\n          <Card.Content\n            classNames={{ children: 'flex' }}\n            rightContent={<IconButton title={'Lukk'} svgPath={CancelSVGpath} />}\n          >\n            <FileIcon className={'flexShrinkZero paddingXS'} size={'small'} />\n            {'mine-hus-og-hoteller.zip'}\n          </Card.Content>\n        </Card>\n\n        <Card spacing={'xxs'} color={'denim'}>\n          <Card.Content\n            classNames={{ children: 'flex' }}\n            rightContent={<IconButton title={'Lukk'} svgPath={CancelSVGpath} />}\n          >\n            <FileIcon\n              className={'blueIcon flexShrinkZero paddingXS'}\n              size={'small'}\n            />\n            <Link className={'resetLinkStyling'} href={'#'}>\n              {'mine-hus-og-hoteller.zip'}\n            </Link>\n          </Card.Content>\n        </Card>\n\n        <Card spacing={'xxs'} color={'burgundy'}>\n          <Card.Content\n            classNames={{ children: 'flex' }}\n            rightContent={<IconButton title={'Lukk'} svgPath={CancelSVGpath} />}\n          >\n            <WarningIcon\n              className={'dangerIcon flexShrinkZero paddingXS'}\n              size={'small'}\n            />\n            {'carlos-santana_smooth-featuring-rob-thomas.mp3'}\n          </Card.Content>\n        </Card>\n      </div>\n    );\n  },\n} satisfies Story;\nFileListExample.parameters = exampleParameters;\n\nexport const AlertExample: Story = {\n  name: 'Card med merknad',\n  render: (_args): JSX.Element => {\n    const headingRef = useRef<HTMLHeadingElement>(null);\n\n    return (\n      <div className={'flex flexWrap gapS'}>\n        <Card className={'cardWidth'}>\n          <Card.Alert\n            variant={'neutral'}\n            title={'Informasjon'}\n            titleAs={'h3'}\n            onClose={(): void => headingRef?.current?.focus()}\n          >\n            <Paragraph>\n              {'Denne tingen kan du kanskje kikke litt på:'}\n            </Paragraph>\n            <Link href={'#'}>{'Navn på et annet kort'}</Link>\n          </Card.Alert>\n          <Card.Header>\n            <Heading ref={headingRef} as={'h3'} level={3} canBeManuallyFocused>\n              {'Andre inntekter'}\n            </Heading>\n          </Card.Header>\n          <Card.Content>\n            <DescriptionList>\n              <DescriptionList.Element term={'Beløp'}>\n                {'654 321'}\n              </DescriptionList.Element>\n            </DescriptionList>\n          </Card.Content>\n          <Card.Actions>\n            <InlineButton svgPath={EditSVGpath}>{'Endre'}</InlineButton>\n          </Card.Actions>\n        </Card>\n\n        <Card className={'cardWidth'}>\n          <Card.Alert\n            variant={'warning'}\n            title={'Merknad'}\n            titleAs={'h3'}\n            onClose={(): void => headingRef?.current?.focus()}\n          >\n            <Paragraph>\n              {\n                'Nå har vi gjort en endring i et annet kort som påvirker dette kortet.'\n              }\n            </Paragraph>\n            <Link href={'#'}>{'Navn på et annet kort'}</Link>\n          </Card.Alert>\n          <Card.Header>\n            <Heading ref={headingRef} as={'h3'} level={3} canBeManuallyFocused>\n              {'Andre inntekter'}\n            </Heading>\n          </Card.Header>\n          <Card.Content>\n            <DescriptionList>\n              <DescriptionList.Element term={'Beløp'}>\n                {'654 321'}\n              </DescriptionList.Element>\n            </DescriptionList>\n          </Card.Content>\n          <Card.Actions>\n            <InlineButton svgPath={EditSVGpath}>{'Endre'}</InlineButton>\n          </Card.Actions>\n        </Card>\n\n        <Card className={'cardWidth'}>\n          <Card.Alert\n            variant={'danger'}\n            title={'Å nei, ikke bra!'}\n            titleAs={'h3'}\n            onClose={(): void => headingRef?.current?.focus()}\n          >\n            <Paragraph>\n              {\n                'Nå bør du fikse på dette kortet for å unngå at [annet kort] blir feil.'\n              }\n            </Paragraph>\n            <Link href={'#'}>{'Navn på et annet kort'}</Link>\n          </Card.Alert>\n          <Card.Header>\n            <Heading ref={headingRef} as={'h3'} level={3} canBeManuallyFocused>\n              {'Andre inntekter'}\n            </Heading>\n          </Card.Header>\n          <Card.Content>\n            <DescriptionList>\n              <DescriptionList.Element term={'Beløp'}>\n                {'654 321'}\n              </DescriptionList.Element>\n            </DescriptionList>\n          </Card.Content>\n          <Card.Actions>\n            <InlineButton svgPath={EditSVGpath}>{'Endre'}</InlineButton>\n          </Card.Actions>\n        </Card>\n      </div>\n    );\n  },\n} satisfies Story;\nAlertExample.parameters = exampleParameters;\n"],"names":["Card","Header","displayName","Content","Actions","Alert","meta","component","title","argTypes","children","control","table","category","props","spacing","color","defaultValue","summary","getCardColorDefault","ariaLabelledBy","aria","args","loremIpsum","Preview","render","jsx","Examples","name","_args","jsxs","Tag","InfoOutlineSVGpath","Heading","DescriptionList","InlineButton","EditSVGpath","Paragraph","DeleteSVGpath","ArbeidTrygdPensjonIcon","CheckSVGpath","parameters","exampleParameters","FileListExample","IconButton","CancelSVGpath","FileIcon","Link","WarningIcon","AlertExample","headingRef","useRef","current","focus","docs","source","originalSource"],"mappings":"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"}