{"version":3,"file":"CardHeader.test.stories-D-W58IfZ.js","sources":["../../../../apps/ds-playground/src/stories/__tests__/CardHeader.test.stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from '@storybook/react';\nimport { expect, within } from '@storybook/test';\n\nimport { Card } from '@skatteetaten/ds-content';\nimport { statusArr } from '@skatteetaten/ds-core-utils';\nimport { InfoOutlineSVGpath } from '@skatteetaten/ds-icons';\nimport { Tag } from '@skatteetaten/ds-status';\nimport { List } from '@skatteetaten/ds-typography';\n\nconst meta = {\n  component: Card.Header,\n  title: 'Tester/Card/Header',\n  argTypes: {\n    // Baseprops\n    key: { table: { disable: true } },\n    ref: { table: { disable: true } },\n    className: { table: { disable: true } },\n    id: { table: { disable: true } },\n    lang: { table: { disable: true } },\n    'data-testid': { table: { disable: true } },\n    // Props\n    children: {\n      table: { disable: true },\n      control: 'text',\n    },\n    rightContent: {\n      table: { disable: true },\n      control: 'text',\n    },\n    spacingVertical: {\n      table: { disable: true },\n    },\n    classNames: {\n      table: { disable: true },\n    },\n  },\n} satisfies Meta<typeof Card.Header>;\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nconst defaultText =\n  'Gruppering av opplysninger i skjema, for eksempel inntekter, personer eller oppsummeringer.';\n\nconst defaultArgs = {\n  children: defaultText,\n  variant: statusArr[1],\n  title: 'Merknad',\n};\n\nexport const WithRef = {\n  name: 'With Ref (FA1)',\n  args: {\n    ...defaultArgs,\n    ref: (instance: HTMLDivElement | null): void => {\n      if (instance) {\n        instance.id = 'dummyIdForwardedFromRef';\n      }\n    },\n  },\n  argTypes: {\n    ref: { table: { disable: false } },\n  },\n  parameters: {\n    imageSnapshot: { disable: true },\n  },\n  play: async ({ canvasElement }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const container = canvas.getAllByRole('generic')[1];\n    await expect(container).toHaveAttribute('id', 'dummyIdForwardedFromRef');\n  },\n} satisfies Story;\n\nexport const WithAttributes = {\n  name: 'With Attributes (FA2-5)',\n  args: {\n    ...defaultArgs,\n    id: 'htmlId',\n    className: 'dummyClassname',\n    lang: 'en',\n    'data-testid': '123ID',\n  },\n  argTypes: {\n    id: { table: { disable: false } },\n    className: { table: { disable: false } },\n    lang: { table: { disable: false } },\n    'data-testid': { table: { disable: false } },\n  },\n  play: async ({ canvasElement }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const cardNote = canvas.getAllByRole('generic')[1];\n    await expect(cardNote).toHaveAttribute('id', 'htmlId');\n    await expect(cardNote).toHaveClass('dummyClassname');\n    await expect(cardNote).toHaveAttribute('lang', 'en');\n    await expect(cardNote).toHaveAttribute('data-testid', '123ID');\n  },\n} satisfies Story;\n\nexport const WithChildrenRigthContent: Story = {\n  name: 'With Children RightContent (A4)',\n  render: (args) => (\n    <Card>\n      <Card.Header {...args} />\n    </Card>\n  ),\n  args: {\n    children: (\n      <List>\n        <List.Element>{'f√∏rste element'}</List.Element>\n        <List.Element>{'andre element'}</List.Element>\n      </List>\n    ),\n    rightContent: <Tag svgPath={InfoOutlineSVGpath}>{'Endret av deg'}</Tag>,\n  },\n  argTypes: {\n    children: { table: { disable: false } },\n    rightContent: { table: { disable: false } },\n  },\n} satisfies Story;\n"],"names":["meta","component","Card","Header","title","argTypes","key","table","disable","ref","className","id","lang","children","control","rightContent","spacingVertical","classNames","defaultText","defaultArgs","variant","statusArr","WithRef","name","args","instance","parameters","imageSnapshot","play","canvasElement","container","within","getAllByRole","expect","toHaveAttribute","WithAttributes","cardNote","toHaveClass","WithChildrenRigthContent","render","jsx","List","Tag","InfoOutlineSVGpath","docs","source","originalSource"],"mappings":"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"}