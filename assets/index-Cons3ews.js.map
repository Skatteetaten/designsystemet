{"version":3,"file":"index-Cons3ews.js","sources":["../../../../libs/ds-content/src/Panel/Panel.tsx","../../../../libs/ds-content/src/DescriptionList/defaults.ts","../../../../libs/ds-content/src/DescriptionListElement/DescriptionListElement.tsx","../../../../libs/ds-content/src/DescriptionList/DescriptionList.tsx","../../../../libs/ds-content/src/index.ts"],"sourcesContent":["import { forwardRef, JSX, useImperativeHandle, useRef } from 'react';\n\nimport { getCommonClassNameDefault } from '@skatteetaten/ds-core-utils';\nimport { Heading } from '@skatteetaten/ds-typography';\n\nimport {\n  getPanelVariantDefault,\n  getPanelSpacingDefault,\n  getPanelColorDefault,\n  getPanelTitleAsDefault,\n  getPanelSubtitleAsDefault,\n  getPanelPaddingDefault,\n} from './defaults';\nimport { PanelPadding, PanelProps, PanelSpacing } from './Panel.types';\n\nimport styles from './Panel.module.scss';\n\nexport const Panel = forwardRef<HTMLDivElement, PanelProps>(\n  (\n    {\n      id,\n      className = getCommonClassNameDefault(),\n      lang,\n      'data-testid': dataTestId,\n      headingRef,\n      canManuallySetTitleFocus,\n      color = getPanelColorDefault(),\n      imageSource,\n      imageSourceAltText,\n      padding = getPanelPaddingDefault(),\n      spacing = getPanelSpacingDefault(),\n      subtitle,\n      subtitleAs = getPanelSubtitleAsDefault(),\n      title,\n      titleAs = getPanelTitleAsDefault(),\n      variant = getPanelVariantDefault(),\n      hideGraphicMobile,\n      hideSubtitle,\n      hideTitle,\n      renderIcon,\n      children,\n    },\n    ref\n  ): JSX.Element => {\n    const panelVariantClassName =\n      variant === 'filled' ? styles.panel_filled : styles.panel_outline;\n    const panelColorClassName = styles[`panel_${color}`];\n    const panelPaddingClassName =\n      styles[\n        `panel_padding${padding.toUpperCase() as Uppercase<PanelPadding>}`\n      ];\n    const panelSpacingClassName =\n      styles[\n        `panel_spacing${spacing.toUpperCase() as Uppercase<PanelSpacing>}`\n      ];\n\n    let panelGraphicClassName = '';\n    if (imageSource) {\n      panelGraphicClassName = styles.panel_graphicImage;\n    } else if (renderIcon) {\n      panelGraphicClassName = `${styles.panel_graphicIcon} ${\n        hideGraphicMobile ? styles.panel_graphicIconHide : ''\n      }`;\n    }\n    const panelClassName =\n      `${styles.panel} ${panelVariantClassName} ${panelColorClassName} ${panelPaddingClassName} ${panelSpacingClassName} ${panelGraphicClassName} ${className}`.trim();\n\n    const graphicClassName = `${styles.panelGraphic} ${\n      hideGraphicMobile ? styles.panelGraphicHide : ''\n    }`.trim();\n    const iconClassName = `${renderIcon ? graphicClassName : ''}`.trim();\n    const articleClassName = `${styles.panelArticle}`.trim();\n    const panelHeadingRef = useRef<HTMLHeadingElement>(null);\n    useImperativeHandle(\n      headingRef,\n      () => panelHeadingRef?.current as HTMLHeadingElement\n    );\n    return (\n      <div\n        ref={ref}\n        id={id}\n        className={panelClassName}\n        lang={lang}\n        data-testid={dataTestId}\n      >\n        {!renderIcon && imageSource && (\n          <div className={`${graphicClassName}`}>\n            <img\n              src={imageSource}\n              alt={imageSourceAltText ?? ''}\n              className={styles.panelImage}\n            />\n          </div>\n        )}\n        {!imageSource && renderIcon && (\n          <div className={iconClassName}>{renderIcon?.()}</div>\n        )}\n        <div className={articleClassName}>\n          {title && (\n            <Heading\n              ref={panelHeadingRef}\n              as={titleAs}\n              level={3}\n              className={hideTitle ? styles.srOnly : ''}\n              hasSpacing={!subtitle || hideSubtitle}\n              canBeManuallyFocused={canManuallySetTitleFocus}\n            >\n              {title}\n            </Heading>\n          )}\n          {subtitle && (\n            <Heading\n              as={subtitleAs}\n              level={5}\n              className={hideSubtitle ? styles.srOnly : ''}\n              hasSpacing\n            >\n              {subtitle}\n            </Heading>\n          )}\n          {children}\n        </div>\n      </div>\n    );\n  }\n);\n\nPanel.displayName = 'Panel';\n\nexport {\n  getPanelVariantDefault,\n  getPanelSpacingDefault,\n  getPanelColorDefault,\n  getPanelTitleAsDefault,\n  getPanelSubtitleAsDefault,\n  getPanelPaddingDefault,\n};\n","import { DescriptionListSize, Orientation } from './DescriptionList.types';\n\nexport const getDescriptionListSizeDefault = (): DescriptionListSize =>\n  'medium';\nexport const getDescriptionListIsVerticalOnMobileDefault = (): boolean => true;\nexport const getDescriptionDirectionDefault = (): Orientation => 'horizontal';\n","import React, { forwardRef } from 'react';\n\nimport { getCommonClassNameDefault } from '@skatteetaten/ds-core-utils';\n\nimport { DescriptionListElementProps } from './DescriptionListElement.types';\n\nimport styles from './DescriptionListElement.module.scss';\n\nexport const DescriptionListElement = forwardRef<\n  HTMLDListElement,\n  DescriptionListElementProps\n>(\n  (\n    {\n      id,\n      className = getCommonClassNameDefault(),\n      lang,\n      'data-testid': dataTestId,\n      term,\n      children,\n    },\n    ref\n  ) => {\n    return (\n      <>\n        <dt\n          ref={ref}\n          id={id}\n          className={`${styles.term} ${className}`.trim()}\n          lang={lang}\n          data-testid={dataTestId}\n        >\n          {term}\n        </dt>\n        <dd className={styles.description}>{children}</dd>\n      </>\n    );\n  }\n);\n\nDescriptionListElement.displayName = 'DescriptionListElement';\n","import { Children, forwardRef } from 'react';\n\nimport {\n  getCommonClassNameDefault,\n  useMediaQuery,\n} from '@skatteetaten/ds-core-utils';\n\nimport {\n  getDescriptionDirectionDefault,\n  getDescriptionListIsVerticalOnMobileDefault,\n  getDescriptionListSizeDefault,\n} from './defaults';\nimport {\n  DescriptionListComponent,\n  DescriptionListProps,\n} from './DescriptionList.types';\nimport { DescriptionListElement } from '../DescriptionListElement/DescriptionListElement';\n\nimport styles from './DescriptionList.module.scss';\n\nexport const DescriptionList = forwardRef<\n  HTMLDListElement,\n  DescriptionListProps\n>(\n  (\n    {\n      id,\n      className = getCommonClassNameDefault(),\n      lang,\n      'data-testid': dataTestId,\n      size = getDescriptionListSizeDefault(),\n      variant,\n      descriptionDirection = getDescriptionDirectionDefault(),\n      descriptionWeight,\n      termWeight,\n      hasSpacing,\n      isVerticalOnMobile = getDescriptionListIsVerticalOnMobileDefault(),\n      children,\n    },\n    ref\n  ) => {\n    const isMobile = !useMediaQuery('(min-width: 640px)');\n    const isHorizontal =\n      variant === 'horizontal' && (!isMobile || !isVerticalOnMobile);\n\n    const verticalClassName =\n      descriptionDirection === 'vertical'\n        ? styles.descriptionList_verticalVertical\n        : styles.descriptionList_vertical;\n\n    const variantClassName = isHorizontal\n      ? styles.descriptionList_horizontal\n      : verticalClassName;\n\n    const sizeClassName = size === 'small' ? styles.descriptionList_small : '';\n    const spacingClassName = hasSpacing ? styles.spacing : '';\n\n    const termClassName =\n      termWeight === 'regular' ? styles.descriptionListTermRegular : '';\n    const descriptionClassName =\n      descriptionWeight === 'bold' ? styles.descriptionListDescriptionBold : '';\n\n    const descriptionListClassname =\n      `${styles.descriptionList} ${variantClassName} ${spacingClassName} ${sizeClassName} ${termClassName} ${descriptionClassName} ${className}`.trim();\n\n    return (\n      <dl\n        ref={ref}\n        id={id}\n        className={descriptionListClassname}\n        lang={lang}\n        data-testid={dataTestId}\n      >\n        {variant === 'horizontal' && (!isMobile || !isVerticalOnMobile)\n          ? Children.map(children, (child) => (\n              <div\n                className={\n                  descriptionDirection === 'horizontal'\n                    ? styles.childWrapper\n                    : undefined\n                }\n              >\n                {child}\n              </div>\n            ))\n          : children}\n      </dl>\n    );\n  }\n) as DescriptionListComponent;\n\nDescriptionList.displayName = 'DescriptionList';\nDescriptionList.Element = DescriptionListElement;\nDescriptionList.Element.displayName = 'DescriptionList.Element';\n\nexport {\n  getDescriptionListSizeDefault,\n  getDescriptionDirectionDefault,\n  getDescriptionListIsVerticalOnMobileDefault,\n};\n","export * from './Panel/Panel';\nexport * from './Panel/Panel.types';\nexport * from './DescriptionList/DescriptionList';\nexport * from './DescriptionList/DescriptionList.types';\n"],"names":["cov_14esj0uvv5","path","hash","global","gcv","coverageData","coverage","actualCoverage","Panel","s","forwardRef","id","className","b","getCommonClassNameDefault","lang","dataTestId","headingRef","canManuallySetTitleFocus","color","getPanelColorDefault","imageSource","imageSourceAltText","padding","getPanelPaddingDefault","spacing","getPanelSpacingDefault","subtitle","subtitleAs","getPanelSubtitleAsDefault","title","titleAs","getPanelTitleAsDefault","variant","getPanelVariantDefault","hideGraphicMobile","hideSubtitle","hideTitle","renderIcon","children","ref","f","panelVariantClassName","styles","panel_filled","panel_outline","panelColorClassName","panelPaddingClassName","toUpperCase","panelSpacingClassName","panelGraphicClassName","panel_graphicImage","panel_graphicIcon","panel_graphicIconHide","panelClassName","panel","trim","graphicClassName","panelGraphic","panelGraphicHide","iconClassName","articleClassName","panelArticle","panelHeadingRef","useRef","useImperativeHandle","current","jsxs","jsx","src","alt","panelImage","Heading","as","level","srOnly","hasSpacing","canBeManuallyFocused","getDescriptionListSizeDefault","cov_3w1bgarik","DescriptionListElement","term","Fragment","cov_2f4y7effo8","DescriptionList","size","descriptionDirection","getDescriptionDirectionDefault","descriptionWeight","termWeight","isVerticalOnMobile","getDescriptionListIsVerticalOnMobileDefault","isMobile","useMediaQuery","isHorizontal","verticalClassName","descriptionList_verticalVertical","descriptionList_vertical","variantClassName","descriptionList_horizontal","sizeClassName","descriptionList_small","spacingClassName","termClassName","descriptionListTermRegular","descriptionClassName","descriptionListDescriptionBold","descriptionListClassname","descriptionList","cov_pxqcbm2s9"],"mappings":"owIAuBqB,SAAAA,GAAA,CAAA,IAAAC,EAAA,mGAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,mGAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA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CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,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"}