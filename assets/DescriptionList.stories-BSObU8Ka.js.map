{"version":3,"file":"DescriptionList.stories-BSObU8Ka.js","sources":["../../../../apps/ds-playground/src/stories/components/DescriptionList.stories.tsx"],"sourcesContent":["import { JSX } from 'react';\n\nimport { Meta, StoryObj } from '@storybook/react';\n\nimport { InlineButton, IconButton } from '@skatteetaten/ds-buttons';\nimport {\n  DescriptionList,\n  getDescriptionListSizeDefault,\n  getDescriptionDirectionDefault,\n  getDescriptionListIsVerticalOnMobileDefault,\n  getDescriptionListVariantDefault,\n  getTermWeightDefault,\n  getDescriptionWeightDefault,\n} from '@skatteetaten/ds-content';\nimport { ErrorMessage } from '@skatteetaten/ds-forms';\nimport {\n  CopySVGpath,\n  EyeOffSVGpath,\n  LockOutlineSVGpath,\n} from '@skatteetaten/ds-icons';\nimport { Popover } from '@skatteetaten/ds-overlays';\nimport { Tag } from '@skatteetaten/ds-status';\n\nimport { category } from '../../../.storybook/helpers';\nimport { exampleParameters } from '../utils/stories.utils';\n\nimport styles from './DescriptionListStory.module.scss';\n\nconst meta = {\n  component: DescriptionList,\n  title: 'Komponenter/DescriptionList/DescriptionList',\n  argTypes: {\n    // Props\n    children: {\n      control: { disable: true },\n      table: { category: category.props },\n    },\n    size: {\n      table: {\n        category: category.props,\n        defaultValue: { summary: getDescriptionListSizeDefault() },\n      },\n    },\n    variant: {\n      table: {\n        category: category.props,\n        defaultValue: { summary: getDescriptionListVariantDefault() },\n      },\n    },\n    hasSpacing: {\n      table: {\n        category: category.props,\n      },\n    },\n    isVerticalOnMobile: {\n      table: {\n        category: category.props,\n        defaultValue: {\n          summary: getDescriptionListIsVerticalOnMobileDefault().toString(),\n        },\n      },\n    },\n    descriptionDirection: {\n      table: {\n        category: category.props,\n        defaultValue: {\n          summary: getDescriptionDirectionDefault(),\n        },\n      },\n    },\n    termWeight: {\n      table: {\n        category: category.props,\n        defaultValue: { summary: getTermWeightDefault() },\n      },\n    },\n    descriptionWeight: {\n      table: {\n        category: category.props,\n        defaultValue: { summary: getDescriptionWeightDefault() },\n      },\n    },\n  },\n  args: {\n    children: [\n      <DescriptionList.Element key={'k1'} term={'Saksbehandler'}>\n        {'Kenneth Performance'}\n      </DescriptionList.Element>,\n      <DescriptionList.Element key={'k2'} term={'Status'}>\n        {'Under behandling'}\n      </DescriptionList.Element>,\n      <DescriptionList.Element key={'k3'} term={'Sist endret'}>\n        {'30.12.2013'}\n      </DescriptionList.Element>,\n      <DescriptionList.Element key={'k4'} term={'Frist'}>\n        {'30.12.2013'}\n      </DescriptionList.Element>,\n      <DescriptionList.Element key={'k5'} term={'Farge'}>\n        {'Smaragdgrønn'}\n      </DescriptionList.Element>,\n      <DescriptionList.Element key={'k6'} term={'Først endret'}>\n        {'30.12.2010'}\n      </DescriptionList.Element>,\n    ],\n  },\n} satisfies Meta<typeof DescriptionList>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Preview: Story = {} satisfies Story;\n\nexport const Examples: Story = {\n  render: (_args) => (\n    <div>\n      <DescriptionList\n        variant={'horizontal'}\n        descriptionDirection={'vertical'}\n        hasSpacing\n      >\n        <DescriptionList.Element term={'Saksbehandler'}>\n          {'Kenneth Performance'}\n        </DescriptionList.Element>\n        <DescriptionList.Element term={'Status'}>\n          {'Under behandling'}\n        </DescriptionList.Element>\n        <DescriptionList.Element term={'Sist endret'}>\n          {'30.12.2013'}\n        </DescriptionList.Element>\n        <DescriptionList.Element term={'Frist'}>\n          {'30.12.2013'}\n        </DescriptionList.Element>\n        <DescriptionList.Element term={'Farge'}>\n          {'Smaragdgrønn'}\n        </DescriptionList.Element>\n        <DescriptionList.Element term={'Først endret'}>\n          {'30.12.2010'}\n        </DescriptionList.Element>\n      </DescriptionList>\n\n      <DescriptionList variant={'vertical'}>\n        <DescriptionList.Element\n          term={\n            <>\n              <span>{'navn'}</span>\n              <Popover>\n                <Popover.Trigger\n                  className={'dummySpacingLeft'}\n                  size={'extraSmall'}\n                />\n                <Popover.Content>\n                  {\n                    'Et navn er en betegnelse eller tittel som brukes for å identifisere en person, et sted, en ting eller et konsept.'\n                  }\n                </Popover.Content>\n              </Popover>\n            </>\n          }\n        >\n          {'Byron Schweppes-Hansen'}\n        </DescriptionList.Element>\n        <DescriptionList.Element term={'Kommune'}>\n          <Tag svgPath={EyeOffSVGpath} color={'burgundy'} size={'small'}>\n            {'Skjult'}\n          </Tag>\n          <InlineButton svgPath={LockOutlineSVGpath}>\n            {'vis informasjon'}\n          </InlineButton>\n        </DescriptionList.Element>\n        <DescriptionList.Element term={'Adresse'}>\n          {'Adresseveien 1 '}\n          <IconButton\n            size={'extraSmall'}\n            title={'kopier'}\n            svgPath={CopySVGpath}\n            onClick={() => {\n              navigator.clipboard.writeText('Adresseveien 1\\n1410 Kolbotn');\n            }}\n          />\n          <br />\n          {'1410 Kolbotn'}\n        </DescriptionList.Element>\n        <DescriptionList.Element term={'Boligtype'}>\n          <ErrorMessage showError>{'Kunne ikke hente inn info'}</ErrorMessage>\n        </DescriptionList.Element>\n      </DescriptionList>\n    </div>\n  ),\n} satisfies Story;\nExamples.parameters = exampleParameters;\n\nexport const ExampleWithFixedColumns: Story = {\n  /*\n  Innhold i className\n\n  .descriptionListTwoColumns {\n    --description-list-columns: 2;\n  }\n\n  */\n  render: (_args): JSX.Element => (\n    <div>\n      <DescriptionList\n        variant={'horizontal'}\n        descriptionDirection={'vertical'}\n        className={styles.descriptionListTwoColumns}\n        hasSpacing\n      >\n        <DescriptionList.Element term={'Saksbehandler'}>\n          {'Kenneth Performance'}\n        </DescriptionList.Element>\n        <DescriptionList.Element term={'Status'}>\n          {'Under behandling'}\n        </DescriptionList.Element>\n        <DescriptionList.Element term={'Sist endret'}>\n          {'30.12.2013'}\n        </DescriptionList.Element>\n        <DescriptionList.Element term={'Frist'}>\n          {'30.12.2013'}\n        </DescriptionList.Element>\n        <DescriptionList.Element term={'Farge'}>\n          {'Smaragdgrønn'}\n        </DescriptionList.Element>\n        <DescriptionList.Element term={'Først endret'}>\n          {'30.12.2010'}\n        </DescriptionList.Element>\n      </DescriptionList>\n    </div>\n  ),\n} satisfies Story;\nExampleWithFixedColumns.parameters = exampleParameters;\n"],"names":["meta","component","DescriptionList","title","argTypes","children","control","disable","table","category","props","size","defaultValue","summary","getDescriptionListSizeDefault","variant","getDescriptionListVariantDefault","hasSpacing","isVerticalOnMobile","getDescriptionListIsVerticalOnMobileDefault","toString","descriptionDirection","getDescriptionDirectionDefault","termWeight","getTermWeightDefault","descriptionWeight","getDescriptionWeightDefault","args","jsx","Preview","Examples","render","_args","jsxs","Fragment","Popover","Tag","EyeOffSVGpath","InlineButton","LockOutlineSVGpath","IconButton","CopySVGpath","clipboard","writeText","ErrorMessage","parameters","exampleParameters","ExampleWithFixedColumns","styles","descriptionListTwoColumns","docs","source","originalSource"],"mappings":"wiBA4BMA,EAAO,CACXC,UAAWC,EACXC,MAAO,8CACPC,SAAU,CAERC,SAAU,CACRC,QAAS,CAAEC,QAAS,EAAK,EACzBC,MAAO,CAAEC,SAAUA,EAASC,KAAAA,CAC9B,EACAC,KAAM,CACJH,MAAO,CACLC,SAAUA,EAASC,MACnBE,aAAc,CAAEC,QAASC,EAA8B,CAAA,CAAE,CAE7D,EACAC,QAAS,CACPP,MAAO,CACLC,SAAUA,EAASC,MACnBE,aAAc,CAAEC,QAASG,EAAiC,CAAA,CAAE,CAEhE,EACAC,WAAY,CACVT,MAAO,CACLC,SAAUA,EAASC,KAAAA,CAEvB,EACAQ,mBAAoB,CAClBV,MAAO,CACLC,SAAUA,EAASC,MACnBE,aAAc,CACZC,QAASM,EAA4C,EAAEC,SAAS,CAAA,CAClE,CAEJ,EACAC,qBAAsB,CACpBb,MAAO,CACLC,SAAUA,EAASC,MACnBE,aAAc,CACZC,QAASS,EAA+B,CAAA,CAC1C,CAEJ,EACAC,WAAY,CACVf,MAAO,CACLC,SAAUA,EAASC,MACnBE,aAAc,CAAEC,QAASW,EAAqB,CAAA,CAAE,CAEpD,EACAC,kBAAmB,CACjBjB,MAAO,CACLC,SAAUA,EAASC,MACnBE,aAAc,CAAEC,QAASa,EAA4B,CAAA,CAAE,CACzD,CAEJ,EACAC,KAAM,CACJtB,SAAU,CACRuB,EAAA,IAAC1B,EAAgB,QAAhB,CAAmC,KAAM,gBACvC,SAD2B,qBAAA,EAAA,IAE9B,EACA0B,EAAAA,IAAC1B,EAAgB,QAAhB,CAAmC,KAAM,SACvC,SAD2B,kBAAA,EAAA,IAE9B,EACA0B,EAAAA,IAAC1B,EAAgB,QAAhB,CAAmC,KAAM,cACvC,SAAA,YAAA,EAD2B,IAE9B,EACA0B,EAAA,IAAC1B,EAAgB,QAAhB,CAAmC,KAAM,QACvC,SAAA,YAAA,EAD2B,IAE9B,EACC0B,EAAA,IAAA1B,EAAgB,QAAhB,CAAmC,KAAM,QACvC,SAAA,cAAA,EAD2B,IAE9B,EACC0B,EAAA,IAAA1B,EAAgB,QAAhB,CAAmC,KAAM,eACvC,SAD2B,YAAA,EAAA,IAE9B,CAA0B,CAAA,CAGhC,EAKa2B,EAAiB,CAAC,EAElBC,EAAkB,CAC7BC,OACEC,GAAAC,EAAA,KAAC,MACC,CAAA,SAAA,CAAAA,OAAC/B,GACC,QAAS,aACT,qBAAsB,WACtB,WAAS,GAET,SAAA,CAAA0B,EAAA,IAAC1B,EAAgB,QAAhB,CAAwB,KAAM,gBAC5B,SACH,sBAAA,QACCA,EAAgB,QAAhB,CAAwB,KAAM,SAC5B,SACH,mBAAA,QACCA,EAAgB,QAAhB,CAAwB,KAAM,cAC5B,SACH,aAAA,QACCA,EAAgB,QAAhB,CAAwB,KAAM,QAC5B,SACH,aAAA,QACCA,EAAgB,QAAhB,CAAwB,KAAM,QAC5B,SACH,eAAA,QACCA,EAAgB,QAAhB,CAAwB,KAAM,eAC5B,SACH,YAAA,CAAA,CAAA,EACF,EAEA+B,EAAAA,KAAC/B,EAAgB,CAAA,QAAS,WACxB,SAAA,CAAA0B,EAAA,IAAC1B,EAAgB,QAAhB,CACC,KAEI+B,OAAAC,EAAAA,SAAA,CAAA,SAAA,CAAAN,EAAAA,IAAC,QAAM,SAAO,MAAA,CAAA,SACbO,EACC,CAAA,SAAA,CAAAP,EAAA,IAACO,EAAQ,QAAR,CACC,UAAW,mBACX,KAAM,aAAY,EAEnBP,EAAAA,IAAAO,EAAQ,QAAR,CAEG,SAEJ,mHAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGD,SACH,yBAAA,EACCF,EAAA,KAAA/B,EAAgB,QAAhB,CAAwB,KAAM,UAC7B,SAAA,CAAA0B,EAAAA,IAACQ,GAAI,QAASC,EAAe,MAAO,WAAY,KAAM,QACnD,SACH,QAAA,CAAA,EACCT,EAAA,IAAAU,EAAA,CAAa,QAASC,EACpB,SACH,iBAAA,CAAA,CAAA,EACF,EACCN,EAAA,KAAA/B,EAAgB,QAAhB,CAAwB,KAAM,UAC5B,SAAA,CAAA,kBACD0B,MAACY,GACC,KAAM,aACN,MAAO,SACP,QAASC,EACT,QAAS,IAAM,CACHC,UAAAA,UAAUC,UAAU;AAAA,aAA8B,CAAA,EAC7D,QAEF,KAAE,EAAA,EACF,cAAA,EACH,EACAf,EAAAA,IAAC1B,EAAgB,QAAhB,CAAwB,KAAM,YAC7B,SAAA0B,EAAA,IAACgB,EAAa,CAAA,UAAS,GAAE,SAAA,2BAA4B,CAAA,CACvD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAEJ,EACAd,EAASe,WAAaC,EAETC,MAAAA,EAAiC,CAS5ChB,OAASC,GACPJ,MAAC,OACC,SAACK,EAAAA,KAAA/B,EAAA,CACC,QAAS,aACT,qBAAsB,WACtB,UAAW8C,EAAOC,0BAClB,WAAS,GAET,SAAA,CAAArB,EAAA,IAAC1B,EAAgB,QAAhB,CAAwB,KAAM,gBAC5B,SACH,sBAAA,QACCA,EAAgB,QAAhB,CAAwB,KAAM,SAC5B,SACH,mBAAA,QACCA,EAAgB,QAAhB,CAAwB,KAAM,cAC5B,SACH,aAAA,QACCA,EAAgB,QAAhB,CAAwB,KAAM,QAC5B,SACH,aAAA,QACCA,EAAgB,QAAhB,CAAwB,KAAM,QAC5B,SACH,eAAA,QACCA,EAAgB,QAAhB,CAAwB,KAAM,eAC5B,SACH,YAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EACA6C,EAAwBF,WAAaC,YAAiBjB,EAAAgB,WAAA,CAAA,GAAAhB,EAAAgB,WAAAK,KAAA,CAAA,IAAArB,EAAAA,EAAAgB,aAAAhB,YAAAA,EAAAqB,KAAAC,OAAA,CAAAC,eAAA,qBAAA,IAAAvB,GAAAA,EAAAA,EAAAgB,aAAAhB,YAAAA,EAAAqB,OAAArB,YAAAA,EAAAsB,MAAAA,CAAA,CAAA,YAAArB,EAAAe,WAAA,CAAA,GAAAf,EAAAe,WAAAK,KAAA,CAAA,IAAApB,EAAAA,EAAAe,aAAAf,YAAAA,EAAAoB,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA,IAAAtB,GAAAA,EAAAA,EAAAe,aAAAf,YAAAA,EAAAoB,OAAApB,YAAAA,EAAAqB,MAAAA,CAAA,CAAA,YAAAJ,EAAAF,WAAA,CAAA,GAAAE,EAAAF,WAAAK,KAAA,CAAA,IAAAH,EAAAA,EAAAF,aAAAE,YAAAA,EAAAG,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA,IAAAL,GAAAA,EAAAA,EAAAF,aAAAE,YAAAA,EAAAG,OAAAH,YAAAA,EAAAI,MAAAA,CAAA,CAAA"}