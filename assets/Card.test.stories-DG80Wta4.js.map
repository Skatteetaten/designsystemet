{"version":3,"file":"Card.test.stories-DG80Wta4.js","sources":["../../../../libs/ds-content/src/Card/Card.types.ts","../../../../apps/ds-playground/src/stories/__tests__/Card.test.stories.tsx"],"sourcesContent":["import {\n  ComponentPropsWithoutRef,\n  ForwardRefExoticComponent,\n  ReactNode,\n  RefAttributes,\n} from 'react';\n\nimport { BaseProps, colorNamesArr, Spacing } from '@skatteetaten/ds-core-utils';\n\nimport { CardActions } from '../CardActions/CardActions';\nimport { CardAlert } from '../CardAlert/CardAlert';\nimport { CardContent } from '../CardContent/CardContent';\nimport { CardHeader } from '../CardHeader/CardHeader';\n\nexport type CardColor = Extract<\n  (typeof colorNamesArr)[number],\n  'white' | 'ochre' | 'forest' | 'burgundy' | 'denim' | 'graphite'\n>;\n\nexport type CardSpacing =\n  | Extract<Spacing, 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl' | 'xxl' | 'mega'>\n  | 'responsive';\n\nexport type CardSpacingVertical = Extract<\n  Spacing,\n  'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl' | 'xxl' | 'mega'\n>;\nexport const cardColorArr: CardColor[] = [\n  colorNamesArr[0],\n  colorNamesArr[1],\n  colorNamesArr[2],\n  colorNamesArr[3],\n  colorNamesArr[5],\n  colorNamesArr[6],\n];\n\nexport interface CardComponentCommonProps extends BaseProps {\n  /** Innholdet i komponenten. */\n  children: ReactNode;\n  /** Farge på border og bakgrunn. */\n  color?: CardColor;\n  ariaLabelledBy?: ComponentPropsWithoutRef<'section'>['aria-labelledby'];\n  /** Luft til innholdet i Card. For at den skal ta effekt må man bruke minst én av underkomponentene. Card.Actions, Card.Content osv. */\n  spacing?: CardSpacing;\n}\n\nexport type CardProps = CardComponentCommonProps;\n\nexport interface CardComponent\n  extends ForwardRefExoticComponent<CardProps & RefAttributes<HTMLDivElement>> {\n  Alert: typeof CardAlert;\n  Actions: typeof CardActions;\n  Content: typeof CardContent;\n  Header: typeof CardHeader;\n}\n","import { StoryFn, Meta, StoryObj } from '@storybook/react';\nimport { expect, within } from '@storybook/test';\n\nimport { Card, cardColorArr } from '@skatteetaten/ds-content';\n\nconst meta = {\n  component: Card,\n  title: 'Tester/Card/Card',\n  argTypes: {\n    // Baseprops\n    key: { table: { disable: true } },\n    ref: { table: { disable: true } },\n    className: { table: { disable: true } },\n    id: { table: { disable: true } },\n    lang: { table: { disable: true } },\n    'data-testid': { table: { disable: true } },\n    // Props\n    children: {\n      table: { disable: true },\n      control: 'text',\n    },\n    // Aria\n    ariaLabelledBy: { table: { disable: true } },\n    color: { table: { disable: true } },\n  },\n} satisfies Meta<typeof Card>;\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nconst defaultText =\n  'Gruppering av opplysninger i skjema, for eksempel inntekter, personer eller oppsummeringer.';\n\nconst defaultArgs = {\n  children: defaultText,\n};\n\nexport const WithRef = {\n  name: 'With Ref (FA1)',\n  args: {\n    ...defaultArgs,\n    ref: (instance: HTMLDivElement | null): void => {\n      if (instance) {\n        instance.id = 'dummyIdForwardedFromRef';\n      }\n    },\n  },\n  argTypes: {\n    ref: { table: { disable: false } },\n  },\n  parameters: {\n    imageSnapshot: { disable: true },\n  },\n  play: async ({ canvasElement }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const container = canvas.getAllByRole('generic')[1];\n    await expect(container).toHaveAttribute('id', 'dummyIdForwardedFromRef');\n  },\n} satisfies Story;\n\nexport const WithAttributes = {\n  name: 'With Attributes (FA2-5)',\n  args: {\n    ...defaultArgs,\n    id: 'htmlId',\n    className: 'dummyClassname',\n    lang: 'en',\n    'data-testid': '123ID',\n  },\n  argTypes: {\n    id: { table: { disable: false } },\n    className: { table: { disable: false } },\n    lang: { table: { disable: false } },\n    'data-testid': { table: { disable: false } },\n  },\n  play: async ({ canvasElement }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const card = canvas.getAllByRole('generic')[1];\n    await expect(card).toHaveClass('dummyClassname');\n    await expect(card).toHaveAttribute('id', 'htmlId');\n    await expect(card).toHaveAttribute('lang', 'en');\n    await expect(card).toHaveAttribute('data-testid', '123ID');\n  },\n} satisfies Story;\n\nexport const Defaults = {\n  name: 'Defaults (B1, B2)',\n  args: {\n    ...defaultArgs,\n  },\n  argTypes: {\n    children: { table: { disable: false } },\n  },\n  play: async ({ canvasElement }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const container = canvas.getAllByRole('generic')[1];\n\n    const section = canvas.queryByRole('region');\n    await expect(section).not.toBeInTheDocument();\n    await expect(container).toBeInTheDocument();\n  },\n} satisfies Story;\n\nconst TemplateAllColors: StoryFn<typeof Card> = (args) => (\n  <>\n    {cardColorArr.map((color, index) => {\n      return (\n        <Card\n          {...args}\n          key={`card_${index}`}\n          className={'bottomSpacingXL'}\n          color={color}\n        >\n          <Card.Content>{args.children}</Card.Content>\n        </Card>\n      );\n    })}\n  </>\n);\n\nexport const AllColors = {\n  render: TemplateAllColors,\n  name: 'All Colors (A1, A2)',\n  args: {\n    ...defaultArgs,\n  },\n} satisfies Story;\n\nexport const WithAriaLabelledBy = {\n  name: 'With aria-labelledby (B1)',\n  argTypes: {\n    ariaLabelledBy: { table: { disable: false } },\n  },\n  args: {\n    ...defaultArgs,\n    ariaLabelledBy: 'dummyId',\n  },\n  parameters: {\n    imageSnapshot: { disable: true },\n  },\n  play: async ({ canvasElement }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const cardNote = canvas.getByRole('region');\n    await expect(cardNote).toHaveAttribute('aria-labelledby', 'dummyId');\n  },\n} satisfies Story;\n"],"names":["cardColorArr","colorNamesArr","meta","component","Card","title","argTypes","key","table","disable","ref","className","id","lang","children","control","ariaLabelledBy","color","defaultText","defaultArgs","WithRef","name","args","instance","parameters","imageSnapshot","play","canvasElement","container","within","getAllByRole","expect","toHaveAttribute","WithAttributes","card","toHaveClass","Defaults","canvas","section","queryByRole","not","toBeInTheDocument","TemplateAllColors","jsx","Fragment","map","index","AllColors","render","WithAriaLabelledBy","cardNote","getByRole","docs","source","originalSource"],"mappings":"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"}