{"version":3,"file":"Table.stories-CzQ145lk.js","sources":["../../../../apps/ds-playground/src/stories/components/Table.stories.tsx"],"sourcesContent":["import { ReactNode, useState, JSX } from 'react';\n\nimport { Meta, StoryObj } from '@storybook/react';\n\nimport { Button, InlineButton } from '@skatteetaten/ds-buttons';\nimport { densityArr } from '@skatteetaten/ds-core-utils';\nimport { Checkbox } from '@skatteetaten/ds-forms';\nimport {\n  CopySVGpath,\n  DeleteSVGpath,\n  EditSVGpath,\n} from '@skatteetaten/ds-icons';\nimport {\n  Table,\n  getTableVariantDefault,\n  SortState,\n} from '@skatteetaten/ds-table';\nimport { Paragraph } from '@skatteetaten/ds-typography';\n\nimport { category } from '../../../.storybook/helpers';\nimport { exampleParameters } from '../utils/stories.utils';\n\nconst meta = {\n  component: Table,\n  title: 'Komponenter/Table/Table',\n  argTypes: {\n    // Props\n    canBeManuallyFocused: { table: { category: category.props } },\n    children: { control: false, table: { category: category.props } },\n    variant: {\n      options: [...densityArr],\n      control: 'radio',\n      table: {\n        category: category.props,\n        defaultValue: { summary: getTableVariantDefault() },\n      },\n    },\n    showCaption: { table: { category: category.props } },\n    sortState: {\n      control: false,\n      table: { category: category.props },\n    },\n    setSortState: {\n      control: false,\n      table: { category: category.props },\n    },\n    caption: { table: { category: category.props } },\n    hasFullWidth: { table: { category: category.props } },\n    rowInEditModeId: { table: { category: category.props } },\n  },\n  args: {\n    caption: 'Dette er en tabell.',\n    children: [\n      <Table.Header key={'header'}>\n        <Table.Row>\n          <Table.HeaderCell scope={'col'}>{'Category'}</Table.HeaderCell>\n          <Table.HeaderCell scope={'col'}>{'Items'}</Table.HeaderCell>\n          <Table.HeaderCell scope={'col'}>{'Expenditure'}</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>,\n      <Table.Body key={'body'}>\n        <Table.Row>\n          <Table.DataCell className={'rowSpanRight'} rowSpan={2}>\n            {'Edible'}\n          </Table.DataCell>\n          <Table.DataCell>{'Donuts'}</Table.DataCell>\n          <Table.DataCell>{'3,000'}</Table.DataCell>\n        </Table.Row>\n        <Table.Row>\n          <Table.DataCell>{'Cake'}</Table.DataCell>\n          <Table.DataCell>{'3,000'}</Table.DataCell>\n        </Table.Row>\n        <Table.Row>\n          <Table.DataCell rowSpan={2} className={'rowSpanRight'}>\n            {'Non-Edible'}\n          </Table.DataCell>\n          <Table.DataCell>{'Stationery'}</Table.DataCell>\n          <Table.DataCell>{'18,000'}</Table.DataCell>\n        </Table.Row>\n        <Table.Row>\n          <Table.DataCell>{'Batteries'}</Table.DataCell>\n          <Table.DataCell>{'9,000'}</Table.DataCell>\n        </Table.Row>\n      </Table.Body>,\n      <Table.Sum key={'sum'} valueAlignment={'left'} colSpan={2}>\n        {'32,000'}\n      </Table.Sum>,\n    ],\n  },\n} satisfies Meta<typeof Table>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Preview: Story = {} satisfies Story;\n\nexport const Variants: Story = {\n  render: (_args): JSX.Element => {\n    const klage = 'Klage på vedtak';\n    return (\n      <>\n        <div>\n          {'Standard table'}\n          <Table caption={'Dette er en standard tabell'} variant={'standard'}>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell scope={'col'}>{'Frist'}</Table.HeaderCell>\n                <Table.HeaderCell scope={'col'}>{'Kategori'}</Table.HeaderCell>\n                <Table.HeaderCell scope={'col'}>\n                  {'Arbeidsoppgave'}\n                </Table.HeaderCell>\n                <Table.HeaderCell scope={'col'}>{'navn'}</Table.HeaderCell>\n                <Table.HeaderCell scope={'col'}>{'status'}</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.DataCell>{'10.03.2023'}</Table.DataCell>\n                <Table.DataCell>{'Kategori 2'}</Table.DataCell>\n                <Table.DataCell>{klage}</Table.DataCell>\n                <Table.DataCell>{'HAIKU HEDGE ASA'}</Table.DataCell>\n                <Table.DataCell>{'NY'}</Table.DataCell>\n              </Table.Row>\n              <Table.Row>\n                <Table.DataCell>{'11.04.2023'}</Table.DataCell>\n                <Table.DataCell>{'Kategori 4'}</Table.DataCell>\n                <Table.DataCell>{klage}</Table.DataCell>\n                <Table.DataCell>{'ATMOSPHERIC EXPLORER ASA'}</Table.DataCell>\n                <Table.DataCell>{'NY'}</Table.DataCell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </div>\n        <div>\n          {'Compact table'}\n          <Table caption={'Dette er en kompakt tabell.'} variant={'compact'}>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell scope={'col'}>{'Frist'}</Table.HeaderCell>\n                <Table.HeaderCell scope={'col'}>{'Kategori'}</Table.HeaderCell>\n                <Table.HeaderCell scope={'col'}>\n                  {'Arbeidsoppgave'}\n                </Table.HeaderCell>\n                <Table.HeaderCell scope={'col'}>{'navn'}</Table.HeaderCell>\n                <Table.HeaderCell scope={'col'}>{'status'}</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.DataCell>{'10.04.2023'}</Table.DataCell>\n                <Table.DataCell>{'Kategori 1'}</Table.DataCell>\n                <Table.DataCell>{klage}</Table.DataCell>\n                <Table.DataCell>{'LIMERICK PARTNER ASA'}</Table.DataCell>\n                <Table.DataCell>{'NY'}</Table.DataCell>\n              </Table.Row>\n              <Table.Row>\n                <Table.DataCell>{'10.04.2023'}</Table.DataCell>\n                <Table.DataCell>{'Kategori 1'}</Table.DataCell>\n                <Table.DataCell>{klage}</Table.DataCell>\n                <Table.DataCell>{'LIMERICK PARTNER ASA'}</Table.DataCell>\n                <Table.DataCell>{'NY'}</Table.DataCell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </div>\n      </>\n    );\n  },\n} satisfies Story;\nVariants.parameters = exampleParameters;\n\nexport const Sortable: Story = {\n  render: (_args): JSX.Element => {\n    const [sortState, setSortState] = useState<SortState>({\n      direction: 'none',\n    });\n\n    const data = [\n      {\n        player: 'Ole',\n        score: 100,\n      },\n      {\n        player: 'Dole',\n        score: 20,\n      },\n      {\n        player: 'Doffen',\n        score: 30,\n      },\n    ];\n\n    const sortedData = data.slice().sort((a, b) => {\n      const sortKey = sortState.sortKey as keyof (typeof data)[0];\n      if (!sortKey) {\n        return 0;\n      }\n      if (a[sortKey] === b[sortKey]) {\n        return 0;\n      }\n      if (sortState.direction === 'ascending') {\n        return a[sortKey] > b[sortKey] ? 1 : -1;\n      }\n      return a[sortKey] < b[sortKey] ? 1 : -1;\n    });\n\n    return (\n      <Table\n        sortState={sortState}\n        setSortState={setSortState}\n        caption={'High scores'}\n      >\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell scope={'col'} sortKey={'player'} isSortable>\n              {'Player'}\n            </Table.HeaderCell>\n            <Table.HeaderCell scope={'col'} sortKey={'score'} isSortable>\n              {'High Score'}\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {sortedData.map((row) => (\n            <Table.Row key={row.player}>\n              <Table.DataCell alignment={'center'}>{row.player}</Table.DataCell>\n              <Table.DataCell alignment={'right'}>{row.score}</Table.DataCell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    );\n  },\n} satisfies Story;\nSortable.parameters = exampleParameters;\n\nexport const Expandable: Story = {\n  render: (_args): JSX.Element => {\n    const [sortState, setSortState] = useState<SortState>({\n      direction: 'none',\n    });\n\n    const data = [\n      {\n        id: 'abcd',\n        firma: 'Bluth Company',\n        timestamp: '08.04.2020 11:31:57',\n        status: 'Under behandling',\n        eta: 'Mer enn 1 dag',\n        ansatte: [\n          {\n            id: 'efgh',\n            navn: 'Per Olsen',\n            fnr: '11012020 99999',\n            beskrivelse: 'Ingen flere opplysninger',\n          },\n        ],\n      },\n      {\n        id: 'ijkl',\n        firma: 'Business Engros',\n        timestamp: '08.04.2020 11:32:16',\n        status: 'Under behandling',\n        eta: '23 min',\n        ansatte: [\n          {\n            id: 'mnop',\n            navn: 'Bryce Navnesen',\n            fnr: '02012020 99999',\n            beskrivelse: 'noen flere opplysninger',\n          },\n          {\n            id: 'qrst',\n            navn: 'Alice Middleman',\n            fnr: '03012020 99999',\n            beskrivelse: 'mange flere opplysninger',\n          },\n        ],\n      },\n      {\n        id: 'uvwx',\n        firma: 'Corwood Industries',\n        timestamp: '08.04.2020 11:32:16',\n        status: 'Ferdig',\n        eta: '–',\n        ansatte: [\n          {\n            id: 'yzab',\n            navn: 'Kai Mossige',\n            fnr: '01012020 99999',\n            beskrivelse: 'finnes flere opplysninger?',\n          },\n        ],\n      },\n      {\n        id: 'cdef',\n        firma: 'Limerick Partner',\n        timestamp: '08.04.2020 11:32:47',\n        status: 'Ferdig',\n        eta: '–',\n        ansatte: [\n          {\n            id: 'ghij',\n            navn: 'Kari Saksbehandler',\n            fnr: '01012020 99999',\n            beskrivelse: 'Ingen flere opplysninger',\n          },\n          {\n            id: 'klmn',\n            navn: 'Bob Egil Hansen',\n            fnr: '04012020 99999',\n            beskrivelse: 'Ingen andre opplysninger',\n          },\n        ],\n      },\n    ];\n\n    const sortedData = data.slice().sort((a, b) => {\n      const sortKey = sortState.sortKey as keyof (typeof data)[0];\n\n      if (!sortKey) {\n        return 0;\n      }\n      if (a[sortKey] === b[sortKey]) {\n        return 0;\n      }\n      if (sortState.direction === 'ascending') {\n        return a[sortKey] > b[sortKey] ? 1 : -1;\n      }\n      return a[sortKey] < b[sortKey] ? 1 : -1;\n    });\n\n    return (\n      <Table\n        caption={'Firmaoversikt'}\n        sortState={sortState}\n        setSortState={setSortState}\n      >\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell sortKey={'firma'} scope={'col'} isSortable>\n              {'Firma'}\n            </Table.HeaderCell>\n            <Table.HeaderCell scope={'col'}>{'Startet'}</Table.HeaderCell>\n            <Table.HeaderCell scope={'col'}>{'Status'}</Table.HeaderCell>\n            <Table.HeaderCell scope={'col'}>\n              {'Forventet behandlet'}\n            </Table.HeaderCell>\n            <Table.HeaderCell as={'td'} />\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {sortedData.map((row) => {\n            return (\n              <Table.Row\n                key={row.id}\n                expandButtonPosition={'right'}\n                expandableContent={\n                  <div className={'emptyExpandedTableRow'}></div>\n                }\n                expandButtonAriaDescribedby={row.id}\n                isExpandable\n              >\n                <Table.DataCell id={row.id}>{row.firma}</Table.DataCell>\n                <Table.DataCell>{row.timestamp}</Table.DataCell>\n                <Table.DataCell>{row.status}</Table.DataCell>\n                <Table.DataCell>{row.eta}</Table.DataCell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    );\n  },\n} satisfies Story;\nExpandable.parameters = exampleParameters;\n\nexport const Editable: Story = {\n  render: (_args): JSX.Element => {\n    const [sortState, setSortState] = useState<SortState>({\n      direction: 'none',\n    });\n\n    const data = [\n      {\n        month: 'Januar',\n        amount: 5426,\n        coverage: '100 %',\n        revenue: '1000',\n        id: '9f78',\n      },\n      {\n        month: 'Februar',\n        amount: 5432,\n        coverage: '50 %',\n        revenue: '500',\n        id: '6925',\n      },\n      {\n        month: 'Mars',\n        amount: 4899,\n        coverage: '20 %',\n        revenue: '2000',\n        id: 'fc9d',\n      },\n      {\n        month: 'April',\n        amount: 2344,\n        coverage: '30 %',\n        revenue: '1055',\n        id: '1d15',\n      },\n    ];\n\n    const sortedData = data.slice().sort((a, b) => {\n      const sortKey = sortState.sortKey as keyof (typeof data)[0];\n\n      if (!sortKey) {\n        return 0;\n      }\n      if (a[sortKey] === b[sortKey]) {\n        return 0;\n      }\n      if (sortState.direction === 'ascending') {\n        return a[sortKey] > b[sortKey] ? 1 : -1;\n      }\n      return a[sortKey] < b[sortKey] ? 1 : -1;\n    });\n\n    return (\n      <Table\n        sortState={sortState}\n        setSortState={setSortState}\n        caption={'Månedoversikt'}\n      >\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell as={'td'} />\n            <Table.HeaderCell alignment={'right'} scope={'col'}>\n              {'Måned'}\n            </Table.HeaderCell>\n            <Table.HeaderCell scope={'col'} sortKey={'amount'} isSortable>\n              {'Beløp'}\n            </Table.HeaderCell>\n            <Table.HeaderCell scope={'col'}>{'Dekningsgrad'}</Table.HeaderCell>\n            <Table.HeaderCell alignment={'right'} scope={'col'}>\n              {'Avkastning'}\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {sortedData.map((row) => {\n            return (\n              <Table.EditableRow\n                key={row.id}\n                editableContent={(closeEditing: () => void): ReactNode => (\n                  <div className={'emptyExpandedTableRow'}>\n                    <Button\n                      onClick={(): void => {\n                        closeEditing();\n                      }}\n                    >\n                      {'Lukk'}\n                    </Button>\n                  </div>\n                )}\n                editButtonAriaDescribedby={row.id}\n                onEdit={(): void => {\n                  console.log('redigerrer rad');\n                }}\n              >\n                <Table.DataCell id={row.id} alignment={'right'}>\n                  {row.month}\n                </Table.DataCell>\n                <Table.DataCell alignment={'right'}>\n                  {row.amount}\n                </Table.DataCell>\n                <Table.DataCell>{row.coverage}</Table.DataCell>\n                <Table.DataCell alignment={'right'}>\n                  {row.revenue}\n                </Table.DataCell>\n              </Table.EditableRow>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    );\n  },\n} satisfies Story;\nEditable.parameters = exampleParameters;\n\nexport const WithEmptyHeaders: Story = {\n  render: (_args): JSX.Element => {\n    const [sortState, setSortState] = useState<SortState>({\n      direction: 'none',\n    });\n\n    const data = [\n      {\n        deadline: '10.04.2023',\n        category: 'Kategori 1',\n        task: 'Mottatt tilbakemelding',\n        name: 'BARMEN OG BORGHEIM',\n        status: 'Tilgjengelig',\n        id: '9f78',\n      },\n      {\n        deadline: '12.04.2023',\n        category: 'Kategori 2',\n        task: 'Klage på vedtak',\n        name: 'LIMERICKS PARTNER ASA',\n        status: 'Ny',\n        id: '4b90',\n      },\n      {\n        deadline: '13.04.2023',\n        category: 'Kategori 3',\n        task: 'Mottatt tilbakemelding',\n        name: 'ENCKEL OG WIRCKE LØSNINGER',\n        status: 'Ny',\n        id: '8c6f',\n      },\n      {\n        deadline: '15.04.2023',\n        category: 'Kategori 1',\n        task: 'Klage på vedtak',\n        name: 'CORWOOD INDUSTRIES NORGE',\n        status: 'Tilgjengelig',\n        id: '8182',\n      },\n      {\n        deadline: '22.04.2023',\n        category: 'Kategori 3',\n        task: 'Medhold klage',\n        name: 'SLANTED N CHANTED',\n        status: 'Under arbeid',\n        id: '85cd',\n      },\n    ];\n\n    const sortedData = data.slice().sort((a, b) => {\n      const sortKey = sortState.sortKey as keyof (typeof data)[0];\n\n      if (!sortKey) {\n        return 0;\n      }\n      if (a[sortKey] === b[sortKey]) {\n        return 0;\n      }\n      if (sortState.direction === 'ascending') {\n        return a[sortKey] > b[sortKey] ? 1 : -1;\n      }\n      return a[sortKey] < b[sortKey] ? 1 : -1;\n    });\n\n    return (\n      <>\n        <Paragraph>\n          {\n            'Hvis vi har en tabell med med minst 3 kolonner uten kolonnetitler så bør'\n          }\n          {\n            'vi legge på sr-only tekster som th for at det skulle bli lettere for'\n          }\n          {'skjermleserbrukere å forstå tabellen.'}\n        </Paragraph>\n        <Table\n          caption={'Arbeidsoppgaver'}\n          sortState={sortState}\n          setSortState={setSortState}\n        >\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell scope={'col'} sortKey={'deadline'} isSortable>\n                {'Frist'}\n              </Table.HeaderCell>\n              <Table.HeaderCell scope={'col'} sortKey={'category'} isSortable>\n                {'Kategori'}\n              </Table.HeaderCell>\n              <Table.HeaderCell scope={'col'}>\n                {'Arbeidsoppgave'}\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                alignment={'right'}\n                scope={'col'}\n                sortKey={'name'}\n                isSortable\n              >\n                {'navn'}\n              </Table.HeaderCell>\n              <Table.HeaderCell scope={'col'}>{'status'}</Table.HeaderCell>\n              <Table.HeaderCell>\n                <span className={'srOnly'}>{'Rediger-funksjon'}</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <span className={'srOnly'}>{'Kopier-funksjon'}</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <span className={'srOnly'}>{'Slett-funksjon'}</span>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {sortedData.map((row) => {\n              return (\n                <Table.Row key={row.id}>\n                  <Table.DataCell id={row.id}>{row.deadline}</Table.DataCell>\n                  <Table.DataCell>{row.category}</Table.DataCell>\n                  <Table.DataCell>{row.task}</Table.DataCell>\n                  <Table.DataCell>{row.name}</Table.DataCell>\n                  <Table.DataCell>{row.status}</Table.DataCell>\n                  <Table.DataCell>\n                    <InlineButton svgPath={EditSVGpath}>\n                      {'Rediger'}\n                    </InlineButton>\n                  </Table.DataCell>\n                  <Table.DataCell>\n                    <InlineButton svgPath={CopySVGpath}>\n                      {'Kopier'}\n                    </InlineButton>\n                  </Table.DataCell>\n                  <Table.DataCell>\n                    <InlineButton svgPath={DeleteSVGpath}>\n                      {'Slett'}\n                    </InlineButton>\n                  </Table.DataCell>\n                </Table.Row>\n              );\n            })}\n          </Table.Body>\n        </Table>\n      </>\n    );\n  },\n} satisfies Story;\nWithEmptyHeaders.parameters = exampleParameters;\n\nexport const Selectable: Story = {\n  render: (_args): JSX.Element => {\n    const items = [\n      {\n        fastsatt: '31.01.2018',\n        avgiftstype: 'OR',\n        avgiftsgruppe: '525',\n        beloep: '6045',\n        status: 'Iverksatt',\n        id: '1',\n      },\n      {\n        fastsatt: '31.05.2018',\n        avgiftstype: 'BR',\n        avgiftsgruppe: '525',\n        beloep: '6033',\n        status: 'Iverksatt',\n        id: '2',\n      },\n      {\n        fastsatt: '02.03.2018',\n        avgiftstype: 'AR',\n        avgiftsgruppe: '525',\n        beloep: '6064',\n        status: 'Under arbeid',\n        id: '3',\n      },\n      {\n        fastsatt: '03.03.2018',\n        avgiftstype: 'DR',\n        avgiftsgruppe: '525',\n        beloep: '6064',\n        status: 'Under arbeid',\n        id: '4',\n      },\n      {\n        fastsatt: '04.01.2018',\n        avgiftstype: 'BR',\n        avgiftsgruppe: '525',\n        beloep: '6064',\n        status: 'Under arbeid',\n        id: '5',\n      },\n    ];\n    const [checkedState, setCheckedState] = useState<Array<number>>([]);\n    const [isAllChecked, setIsAllChecked] = useState<boolean>(false);\n\n    return (\n      <Table caption={'avgiftsstatus'}>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>\n              <Checkbox\n                checked={isAllChecked}\n                hideLabel\n                onChange={() => {\n                  if (isAllChecked) {\n                    setCheckedState([]);\n                  }\n\n                  setIsAllChecked(!isAllChecked);\n                }}\n              >\n                {'velg alle rader'}\n              </Checkbox>\n            </Table.HeaderCell>\n            <Table.HeaderCell>{'Fastsatt'}</Table.HeaderCell>\n            <Table.HeaderCell>{'avgiftstype'}</Table.HeaderCell>\n            <Table.HeaderCell>{'avgiftsgruppe'}</Table.HeaderCell>\n            <Table.HeaderCell>{'Beløp'}</Table.HeaderCell>\n            <Table.HeaderCell>{'Status'}</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {items.map((item, index) => (\n            <Table.Row key={item.id}>\n              <Table.DataCell>\n                <Checkbox\n                  checked={\n                    isAllChecked || checkedState.some((it) => it === index)\n                  }\n                  hideLabel\n                  onChange={(event) => {\n                    if (isAllChecked) {\n                      setCheckedState(\n                        Array.from(Array(items.length).keys()).filter(\n                          (it) => it !== index\n                        )\n                      );\n                      setIsAllChecked(false);\n                    } else if (event.target.checked) {\n                      setCheckedState([index, ...checkedState]);\n                    } else {\n                      setCheckedState(\n                        checkedState.filter((it) => it !== index)\n                      );\n                    }\n                  }}\n                >{`Velg ${item.fastsatt}`}</Checkbox>\n              </Table.DataCell>\n              <Table.DataCell as={'th'} scope={'row'}>\n                {item.fastsatt}\n              </Table.DataCell>\n              <Table.DataCell>{item.avgiftstype}</Table.DataCell>\n              <Table.DataCell>{item.avgiftsgruppe}</Table.DataCell>\n              <Table.DataCell>{item.beloep}</Table.DataCell>\n              <Table.DataCell>{item.status}</Table.DataCell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    );\n  },\n} satisfies Story;\nSelectable.parameters = exampleParameters;\n"],"names":["meta","component","Table","title","argTypes","canBeManuallyFocused","table","category","props","children","control","variant","options","densityArr","defaultValue","summary","getTableVariantDefault","showCaption","sortState","setSortState","caption","hasFullWidth","rowInEditModeId","args","jsx","jsxs","Preview","Variants","render","_args","klage","Fragment","parameters","exampleParameters","Sortable","useState","direction","sortedData","player","score","slice","sort","a","b","sortKey","map","row","Expandable","id","firma","timestamp","status","eta","ansatte","navn","fnr","beskrivelse","Editable","month","amount","coverage","revenue","closeEditing","Button","console","log","WithEmptyHeaders","deadline","task","name","Paragraph","InlineButton","EditSVGpath","CopySVGpath","DeleteSVGpath","Selectable","items","fastsatt","avgiftstype","avgiftsgruppe","beloep","checkedState","setCheckedState","isAllChecked","setIsAllChecked","Checkbox","item","index","some","it","event","Array","from","length","keys","filter","target","checked","docs","source","originalSource"],"mappings":"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"}