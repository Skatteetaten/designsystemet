{"version":3,"file":"Modal.stories-BMalQTrQ.js","sources":["../../../../apps/ds-playground/src/stories/components/Modal.stories.tsx"],"sourcesContent":["import { useRef, JSX } from 'react';\n\nimport { Button, Link } from '@skatteetaten/ds-buttons';\nimport { RadioGroup } from '@skatteetaten/ds-forms';\nimport { InfoOutlineSVGpath } from '@skatteetaten/ds-icons';\nimport {\n  Modal,\n  getModalDismissOnEscDefault,\n  getModalDismissOnOutsideClickDefault,\n  getModalPaddingDefault,\n  getModalVariantDefault,\n} from '@skatteetaten/ds-overlays';\nimport { Paragraph } from '@skatteetaten/ds-typography';\nimport { Meta, StoryObj } from '@storybook/react';\n\nimport { category } from '../../../.storybook/helpers';\nimport farmerIllustration from '../../assets/farmer-illustration.svg';\nimport waitIllustration from '../../assets/wait-alert-illustration.png';\nimport { loremIpsum } from '../__tests__/testUtils/storybook.testing.utils';\nimport { exampleParameters } from '../utils/stories.utils';\n\nconst meta = {\n  component: Modal,\n  title: 'Komponenter/Modal',\n  argTypes: {\n    // Props\n    children: {\n      control: { disable: true },\n      table: { category: category.props },\n    },\n    classNames: {\n      control: { disable: true },\n      table: { category: category.props },\n    },\n    dismissOnEsc: {\n      table: {\n        category: category.props,\n        defaultValue: { summary: getModalDismissOnEscDefault().toString() },\n      },\n    },\n    dismissOnOutsideClick: {\n      table: {\n        category: category.props,\n        defaultValue: {\n          summary: getModalDismissOnOutsideClickDefault().toString(),\n        },\n      },\n    },\n    hideCloseButton: { table: { category: category.props } },\n    hideTitle: { table: { category: category.props } },\n    imageSource: {\n      table: { category: category.props },\n      control: 'select',\n      options: ['', farmerIllustration, waitIllustration],\n    },\n    imageSourceAltText: { table: { category: category.props } },\n    padding: {\n      table: {\n        category: category.props,\n        defaultValue: { summary: getModalPaddingDefault() },\n      },\n    },\n    shadowRootNode: {\n      control: false,\n      table: { control: false, category: category.props },\n    },\n    title: { table: { category: category.props } },\n    variant: {\n      table: {\n        category: category.props,\n        defaultValue: { summary: getModalVariantDefault() },\n      },\n    },\n    // Events\n    onClose: {\n      control: { disable: true },\n      table: { category: category.event },\n    },\n  },\n  args: {\n    children: <Paragraph>{loremIpsum}</Paragraph>,\n    title: 'Modal title',\n  },\n} satisfies Meta<typeof Modal>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Preview: Story = {\n  render: (args): JSX.Element => {\n    const ref = useRef<HTMLDialogElement>(null);\n    return (\n      <>\n        <Button onClick={(): void => ref.current?.showModal()}>\n          {'Åpne modal'}\n        </Button>\n        <Modal {...args} ref={ref}>\n          {args.children}\n        </Modal>\n      </>\n    );\n  },\n} satisfies Story;\n\nexport const Examples: Story = {\n  render: (_args): JSX.Element => {\n    const refModal = useRef<HTMLDialogElement>(null);\n    const refModalRadioGroup = useRef<HTMLDialogElement>(null);\n    const refModalImportant = useRef<HTMLDialogElement>(null);\n    const refModalWait = useRef<HTMLDialogElement>(null);\n\n    return (\n      <>\n        <Button\n          className={'exampleSpacing'}\n          onClick={(): void => refModal.current?.showModal()}\n        >\n          {'Nye opplysninger'}\n        </Button>\n        <Modal\n          ref={refModal}\n          title={'Vil du erstatte nye opplysninger fra fil?'}\n        >\n          <Paragraph hasSpacing>\n            {\n              'Du har valgt å laste opp nye opplysninger fra fil. Vil du at disse skal gjelde fra nå av?'\n            }\n          </Paragraph>\n          <div className={'flex'}>\n            <Button className={'marginRightM'}>{'Erstatt opplysninger'}</Button>\n            <Button\n              variant={'tertiary'}\n              onClick={(): void => refModal.current?.close()}\n            >\n              {'Avbryt'}\n            </Button>\n          </div>\n        </Modal>\n\n        <Button\n          className={'exampleSpacing'}\n          onClick={(): void => refModalRadioGroup.current?.showModal()}\n        >\n          {'Velg rolle'}\n        </Button>\n        <Modal\n          ref={refModalRadioGroup}\n          title={'Dette er dine roller'}\n          onClose={() => {\n            console.log('lukker mod2');\n          }}\n        >\n          <RadioGroup legend={'Velge en rolle'}>\n            <RadioGroup.Radio value={'meg'}>\n              {'Innlogget som meg selv'}\n            </RadioGroup.Radio>\n            <RadioGroup.Radio value={'andre'}>\n              {'Innlogget som annen person'}\n            </RadioGroup.Radio>\n            <RadioGroup.Radio value={'virksomhet'}>\n              {'Innlogget som virksomhet'}\n            </RadioGroup.Radio>\n          </RadioGroup>\n          <Button onClick={(): void => refModalRadioGroup.current?.close()}>\n            {'Ok'}\n          </Button>\n        </Modal>\n\n        <Button\n          className={'exampleSpacing'}\n          variant={'tertiary'}\n          svgPath={InfoOutlineSVGpath}\n          onClick={(): void => refModalImportant.current?.showModal()}\n        >\n          {'Viktig driftsmelding'}\n        </Button>\n        <Modal\n          ref={refModalImportant}\n          variant={'important'}\n          title={'Viktig melding!'}\n        >\n          <Paragraph hasSpacing>\n            {\n              'Løsningen er ikke kommet i drift ennå eller tatt ned for vedlikehold.'\n            }\n          </Paragraph>\n          <div className={'modalLink'}>\n            <Link\n              href={'#'}\n              onClick={(): void => refModalImportant.current?.close()}\n            >\n              {'Les mer på skatteetaten.no'}\n            </Link>\n          </div>\n        </Modal>\n\n        <Button\n          className={'exampleSpacing'}\n          variant={'tertiary'}\n          svgPath={InfoOutlineSVGpath}\n          onClick={(): void => refModalWait.current?.showModal()}\n        >\n          {'Vis ventevarsel'}\n        </Button>\n        <Modal\n          ref={refModalWait}\n          title={'Hei, er du fortsatt her?'}\n          imageSource={waitIllustration}\n          imageSourceAltText={\n            'Illustrasjon av travel person med seks armer, opptatt med kontorarbeid.'\n          }\n        >\n          <Paragraph hasSpacing>\n            {\n              'Vi ser at du ikke har gjort noe på nettsiden på ei stund. Er du fortsatt her?'\n            }\n          </Paragraph>\n          <Button\n            className={'width100'}\n            onClick={(): void => refModalWait.current?.close()}\n          >\n            {'Ja'}\n          </Button>\n        </Modal>\n      </>\n    );\n  },\n} satisfies Story;\nExamples.parameters = exampleParameters;\n"],"names":["meta","component","Modal","title","argTypes","children","control","disable","table","category","props","classNames","dismissOnEsc","defaultValue","summary","getModalDismissOnEscDefault","toString","dismissOnOutsideClick","getModalDismissOnOutsideClickDefault","hideCloseButton","hideTitle","imageSource","options","farmerIllustration","waitIllustration","imageSourceAltText","padding","getModalPaddingDefault","shadowRootNode","variant","getModalVariantDefault","onClose","event","args","jsx","Paragraph","loremIpsum","Preview","render","ref","useRef","jsxs","Fragment","Button","current","showModal","Examples","_args","refModal","refModalRadioGroup","refModalImportant","refModalWait","close","console","log","RadioGroup","InfoOutlineSVGpath","Link","parameters","exampleParameters","docs","source","originalSource"],"mappings":"shBAqBA,MAAMA,EAAO,CACXC,UAAWC,EACXC,MAAO,oBACPC,SAAU,CAERC,SAAU,CACRC,QAAS,CAAEC,QAAS,EAAK,EACzBC,MAAO,CAAEC,SAAUA,EAASC,KAAAA,CAC9B,EACAC,WAAY,CACVL,QAAS,CAAEC,QAAS,EAAK,EACzBC,MAAO,CAAEC,SAAUA,EAASC,KAAAA,CAC9B,EACAE,aAAc,CACZJ,MAAO,CACLC,SAAUA,EAASC,MACnBG,aAAc,CAAEC,QAASC,EAA4B,EAAEC,SAAS,CAAA,CAAE,CAEtE,EACAC,sBAAuB,CACrBT,MAAO,CACLC,SAAUA,EAASC,MACnBG,aAAc,CACZC,QAASI,EAAqC,EAAEF,SAAS,CAAA,CAC3D,CAEJ,EACAG,gBAAiB,CAAEX,MAAO,CAAEC,SAAUA,EAASC,KAAAA,CAAQ,EACvDU,UAAW,CAAEZ,MAAO,CAAEC,SAAUA,EAASC,KAAAA,CAAQ,EACjDW,YAAa,CACXb,MAAO,CAAEC,SAAUA,EAASC,KAAM,EAClCJ,QAAS,SACTgB,QAAS,CAAC,GAAIC,EAAoBC,CAAgB,CACpD,EACAC,mBAAoB,CAAEjB,MAAO,CAAEC,SAAUA,EAASC,KAAAA,CAAQ,EAC1DgB,QAAS,CACPlB,MAAO,CACLC,SAAUA,EAASC,MACnBG,aAAc,CAAEC,QAASa,EAAuB,CAAA,CAAE,CAEtD,EACAC,eAAgB,CACdtB,QAAS,GACTE,MAAO,CAAEF,QAAS,GAAOG,SAAUA,EAASC,KAAAA,CAC9C,EACAP,MAAO,CAAEK,MAAO,CAAEC,SAAUA,EAASC,KAAAA,CAAQ,EAC7CmB,QAAS,CACPrB,MAAO,CACLC,SAAUA,EAASC,MACnBG,aAAc,CAAEC,QAASgB,EAAuB,CAAA,CAAE,CAEtD,EAEAC,QAAS,CACPzB,QAAS,CAAEC,QAAS,EAAK,EACzBC,MAAO,CAAEC,SAAUA,EAASuB,KAAAA,CAAM,CAEtC,EACAC,KAAM,CACJ5B,SAAW6B,EAAAA,IAAAC,EAAA,CAAWC,SAAWA,CAAA,CAAA,EACjCjC,MAAO,aAAA,CAEX,EAKakC,EAAiB,CAC5BC,OAASL,GAAsB,CACvBM,MAAAA,EAAMC,SAA0B,IAAI,EAC1C,OAEIC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAR,MAACS,GAAO,QAAS,IAAYJ,OAAAA,OAAAA,EAAAA,EAAIK,UAAJL,YAAAA,EAAaM,aACvC,SACH,aAAA,QACC3C,EAAU+B,CAAAA,GAAAA,EAAM,IAAAM,EACdN,WAAK5B,QACR,CAAA,CAAA,EACF,CAAA,CAGN,EAEayC,EAAkB,CAC7BR,OAASS,GAAuB,CACxBC,MAAAA,EAAWR,SAA0B,IAAI,EACzCS,EAAqBT,SAA0B,IAAI,EACnDU,EAAoBV,SAA0B,IAAI,EAClDW,EAAeX,SAA0B,IAAI,EAEnD,OAEIC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAACR,EAAAA,IAAAS,EAAA,CACC,UAAW,iBACX,QAAS,WAAYK,OAAAA,EAAAA,EAASJ,UAATI,YAAAA,EAAkBH,aAEtC,SACH,kBAAA,CAAA,EACCJ,EAAA,KAAAvC,EAAA,CACC,IAAK8C,EACL,MAAO,4CAEP,SAAA,CAACd,EAAA,IAAAC,EAAA,CAAU,WAAU,GAEjB,SAEJ,4FAAA,EACAM,EAAAA,KAAC,MAAI,CAAA,UAAW,OACd,SAAA,CAACP,EAAA,IAAAS,EAAA,CAAO,UAAW,eAAiB,SAAuB,uBAAA,EAC3DT,EAAAA,IAACS,EACC,CAAA,QAAS,WACT,QAAS,WAAYK,OAAAA,EAAAA,EAASJ,UAATI,YAAAA,EAAkBI,SAEtC,SACH,QAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAlB,EAAAA,IAACS,EACC,CAAA,UAAW,iBACX,QAAS,WAAYM,OAAAA,EAAAA,EAAmBL,UAAnBK,YAAAA,EAA4BJ,aAEhD,SACH,YAAA,CAAA,SACC3C,EACC,CAAA,IAAK+C,EACL,MAAO,uBACP,QAAS,IAAM,CACbI,QAAQC,IAAI,aAAa,CAG3B,EAAA,SAAA,CAACb,EAAAA,KAAAc,EAAA,CAAW,OAAQ,iBAClB,SAAA,CAAArB,EAAA,IAACqB,EAAW,MAAX,CAAiB,MAAO,MACtB,SACH,yBAAA,QACCA,EAAW,MAAX,CAAiB,MAAO,QACtB,SACH,6BAAA,QACCA,EAAW,MAAX,CAAiB,MAAO,aACtB,SACH,0BAAA,CAAA,CAAA,EACF,EACArB,MAACS,GAAO,QAAS,IAAYM,OAAAA,OAAAA,EAAAA,EAAmBL,UAAnBK,YAAAA,EAA4BG,SACtD,SACH,IAAA,CAAA,CAAA,EACF,EAEClB,EAAA,IAAAS,EAAA,CACC,UAAW,iBACX,QAAS,WACT,QAASa,EACT,QAAS,IAAYN,OAAAA,OAAAA,EAAAA,EAAkBN,UAAlBM,YAAAA,EAA2BL,aAE/C,SACH,uBAAA,SACC3C,EACC,CAAA,IAAKgD,EACL,QAAS,YACT,MAAO,kBAEP,SAAA,CAAChB,EAAA,IAAAC,EAAA,CAAU,WAAU,GAEjB,SAEJ,wEAAA,EACCD,EAAA,IAAA,MAAA,CAAI,UAAW,YACd,eAACuB,EACC,CAAA,KAAM,IACN,QAAS,IAAYP,OAAAA,OAAAA,EAAAA,EAAkBN,UAAlBM,YAAAA,EAA2BE,SAE/C,sCACH,CACF,CAAA,CAAA,EACF,EAEClB,EAAA,IAAAS,EAAA,CACC,UAAW,iBACX,QAAS,WACT,QAASa,EACT,QAAS,IAAYL,OAAAA,OAAAA,EAAAA,EAAaP,UAAbO,YAAAA,EAAsBN,aAE1C,SACH,kBAAA,EACAJ,EAAAA,KAACvC,GACC,IAAKiD,EACL,MAAO,2BACP,YAAa3B,EACb,mBACE,0EAGF,SAAA,CAACU,EAAA,IAAAC,EAAA,CAAU,WAAU,GAEjB,SAEJ,gFAAA,EACAD,EAAAA,IAACS,EACC,CAAA,UAAW,WACX,QAAS,WAAYQ,OAAAA,EAAAA,EAAaP,UAAbO,YAAAA,EAAsBC,SAE1C,SACH,IAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAAA,CAGN,EACAN,EAASY,WAAaC,YAAiBtB,EAAAqB,WAAA,CAAA,GAAArB,EAAAqB,WAAAE,KAAA,CAAA,IAAAvB,EAAAA,EAAAqB,aAAArB,YAAAA,EAAAuB,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA,IAAAzB,GAAAA,EAAAA,EAAAqB,aAAArB,YAAAA,EAAAuB,OAAAvB,YAAAA,EAAAwB,MAAAA,CAAA,CAAA,YAAAf,EAAAY,WAAA,CAAA,GAAAZ,EAAAY,WAAAE,KAAA,CAAA,IAAAd,EAAAA,EAAAY,aAAAZ,YAAAA,EAAAc,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA,IAAAhB,GAAAA,EAAAA,EAAAY,aAAAZ,YAAAA,EAAAc,OAAAd,YAAAA,EAAAe,MAAAA,CAAA,CAAA"}