{"version":3,"file":"index--gfV2u6P.js","sources":["../../../../libs/ds-typography/src/Blockquote/Blockquote.tsx","../../../../libs/ds-typography/src/Heading/Heading.tsx","../../../../libs/ds-typography/src/ListElement/ListElement.tsx","../../../../libs/ds-typography/src/List/List.tsx","../../../../libs/ds-typography/src/Paragraph/Paragraph.tsx","../../../../libs/ds-typography/src/index.ts"],"sourcesContent":["import { forwardRef, JSX } from 'react';\n\nimport { getCommonClassNameDefault } from '@skatteetaten/ds-core-utils';\n\nimport { BlockquoteProps } from './Blockquote.types';\n\nimport styles from './Blockquote.module.scss';\n\nexport const Blockquote = forwardRef<HTMLQuoteElement, BlockquoteProps>(\n  (\n    {\n      id,\n      className = getCommonClassNameDefault(),\n      lang,\n      'data-testid': dataTestId,\n      canBeManuallyFocused,\n      hasSpacing,\n      children,\n    },\n    ref\n  ): JSX.Element => {\n    const spacingClassName = hasSpacing ? styles.blockquote_hasSpacing : '';\n    return (\n      <blockquote\n        ref={ref}\n        id={id}\n        className={`${styles.blockquote} ${spacingClassName} ${className}`.trim()}\n        lang={lang}\n        data-testid={dataTestId}\n        tabIndex={canBeManuallyFocused ? -1 : undefined}\n      >\n        {children}\n      </blockquote>\n    );\n  }\n);\n\nBlockquote.displayName = 'Blockquote';\n","import { forwardRef, JSX } from 'react';\n\nimport { getCommonClassNameDefault } from '@skatteetaten/ds-core-utils';\n\nimport { HeadingProps } from './Heading.types';\n\nimport styles from './Heading.module.scss';\n\nexport const Heading = forwardRef<HTMLHeadingElement, HeadingProps>(\n  (\n    {\n      id,\n      className = getCommonClassNameDefault(),\n      lang,\n      'data-testid': dataTestId,\n      as: Tag,\n      level,\n      canBeManuallyFocused,\n      hasSpacing,\n      children,\n    },\n    ref\n  ): JSX.Element => {\n    const levelClassName = level ? styles[`heading_level${level}`] : '';\n    let spacingClassName = '';\n    if (hasSpacing) {\n      if (level === 1) {\n        spacingClassName = styles.heading_hasSpacingMedium;\n      } else if (level === 2) {\n        spacingClassName = styles.heading_hasSpacingSmallMobileMediumOtherwise;\n      } else if (level === 3 || level === 4) {\n        spacingClassName = styles.heading_hasSpacingSmall;\n      } else if (level === 5) {\n        spacingClassName = styles.heading_hasSpacingExtraSmall;\n      }\n    }\n    return (\n      <Tag\n        ref={ref}\n        id={id}\n        className={`${styles.heading} ${levelClassName} ${spacingClassName} ${className}`.trim()}\n        lang={lang}\n        data-testid={dataTestId}\n        tabIndex={canBeManuallyFocused ? -1 : undefined}\n      >\n        {children}\n      </Tag>\n    );\n  }\n);\n\nHeading.displayName = 'Heading';\n","import { forwardRef, JSX } from 'react';\n\nimport { getCommonClassNameDefault } from '@skatteetaten/ds-core-utils';\n\nimport { ListElementProps } from './ListElement.types';\n\nimport styles from './ListElement.module.scss';\n\nexport const ListElement = forwardRef<HTMLLIElement, ListElementProps>(\n  (\n    {\n      id,\n      className = getCommonClassNameDefault(),\n      lang,\n      'data-testid': dataTestId,\n      children,\n    },\n    ref\n  ): JSX.Element => {\n    return (\n      <li\n        ref={ref}\n        id={id}\n        className={`${styles.element} ${className}`.trim()}\n        lang={lang}\n        data-testid={dataTestId}\n      >\n        {children}\n      </li>\n    );\n  }\n);\n\nListElement.displayName = 'ListElement';\n","import { forwardRef, JSX } from 'react';\n\nimport { getCommonClassNameDefault } from '@skatteetaten/ds-core-utils';\n\nimport { getListAsDefault } from './defaults';\nimport { ListProps, ListComponent, AnyHTMLListElement } from './List.types';\nimport { ListElement } from '../ListElement/ListElement';\n\nimport styles from './List.module.scss';\n\nexport const List = forwardRef<AnyHTMLListElement, ListProps>(\n  (\n    {\n      id,\n      className = getCommonClassNameDefault(),\n      lang,\n      'data-testid': dataTestId,\n      as: Tag = getListAsDefault(),\n      canBeManuallyFocused,\n      hasSpacing,\n      children,\n    },\n    ref\n  ): JSX.Element => {\n    const bulletClassName = Tag === 'ul' ? styles.list_withBullet : '';\n    const spacingClassName = hasSpacing ? styles.list_hasSpacing : '';\n    return (\n      <Tag\n        ref={ref as (instance: AnyHTMLListElement | null) => void}\n        id={id}\n        className={`${styles.list} ${bulletClassName} ${spacingClassName} ${className}`.trim()}\n        lang={lang}\n        data-testid={dataTestId}\n        tabIndex={canBeManuallyFocused ? -1 : undefined}\n      >\n        {children}\n      </Tag>\n    );\n  }\n) as ListComponent;\n\nList.displayName = 'List';\nList.Element = ListElement;\nList.Element.displayName = 'List.Element';\n\nexport { getListAsDefault };\n","import { forwardRef, JSX } from 'react';\n\nimport { getCommonClassNameDefault } from '@skatteetaten/ds-core-utils';\n\nimport { getParagraphVariantDefault } from './defaults';\nimport { ParagraphProps } from './Paragraph.types';\n\nimport styles from './Paragraph.module.scss';\n\nexport const Paragraph = forwardRef<HTMLParagraphElement, ParagraphProps>(\n  (\n    {\n      id,\n      className = getCommonClassNameDefault(),\n      lang,\n      'data-testid': dataTestId,\n      variant = getParagraphVariantDefault(),\n      canBeManuallyFocused,\n      hasSpacing,\n      children,\n    },\n    ref\n  ): JSX.Element => {\n    let spacingClassName = '';\n    if (hasSpacing) {\n      if (variant === 'standard') {\n        spacingClassName = styles.paragraph_hasSpacingLarge;\n      } else if (variant === 'ingress') {\n        spacingClassName = styles.paragraph_hasSpacingExtraLarge;\n      }\n    }\n    const concatenatedClassName = `${styles.paragraph} ${\n      styles[`paragraph_${variant}`]\n    } ${spacingClassName} ${className}`.trim();\n    return (\n      <p\n        ref={ref}\n        id={id}\n        className={concatenatedClassName}\n        lang={lang}\n        data-testid={dataTestId}\n        tabIndex={canBeManuallyFocused ? -1 : undefined}\n      >\n        {children}\n      </p>\n    );\n  }\n);\n\nParagraph.displayName = 'Paragraph';\n\nexport { getParagraphVariantDefault };\n","export * from './Blockquote/Blockquote';\nexport * from './Blockquote/Blockquote.types';\nexport * from './Heading/Heading';\nexport * from './Heading/Heading.types';\nexport * from './List/List';\nexport * from './List/List.types';\nexport * from './Paragraph/Paragraph';\nexport * from './Paragraph/Paragraph.types';\n"],"names":["cov_24yqsyg40m","path","hash","global","gcv","coverageData","coverage","actualCoverage","Blockquote","s","forwardRef","id","className","b","getCommonClassNameDefault","lang","dataTestId","canBeManuallyFocused","hasSpacing","children","ref","f","spacingClassName","styles","blockquote_hasSpacing","jsx","blockquote","trim","tabIndex","cov_xdxyfperh","Heading","as","Tag","level","levelClassName","heading_hasSpacingMedium","heading_hasSpacingSmallMobileMediumOtherwise","heading_hasSpacingSmall","heading_hasSpacingExtraSmall","heading","cov_9xz5xb6jm","ListElement","element","cov_ze15kuut2","List","getListAsDefault","bulletClassName","list_withBullet","list_hasSpacing","list","cov_2g3m3w41s9","Paragraph","variant","getParagraphVariantDefault","paragraph_hasSpacingLarge","paragraph_hasSpacingExtraLarge","concatenatedClassName","paragraph","cov_33nkkwdz8"],"mappings":"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AA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,IAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,C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"}