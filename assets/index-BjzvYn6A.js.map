{"version":3,"file":"index-BjzvYn6A.js","sources":["../../../../libs/ds-content/src/Panel/Panel.tsx","../../../../libs/ds-content/src/DescriptionList/defaults.ts","../../../../libs/ds-content/src/DescriptionListElement/DescriptionListElement.tsx","../../../../libs/ds-content/src/DescriptionList/DescriptionList.tsx","../../../../libs/ds-content/src/index.ts"],"sourcesContent":["import { forwardRef, JSX, useImperativeHandle, useRef } from 'react';\n\nimport { getCommonClassNameDefault } from '@skatteetaten/ds-core-utils';\nimport { Heading } from '@skatteetaten/ds-typography';\n\nimport {\n  getPanelVariantDefault,\n  getPanelSpacingDefault,\n  getPanelColorDefault,\n  getPanelTitleAsDefault,\n  getPanelSubtitleAsDefault,\n  getPanelPaddingDefault,\n} from './defaults';\nimport { PanelPadding, PanelProps, PanelSpacing } from './Panel.types';\n\nimport styles from './Panel.module.scss';\n\nexport const Panel = forwardRef<HTMLDivElement, PanelProps>(\n  (\n    {\n      id,\n      className = getCommonClassNameDefault(),\n      lang,\n      'data-testid': dataTestId,\n      headingRef,\n      canManuallySetTitleFocus,\n      color = getPanelColorDefault(),\n      classNames,\n      imageSource,\n      imageSourceAltText,\n      hasResponsivePadding,\n      padding = getPanelPaddingDefault(),\n      spacing = getPanelSpacingDefault(),\n      subtitle,\n      subtitleAs = getPanelSubtitleAsDefault(),\n      title,\n      titleAs = getPanelTitleAsDefault(),\n      variant = getPanelVariantDefault(),\n      hideGraphicMobile,\n      hideSubtitle,\n      hideTitle,\n      renderIcon,\n      children,\n    },\n    ref\n  ): JSX.Element => {\n    const panelVariantClassName =\n      variant === 'filled' ? styles.panel_filled : styles.panel_outline;\n    const panelColorClassName = styles[`panel_${color}`];\n    const panelPaddingClassName =\n      styles[\n        `panel_padding${padding.toUpperCase() as Uppercase<PanelPadding>}`\n      ];\n    const panelSpacingClassName =\n      styles[\n        `panel_spacing${spacing.toUpperCase() as Uppercase<PanelSpacing>}`\n      ];\n\n    let panelGraphicClassName = '';\n    if (imageSource) {\n      panelGraphicClassName = styles.panel_graphicImage;\n    } else if (renderIcon) {\n      panelGraphicClassName = `${styles.panel_graphicIcon} ${\n        hideGraphicMobile ? styles.panel_graphicIconHide : ''\n      }`;\n    }\n    const panelPaddingResponsiveClassName = hasResponsivePadding\n      ? styles.panelResponsive\n      : '';\n\n    const panelCustomClassNames = classNames?.padding;\n    const panelClassName =\n      `${styles.panel} ${panelVariantClassName} ${panelColorClassName} ${panelPaddingClassName} ${panelPaddingResponsiveClassName} ${panelSpacingClassName} ${panelGraphicClassName} ${panelCustomClassNames} ${className}`.trim();\n\n    const graphicClassName = `${styles.panelGraphic} ${\n      hideGraphicMobile ? styles.panelGraphicHide : ''\n    }`.trim();\n    const iconClassName = `${renderIcon ? graphicClassName : ''}`.trim();\n    const articleClassName = `${styles.panelArticle}`.trim();\n    const panelHeadingRef = useRef<HTMLHeadingElement>(null);\n    useImperativeHandle(\n      headingRef,\n      () => panelHeadingRef?.current as HTMLHeadingElement\n    );\n    return (\n      <div\n        ref={ref}\n        id={id}\n        className={panelClassName}\n        lang={lang}\n        data-testid={dataTestId}\n      >\n        {!renderIcon && imageSource && (\n          <div className={`${graphicClassName}`}>\n            <img\n              src={imageSource}\n              alt={imageSourceAltText ?? ''}\n              className={styles.panelImage}\n            />\n          </div>\n        )}\n        {!imageSource && renderIcon && (\n          <div className={iconClassName}>{renderIcon?.()}</div>\n        )}\n        <div className={articleClassName}>\n          {title && (\n            <Heading\n              ref={panelHeadingRef}\n              as={titleAs}\n              level={3}\n              className={hideTitle ? styles.srOnly : ''}\n              hasSpacing={!subtitle || hideSubtitle}\n              canBeManuallyFocused={canManuallySetTitleFocus}\n            >\n              {title}\n            </Heading>\n          )}\n          {subtitle && (\n            <Heading\n              as={subtitleAs}\n              level={5}\n              className={hideSubtitle ? styles.srOnly : ''}\n              hasSpacing\n            >\n              {subtitle}\n            </Heading>\n          )}\n          {children}\n        </div>\n      </div>\n    );\n  }\n);\n\nPanel.displayName = 'Panel';\n\nexport {\n  getPanelVariantDefault,\n  getPanelSpacingDefault,\n  getPanelColorDefault,\n  getPanelTitleAsDefault,\n  getPanelSubtitleAsDefault,\n  getPanelPaddingDefault,\n};\n","import { DescriptionListSize, Orientation } from './DescriptionList.types';\n\nexport const getDescriptionListSizeDefault = (): DescriptionListSize =>\n  'medium';\nexport const getDescriptionListIsVerticalOnMobileDefault = (): boolean => true;\nexport const getDescriptionDirectionDefault = (): Orientation => 'horizontal';\n","import { forwardRef } from 'react';\n\nimport { getCommonClassNameDefault } from '@skatteetaten/ds-core-utils';\n\nimport { DescriptionListElementProps } from './DescriptionListElement.types';\n\nimport styles from './DescriptionListElement.module.scss';\n\nexport const DescriptionListElement = forwardRef<\n  HTMLDListElement,\n  DescriptionListElementProps\n>(\n  (\n    {\n      id,\n      className = getCommonClassNameDefault(),\n      lang,\n      'data-testid': dataTestId,\n      term,\n      children,\n    },\n    ref\n  ) => {\n    return (\n      <>\n        <dt\n          ref={ref}\n          id={id}\n          className={`${styles.term} ${className}`.trim()}\n          lang={lang}\n          data-testid={dataTestId}\n        >\n          {term}\n        </dt>\n        <dd className={styles.description}>{children}</dd>\n      </>\n    );\n  }\n);\n\nDescriptionListElement.displayName = 'DescriptionListElement';\n","import { Children, forwardRef } from 'react';\n\nimport {\n  getCommonClassNameDefault,\n  useMediaQuery,\n} from '@skatteetaten/ds-core-utils';\n\nimport {\n  getDescriptionDirectionDefault,\n  getDescriptionListIsVerticalOnMobileDefault,\n  getDescriptionListSizeDefault,\n} from './defaults';\nimport {\n  DescriptionListComponent,\n  DescriptionListProps,\n} from './DescriptionList.types';\nimport { DescriptionListElement } from '../DescriptionListElement/DescriptionListElement';\n\nimport styles from './DescriptionList.module.scss';\n\nexport const DescriptionList = forwardRef<\n  HTMLDListElement,\n  DescriptionListProps\n>(\n  (\n    {\n      id,\n      className = getCommonClassNameDefault(),\n      lang,\n      'data-testid': dataTestId,\n      size = getDescriptionListSizeDefault(),\n      variant,\n      descriptionDirection = getDescriptionDirectionDefault(),\n      descriptionWeight,\n      termWeight,\n      hasSpacing,\n      isVerticalOnMobile = getDescriptionListIsVerticalOnMobileDefault(),\n      children,\n    },\n    ref\n  ) => {\n    const isMobile = !useMediaQuery('(min-width: 640px)');\n    const isHorizontal =\n      variant === 'horizontal' && (!isMobile || !isVerticalOnMobile);\n\n    const verticalClassName =\n      descriptionDirection === 'vertical'\n        ? styles.descriptionList_verticalVertical\n        : styles.descriptionList_vertical;\n\n    const variantClassName = isHorizontal\n      ? styles.descriptionList_horizontal\n      : verticalClassName;\n\n    const sizeClassName = size === 'small' ? styles.descriptionList_small : '';\n    const spacingClassName = hasSpacing ? styles.spacing : '';\n\n    const termClassName =\n      termWeight === 'regular' ? styles.descriptionListTermRegular : '';\n    const descriptionClassName =\n      descriptionWeight === 'bold' ? styles.descriptionListDescriptionBold : '';\n\n    const descriptionListClassname =\n      `${styles.descriptionList} ${variantClassName} ${spacingClassName} ${sizeClassName} ${termClassName} ${descriptionClassName} ${className}`.trim();\n\n    return (\n      <dl\n        ref={ref}\n        id={id}\n        className={descriptionListClassname}\n        lang={lang}\n        data-testid={dataTestId}\n      >\n        {variant === 'horizontal' && (!isMobile || !isVerticalOnMobile)\n          ? Children.map(children, (child) => (\n              <div\n                className={\n                  descriptionDirection === 'horizontal'\n                    ? styles.childWrapper\n                    : undefined\n                }\n              >\n                {child}\n              </div>\n            ))\n          : children}\n      </dl>\n    );\n  }\n) as DescriptionListComponent;\n\nDescriptionList.displayName = 'DescriptionList';\nDescriptionList.Element = DescriptionListElement;\nDescriptionList.Element.displayName = 'DescriptionList.Element';\n\nexport {\n  getDescriptionListSizeDefault,\n  getDescriptionDirectionDefault,\n  getDescriptionListIsVerticalOnMobileDefault,\n};\n","export * from './Panel/Panel';\nexport * from './Panel/Panel.types';\nexport * from './DescriptionList/DescriptionList';\nexport * from './DescriptionList/DescriptionList.types';\n"],"names":["cov_14esj0uvv5","path","hash","global","gcv","coverageData","coverage","actualCoverage","Panel","s","forwardRef","id","className","b","getCommonClassNameDefault","lang","dataTestId","headingRef","canManuallySetTitleFocus","color","getPanelColorDefault","classNames","imageSource","imageSourceAltText","hasResponsivePadding","padding","getPanelPaddingDefault","spacing","getPanelSpacingDefault","subtitle","subtitleAs","getPanelSubtitleAsDefault","title","titleAs","getPanelTitleAsDefault","variant","getPanelVariantDefault","hideGraphicMobile","hideSubtitle","hideTitle","renderIcon","children","ref","f","panelVariantClassName","styles","panel_filled","panel_outline","panelColorClassName","panelPaddingClassName","toUpperCase","panelSpacingClassName","panelGraphicClassName","panel_graphicImage","panel_graphicIcon","panel_graphicIconHide","panelPaddingResponsiveClassName","panelResponsive","panelCustomClassNames","panelClassName","panel","trim","graphicClassName","panelGraphic","panelGraphicHide","iconClassName","articleClassName","panelArticle","panelHeadingRef","useRef","useImperativeHandle","current","jsxs","jsx","src","alt","panelImage","Heading","as","level","srOnly","hasSpacing","canBeManuallyFocused","getDescriptionListSizeDefault","cov_3w1bgarik","DescriptionListElement","term","Fragment","cov_2f4y7effo8","DescriptionList","size","descriptionDirection","getDescriptionDirectionDefault","descriptionWeight","termWeight","isVerticalOnMobile","getDescriptionListIsVerticalOnMobileDefault","isMobile","useMediaQuery","isHorizontal","verticalClassName","descriptionList_verticalVertical","descriptionList_vertical","variantClassName","descriptionList_horizontal","sizeClassName","descriptionList_small","spacingClassName","termClassName","descriptionListTermRegular","descriptionClassName","descriptionListDescriptionBold","descriptionListClassname","descriptionList","cov_pxqcbm2s9"],"mappings":"6zIAuBqB,SAAAA,GAAA,CAAA,IAAAC,EAAA,mGAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,mGAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA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"}