{"version":3,"file":"font-D36hicbN.js","sources":["../../../../apps/ds-playground/src/stories/designtokens/FontTokenExamplesGenerator.tsx","../../../../apps/ds-playground/src/stories/designtokens/font.mdx"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport { Fragment, JSX } from 'react';\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-ignore\nimport fontJson from '@skatteetaten/ds-core-designtokens/designtokens/font.json';\n/* eslint-enable @typescript-eslint/ban-ts-comment */\n\ninterface FontTokenExamplesGeneratorProps {\n  propertyType: 'font-size' | 'font-weight' | 'line-height';\n  sampleText: string;\n}\n\nexport const FontTokenExamplesGenerator = ({\n  propertyType,\n  sampleText,\n}: FontTokenExamplesGeneratorProps): JSX.Element => {\n  const fontTokens = fontJson[':root,\\n:host'];\n\n  const tokens = Object.keys(fontTokens).filter((key) =>\n    key.includes(propertyType)\n  ) as Array<keyof typeof fontTokens>;\n\n  const isFontSize = propertyType === 'font-size';\n  const isFontWeight = propertyType === 'font-weight';\n  const hasLineHeight = propertyType === 'line-height';\n\n  return (\n    <div className={hasLineHeight ? 'fontTokenExample_grid' : ''}>\n      {Object.keys(tokens).map((_value: string, index: number) => {\n        const fontValue = fontTokens[tokens[index]];\n        const fontSizeValue = isFontSize\n          ? fontValue\n          : 'var(--semantic-font-size-default)';\n        const fontWeightValue = isFontWeight\n          ? fontValue\n          : 'var(--semantic-font-weight-default)';\n        const lineHeightValue = hasLineHeight\n          ? fontValue\n          : 'var(--semantic-line-height-default)';\n\n        const uniqueSuffixName = `${tokens[index]}`;\n        const fontClassName = `fontToken${index}${uniqueSuffixName}`;\n        const cssRule = `.${fontClassName} { font-size: ${fontSizeValue}; font-weight: ${fontWeightValue}; line-height: ${lineHeightValue}; }`;\n\n        return (\n          <Fragment key={uniqueSuffixName}>\n            <style>{cssRule}</style>\n            <p\n              className={`fontTokenExample ${fontClassName} ${\n                hasLineHeight ? 'fontTokenExample_lineheight' : ''\n              }`.trim()}\n            >\n              <strong>{`${tokens[index]}: ${\n                fontTokens[tokens[index]]\n              }`}</strong>\n              <br />\n              {sampleText}\n            </p>\n          </Fragment>\n        );\n      })}\n    </div>\n  );\n};\n","import { Meta, Story, Canvas } from '@storybook/blocks';\nimport { FontTokenExamplesGenerator } from './FontTokenExamplesGenerator';\nimport * as FontStories from './font.stories';\nimport { VersionBadge } from '../utils/VersionBadge';\n\n# Font\n\n<VersionBadge packageName={'core-designtokens'} />\n\n<Meta of={FontStories} />\n\n## Font-size\n\n<FontTokenExamplesGenerator\n  propertyType={'font-size'}\n  sampleText={\n    'Skatteetaten ønsker å gjøre det enklere å gjøre rett og vanskeligere å gjøre feil'\n  }\n/>\n\n## Font-weight\n\n<FontTokenExamplesGenerator\n  propertyType={'font-weight'}\n  sampleText={\n    'Skatteetaten ønsker å gjøre det enklere å gjøre rett og vanskeligere å gjøre feil'\n  }\n/>\n\n## Line-height\n\n<FontTokenExamplesGenerator\n  propertyType={'line-height'}\n  sampleText={\n    'Skatteetaten ønsker å gjøre det enklere å gjøre rett og vanskeligere å gjøre feil, redusere skattekriminalitet, forvalte informasjon for å bidra til forenkling og digitalisering, jobbe sammen fra start og sist, bruke data, analyse og maskinlæring i stor skala i oppgaveløsningen. Alt for å sikre finansieringen av velferdsstaten.'\n  }\n/>\n\n<Canvas withSource=\"none\">\n  <Story of={FontStories.Font} />\n</Canvas>\n"],"names":["cov_iu62augz2","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","FontTokenExamplesGenerator","propertyType","sampleText","f","fontTokens","fontJson","tokens","Object","keys","filter","key","includes","isFontSize","isFontWeight","hasLineHeight","jsx","className","b","children","_value","index","fontValue","fontSizeValue","fontWeightValue","_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","VersionBadge","Meta","FontStories","Canvas","Story","FontStories.Font","MDXContent","MDXLayout"],"mappings":"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"}