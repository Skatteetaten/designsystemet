{"version":3,"file":"Modal.stories-BLoL02Zk.js","sources":["../../../../apps/ds-playground/src/stories/components/Modal.stories.tsx"],"sourcesContent":["import { useRef, JSX, useEffect, useState } from 'react';\n\nimport { Meta, StoryObj } from '@storybook/react';\n\nimport { Button } from '@skatteetaten/ds-buttons';\nimport { dsI18n, useMediaQuery } from '@skatteetaten/ds-core-utils';\nimport { RadioGroup } from '@skatteetaten/ds-forms';\nimport { UpdateSVGpath, WarningOutlineIcon } from '@skatteetaten/ds-icons';\nimport {\n  Modal,\n  getModalDismissOnEscDefault,\n  getModalDismissOnOutsideClickDefault,\n  getModalPaddingDefault,\n  getModalVariantDefault,\n} from '@skatteetaten/ds-overlays';\nimport { List, Paragraph } from '@skatteetaten/ds-typography';\n\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport skeLogo from '../../../../../libs/ds-core-utils/src/SkatteetatenLogo/SKESquare40.svg';\nimport { category } from '../../../.storybook/helpers';\nimport farmerIllustration from '../../assets/farmer-illustration.svg';\nimport waitIllustration from '../../assets/wait-alert-illustration.png';\nimport { loremIpsum } from '../__tests__/testUtils/storybook.testing.utils';\nimport { exampleParameters } from '../utils/stories.utils';\n\nconst meta = {\n  component: Modal,\n  title: 'Komponenter/Modal',\n  argTypes: {\n    // Props\n    children: {\n      control: 'text',\n      table: { category: category.props },\n    },\n    classNames: {\n      control: { disable: true },\n      table: { category: category.props },\n    },\n    dismissOnEsc: {\n      table: {\n        category: category.props,\n        defaultValue: { summary: getModalDismissOnEscDefault().toString() },\n      },\n    },\n    dismissOnOutsideClick: {\n      table: {\n        category: category.props,\n        defaultValue: {\n          summary: getModalDismissOnOutsideClickDefault().toString(),\n        },\n      },\n    },\n    hideCloseButton: { table: { category: category.props } },\n    hideTitle: { table: { category: category.props } },\n    imageSource: {\n      table: { category: category.props },\n      control: 'select',\n      options: ['', farmerIllustration, waitIllustration],\n    },\n    imageSourceAltText: { table: { category: category.props } },\n    padding: {\n      table: {\n        category: category.props,\n        defaultValue: { summary: getModalPaddingDefault() },\n      },\n    },\n    renderIcon: {\n      table: { category: category.props },\n      control: 'select',\n      options: ['', 'Icon', 'Logo'],\n      mapping: {\n        '': '',\n        Icon: (): JSX.Element => <WarningOutlineIcon size={'extraLarge'} />,\n        Logo: (): JSX.Element => (\n          <img src={skeLogo} alt={'Skatteetaten logo'} className={'logo'} />\n        ),\n      },\n    },\n    shadowRootNode: {\n      control: false,\n      table: { control: false, category: category.props },\n    },\n    title: { table: { category: category.props } },\n    variant: {\n      table: {\n        category: category.props,\n        defaultValue: { summary: getModalVariantDefault() },\n      },\n    },\n    // Events\n    onClose: {\n      control: { disable: true },\n      table: { category: category.event },\n    },\n  },\n  args: {\n    children: <Paragraph>{loremIpsum}</Paragraph>,\n    title: 'Modal title',\n  },\n} satisfies Meta<typeof Modal>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Preview: Story = {\n  render: (args): JSX.Element => {\n    const ref = useRef<HTMLDialogElement>(null);\n    return (\n      <>\n        <Button onClick={(): void => ref.current?.showModal()}>\n          {'Åpne modal'}\n        </Button>\n        <Modal {...args} ref={ref}>\n          {args.children}\n        </Modal>\n      </>\n    );\n  },\n} satisfies Story;\n\nexport const Samtykkemodal: Story = {\n  render: (_args): JSX.Element => {\n    const refModal = useRef<HTMLDialogElement>(null);\n\n    return (\n      <>\n        <Button onClick={(): void => refModal.current?.showModal()}>\n          {'Nye opplysninger'}\n        </Button>\n        <Modal\n          ref={refModal}\n          title={'Vil du erstatte nye opplysninger fra fil?'}\n        >\n          <Paragraph hasSpacing>\n            {\n              'Du har valgt å laste opp nye opplysninger fra fil. Vil du at disse skal gjelde fra nå av?'\n            }\n          </Paragraph>\n          <div className={'flex'}>\n            <Button className={'marginRightM'}>{'Erstatt opplysninger'}</Button>\n            <Button\n              variant={'tertiary'}\n              onClick={(): void => refModal.current?.close()}\n            >\n              {'Avbryt'}\n            </Button>\n          </div>\n        </Modal>\n      </>\n    );\n  },\n} satisfies Story;\nSamtykkemodal.parameters = exampleParameters;\n\nexport const Ventevarsel: Story = {\n  render: function Render(_args): JSX.Element {\n    const refModalWait = useRef<HTMLDialogElement>(null);\n    const [time, setTime] = useState<number>(1200000);\n    const lastActivity = useRef(new Date().getTime());\n\n    const resetTimer = (): void => {\n      lastActivity.current = new Date().getTime();\n    };\n\n    const closeDialog = (): void => {\n      refModalWait.current?.close();\n      resetTimer();\n    };\n\n    useEffect(() => {\n      const checkExpiredTime = (): void => {\n        const timePassed = new Date().getTime() - lastActivity.current;\n\n        if (timePassed >= time) {\n          refModalWait.current?.showModal();\n        }\n      };\n      const intervalId = setInterval(checkExpiredTime, 1000);\n      return (): void => clearInterval(intervalId);\n    }, [time]);\n\n    useEffect(() => {\n      const abortController = new AbortController();\n      const { signal } = abortController;\n\n      window.addEventListener('keydown', resetTimer, { signal });\n      window.addEventListener('mousemove', resetTimer, { signal });\n      window.addEventListener('scroll', resetTimer, { signal });\n      window.addEventListener('resize', resetTimer, { signal });\n\n      return (): void => {\n        abortController.abort();\n      };\n    }, []);\n\n    return (\n      <>\n        <Button\n          variant={'secondary'}\n          className={'bottomSpacingXL'}\n          onClick={(): void => refModalWait.current?.showModal()}\n        >\n          {'Vis ventevarsel'}\n        </Button>\n        <RadioGroup\n          legend={'Ventevarseleksempel åpnes automatisk etter'}\n          helpText={\n            'Hver gang du beveger musepekeren, scroller eller gjør et tastetrykk, resettes timeren.'\n          }\n          selectedValue={time}\n          onChange={(e): void => setTime(Number(e.target.value))}\n        >\n          <RadioGroup.Radio value={1200000}>\n            {'20 minutter (anbefalt i løsninger)'}\n          </RadioGroup.Radio>\n          <RadioGroup.Radio value={5000}>{'5 sekunder'}</RadioGroup.Radio>\n        </RadioGroup>\n        <Modal\n          ref={refModalWait}\n          title={dsI18n.t('ds_overlays:modal.WaitNoticeTitle')}\n          imageSource={waitIllustration}\n          imageSourceAltText={dsI18n.t(\n            'ds_overlays:modal.WaitNoticeImageAltText'\n          )}\n          onClose={closeDialog}\n        >\n          <Paragraph hasSpacing>\n            {dsI18n.t('ds_overlays:modal.WaitNoticeParagraph')}\n          </Paragraph>\n          <Button\n            onClick={(): void => {\n              closeDialog();\n            }}\n          >\n            {dsI18n.t('ds_overlays:modal.StayLoggedIn')}\n          </Button>\n        </Modal>\n      </>\n    );\n  },\n} satisfies Story;\nVentevarsel.parameters = exampleParameters;\n\nexport const Feilmeldingsmodal: Story = {\n  render: function Render(_args): JSX.Element {\n    const refModalFeil = useRef<HTMLDialogElement>(null);\n    const isBigScreen = useMediaQuery('(min-width: 640px)');\n\n    return (\n      <>\n        <Button\n          variant={'danger'}\n          onClick={(): void => refModalFeil.current?.showModal()}\n        >\n          {'Åpne feilmeldingsmodal'}\n        </Button>\n        <Modal\n          ref={refModalFeil}\n          title={'Beklager, noe gikk galt'}\n          padding={isBigScreen ? 'mega' : 'm'}\n          renderIcon={(): JSX.Element => (\n            <WarningOutlineIcon size={'extraLarge'} />\n          )}\n        >\n          <Paragraph hasSpacing>\n            {'Vi klarte ikke å hente skjemet akkurat nå.'}\n          </Paragraph>\n          <Paragraph className={'bold'}>{'Du kan prøve å'}</Paragraph>\n          <List hasSpacing>\n            <List.Element>\n              {'vente noen minutter og '}\n              <a href={'#link'}>{'laste inn siden på nytt'}</a>\n            </List.Element>\n            <List.Element>\n              <a href={'#link'}>{'gå tilbake til forrige side'}</a>\n            </List.Element>\n          </List>\n          <Paragraph hasSpacing>\n            {'Hvis du fortsatt har problemer kan du '}\n            <a href={'#link'}>{'kontakte oss'}</a>\n          </Paragraph>\n          <Button\n            className={'exampleSpacing'}\n            svgPath={UpdateSVGpath}\n            onClick={(): void => refModalFeil.current?.close()}\n          >\n            {'Last inn siden på nytt'}\n          </Button>\n          <Button variant={'secondary'} href={'#'}>\n            {'Gå til forsiden'}\n          </Button>\n        </Modal>\n      </>\n    );\n  },\n} satisfies Story;\nFeilmeldingsmodal.parameters = exampleParameters;\n"],"names":["meta","component","Modal","title","argTypes","children","control","table","category","props","classNames","disable","dismissOnEsc","defaultValue","summary","getModalDismissOnEscDefault","toString","dismissOnOutsideClick","getModalDismissOnOutsideClickDefault","hideCloseButton","hideTitle","imageSource","options","farmerIllustration","waitIllustration","imageSourceAltText","padding","getModalPaddingDefault","renderIcon","mapping","Icon","jsx","WarningOutlineIcon","Logo","skeLogo","shadowRootNode","variant","getModalVariantDefault","onClose","event","args","Paragraph","loremIpsum","Preview","render","ref","useRef","jsxs","Fragment","Button","current","showModal","Samtykkemodal","_args","refModal","close","parameters","exampleParameters","Ventevarsel","refModalWait","time","setTime","useState","lastActivity","Date","getTime","resetTimer","closeDialog","useEffect","intervalId","setInterval","checkExpiredTime","clearInterval","abortController","AbortController","signal","addEventListener","abort","RadioGroup","e","Number","target","value","dsI18n","t","Feilmeldingsmodal","refModalFeil","isBigScreen","useMediaQuery","List","UpdateSVGpath","docs","source","originalSource"],"mappings":"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"}