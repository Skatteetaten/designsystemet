{"version":3,"file":"preview-36Qsf1bZ.js","sources":["../../../../node_modules/mockdate/lib/mockdate.js","../../../../apps/ds-playground/.storybook/preview.tsx"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.MockDate = {}));\n}(this, (function (exports) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\n\n    var RealDate = Date;\r\n    var now = null;\r\n    var MockDate = /** @class */ (function (_super) {\r\n        __extends(Date, _super);\r\n        function Date(y, m, d, h, M, s, ms) {\r\n            _super.call(this) || this;\r\n            var date;\r\n            switch (arguments.length) {\r\n                case 0:\r\n                    if (now !== null) {\r\n                        date = new RealDate(now.valueOf());\r\n                    }\r\n                    else {\r\n                        date = new RealDate();\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    date = new RealDate(y);\r\n                    break;\r\n                default:\r\n                    d = typeof d === 'undefined' ? 1 : d;\r\n                    h = h || 0;\r\n                    M = M || 0;\r\n                    s = s || 0;\r\n                    ms = ms || 0;\r\n                    date = new RealDate(y, m, d, h, M, s, ms);\r\n                    break;\r\n            }\r\n            return date;\r\n        }\r\n        return Date;\r\n    }(RealDate));\r\n    MockDate.prototype = RealDate.prototype;\r\n    MockDate.UTC = RealDate.UTC;\r\n    MockDate.now = function () {\r\n        return new MockDate().valueOf();\r\n    };\r\n    MockDate.parse = function (dateString) {\r\n        return RealDate.parse(dateString);\r\n    };\r\n    MockDate.toString = function () {\r\n        return RealDate.toString();\r\n    };\r\n    function set(date) {\r\n        var dateObj = new Date(date.valueOf());\r\n        if (isNaN(dateObj.getTime())) {\r\n            throw new TypeError('mockdate: The time set is an invalid date: ' + date);\r\n        }\r\n        // @ts-ignore\r\n        Date = MockDate;\r\n        now = dateObj.valueOf();\r\n    }\r\n    function reset() {\r\n        Date = RealDate;\r\n    }\r\n    var mockdate = {\r\n        set: set,\r\n        reset: reset,\r\n    };\n\n    exports.default = mockdate;\n    exports.reset = reset;\n    exports.set = set;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","import { JSX } from 'react';\n\nimport breakpoints from '@skatteetaten/ds-core-designtokens/designtokens/breakpoints.json';\nimport {\n  dsI18n,\n  getCommonClassNameDefault,\n  Languages,\n} from '@skatteetaten/ds-core-utils';\nimport { useEffect, useGlobals } from '@storybook/preview-api';\nimport { Decorator, Preview } from '@storybook/react';\nimport * as MockDate from 'mockdate';\n\nimport { category } from './helpers';\n\nimport '@skatteetaten/ds-core-designtokens/index.css';\nimport './playground.css';\nimport '../src/stories/designtokens/designtokens.css';\n\nif (process.env.NODE_ENV === 'development') {\n  import('./abomination.css');\n}\n\nconst LanguageUpdater: Decorator = (Story, context) => {\n  const [{ locale }, updateGlobals] = useGlobals();\n  useEffect(() => {\n    const locale = context.parameters.locale;\n    if (locale) {\n      updateGlobals({ locale: context.parameters.locale });\n    }\n  }, [context.parameters.locale, updateGlobals]);\n  useEffect(() => {\n    dsI18n.changeLanguage(locale);\n    const lang = locale.substring(0, locale.indexOf('_'));\n    document.documentElement.setAttribute('lang', lang);\n  }, [locale]);\n  return <Story />;\n};\n\nconst testBlock: Decorator = (Story, context) => {\n  if (context.title.startsWith('Tester')) {\n    return (\n      <div data-test-block>\n        <Story />\n      </div>\n    );\n  } else {\n    return <Story />;\n  }\n};\n\nconst mockDate: Decorator = (Story, context) => {\n  MockDate.reset();\n  if (context.parameters.mockDate) {\n    MockDate.set(context.parameters.mockDate);\n  }\n  return <Story />;\n};\n\nconst makeViewPort = (\n  dsbreakpoint: keyof typeof breakpoints | '--mobile'\n): object => {\n  return {\n    [dsbreakpoint]: {\n      name: dsbreakpoint,\n      styles: {\n        width:\n          dsbreakpoint === '--mobile' ? '320px' : breakpoints[dsbreakpoint],\n        height: '100%',\n      },\n    },\n  };\n};\n\nconst DSViewports = {\n  ...makeViewPort('--mobile'),\n  ...makeViewPort('--breakpoint-xs'),\n  ...makeViewPort('--breakpoint-s'),\n  ...makeViewPort('--breakpoint-m'),\n  ...makeViewPort('--breakpoint-l'),\n  ...makeViewPort('--breakpoint-xl'),\n};\n\nconst parameters = {\n  docs: { controls: { sort: 'requiredFirst' } },\n  actions: {\n    disable: true,\n  },\n  controls: {\n    sort: 'requiredFirst',\n    hideNoControlsWarning: true,\n  },\n  viewport: { viewports: DSViewports },\n  options: {\n    storySort: {\n      method: 'alphabetical',\n      order: [\n        'Generelt',\n        'Designtokens',\n        'Sidetyper',\n        'VerktÃ¸y',\n        'Komponenter',\n        'Tester',\n      ],\n    },\n  },\n  backgrounds: {\n    default: 'light',\n    values: [\n      {\n        name: 'light',\n        value: 'var(--palette-graphite-0)',\n      },\n      {\n        name: 'dark',\n        value: 'var(--palette-graphite-100)',\n      },\n      {\n        name: 'grey',\n        value: 'var(--palette-graphite-70)',\n      },\n      {\n        name: 'themePrimary',\n        value: 'var(--theme-primary)',\n      },\n    ],\n  },\n};\n\nconst argTypes = {\n  ref: {\n    control: { disable: true },\n    description: 'React ref',\n    table: {\n      category: category.baseProps,\n    },\n  },\n  className: {\n    control: 'select',\n    options: ['', 'dummyClassname'],\n    description: 'html class attributt til noden',\n    table: {\n      type: { summary: 'string' },\n      category: category.baseProps,\n      defaultValue: { summary: getCommonClassNameDefault() },\n    },\n  },\n  id: {\n    control: 'text',\n    description: 'html id attributt',\n    table: { type: { summary: 'string' }, category: category.baseProps },\n  },\n  lang: {\n    control: 'text',\n    description: 'html lang attributt',\n    table: { type: { summary: 'string' }, category: category.baseProps },\n  },\n  'data-testid': {\n    control: 'text',\n    description: 'html data attributt som brukes for tester',\n    table: { type: { summary: 'string' }, category: category.baseProps },\n  },\n} satisfies Preview['argTypes'];\n\nconst langs = Object.entries(Languages).map(([key, value]) => ({\n  title: key,\n  value,\n}));\n\nconst Spacing = [\n  { title: 'On', value: 'spacing' },\n  { title: 'Off', value: 'no-spacing' },\n];\n\nconst clearStyles = (element: HTMLElement): void => {\n  for (const className of Object.values(Spacing)) {\n    element.classList.remove(className.value);\n  }\n};\n\nconst applyStyle = (element: HTMLElement, className: string): void => {\n  element.classList.add(className);\n};\n\nconst SpacingUpdater: Decorator = (Story, context) => {\n  useEffect(() => {\n    const body = window.document.body;\n    clearStyles(body);\n    applyStyle(body, context.globals.spacing);\n    return (): void => {\n      clearStyles(body);\n    };\n  }, [context.globals.spacing]);\n  return <Story />;\n};\n\nconst globalTypes = {\n  locale: {\n    name: 'Locale',\n    description: 'Internationalization locale',\n    defaultValue: Languages.Bokmal,\n    toolbar: {\n      icon: 'globe',\n      items: [...langs, { title: 'key', value: 'cimode' }],\n    },\n  },\n  spacing: {\n    name: 'Spacing',\n    description: 'Remove padding and margin around component',\n    defaultValue: Spacing[0].value,\n    toolbar: {\n      title: 'Margin',\n      icon: 'browser',\n      items: Spacing,\n    },\n  },\n};\n\nconst preview = {\n  decorators: [\n    (Story): JSX.Element => <Story />,\n    LanguageUpdater,\n    testBlock,\n    mockDate,\n    SpacingUpdater,\n  ],\n  parameters,\n  globalTypes,\n  argTypes,\n  //workaround for https://github.com/storybookjs/storybook/issues/30385\n  initialGlobals: {\n    a11y: {\n      manual: true,\n    },\n  },\n  tags: ['autodocs'],\n} satisfies Preview;\nexport default preview;\n"],"names":["global","factory","exports","this","extendStatics","d","b","p","__extends","__","RealDate","now","MockDate","_super","Date","y","h","M","s","ms","date","dateString","set","dateObj","reset","mockdate","cov_1cnetkbybc","path","hash","gcv","coverageData","coverage","actualCoverage","useEffect","useGlobals","__STORYBOOK_MODULE_PREVIEW_API__","LanguageUpdater","f","locale","updateGlobals","locale2","context","parameters","dsI18n","changeLanguage","lang","substring","indexOf","document","documentElement","setAttribute","jsx","Story","testBlock","title","children","mockDate","dsbreakpoint","name","width","breakpoints","height","DSViewports","makeViewPort","docs","controls","sort","actions","disable","hideNoControlsWarning","viewport","viewports","options","storySort","method","order","backgrounds","default","values","value","argTypes","ref","control","description","table","category","baseProps","className","type","summary","defaultValue","getCommonClassNameDefault","id","langs","Object","entries","Languages","map","key","Spacing","element","classList","remove","applyStyle","add","SpacingUpdater","body","window","clearStyles","globals","spacing","globalTypes","Bokmal","toolbar","icon","items"],"mappings":"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A,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,GAAA,CAAA,KAAA,ieAAA,CAAA,QAAA,EAAA,KAAA,KAAA,QAAA,CAAA,wGAAA,EAAA,MAAA,CAAA,QAAA,EAAA,SAAA,2vHAAA,EAAA,gBAAA,2CAAA,KAAA,0CAAA,EAAAC,EAAA/B,EAAA6B,CAAA,IAAA7B,EAAA6B,CAAA,EAAA,CAAA,IAAA,CAAAE,EAAAJ,CAAA,GAAAI,EAAAJ,CAAA,EAAA,OAAAC,KAAAG,EAAAJ,CAAA,EAAAG,GAAA,IAAAE,EAAAD,EAAAJ,CAAA,EAAAD,OAAAA,EAAAA,UAAAM,CAAAA,OAAAA,CAAAA,EAAAA,CAAAN,CAAAA,EAkBJ,EArCF,KAAAO,CAAAA,UAAAA,EAAAC,WAAAA,CAA0B,GAAAR,EAAA,EAAAR,EAAA,CAAA,IAAAiB,kCAaxBT,EAAA,EAAAR,EAAA,CAAA,IAIIQ,EAAA,EAAApB,EAAA,CAAA,EAAA,CAAA,IAAAoB,IAAAR,EAAA,CAAA,IACF,MACEkB,SAAyC,CAAAV,IAAAW,EAC7C,CAAA,IAAA,KAAA,CAAA,CAAAC,OAAAA,CAAgB,EAAAC,CAAA,GAAAb,EAAA,EAAAR,EAAA,CAAA,IAAAgB,EAAA,GAAAR,OAAAA,IAAAR,EAAA,CAAA,IACde,kBACM,MAAAO,GAAAd,IAAAR,EAAA,CAAA,IAAcuB,EAAAC,WAAoBJ,QAAAZ,EAAAR,EAAAA,EAC/B,CAAA,IAAAsB,GAAAd,EAAA,EAAApB,EAAA,CAAA,EAAA,CAAA,IAAAoB,EAAA,EAAAR,EAAA,CAAA,IACPqB,EAAO,CAAAD,OAAAG,EAAAC,WAAAJ,MAAA,CAAA,GACHZ,EAAA,EAAApB,EAAA,CAAA,EAAA,CAAA,GACV,EAAA,CAAAmC,EAAAC,WAAAJ,OAAAC,CAAA,CAAA,EAAAb,EAAA,EAAAR,EAAA,CAAA,IAEMe,EAAA,IAAuB,CAAAP,EAAA,EAAAW,EAAA,CAAA,IAAAX,EAAA,EAAAR,EAAA,CAAA,IAC3ByB,EAAYC,eAAiBN,CAAA,EAExB,MAAAO,GAAAnB,EAAA,EAAAR,EAAA,EAAA,IAAAoB,EAAAQ,UAAA,EAAAR,EAAmBS,QAAA,GAAA,CAAA,GAAArB,EAAAR,EAAAA,EAIjB8B,EAAAA,IAAAA,SAAAC,gBAAAC,aAAA,OAAAL,CAAA,CACG,EAAA,CAAAP,CAAA,CAAA,EAAAZ,EAAAR,EAAAA,EACV,EAAA,IAAAiC,EAAA,IAAAC,EAAA,CAAA,EACF,EAAA1B,EAAA,EAAAR,EAGE,EAAA,IAAA,MAAAmC,EAAeA,CAAAD,EAAAX,KAAAf,IAAAW,EAAA,CAAA,IAAAX,EAAA,EAAAR,EAAA,EAAA,IACXuB,EAAQa,iBAAqB,QAAA,GAAA5B,EAAA,EAAApB,EAAA,CAAA,EAAA,CAAA,IAAAoB,EAAA,EAAAR,EAAA,EAAA,IACtBiC,EAAA,IACX,MAAA,CAAA,kBAAA,GACQI,SAAAJ,MAAAC,EAAA,CAAA,CAAA,CACV,CAKS,IAAA1B,EAAApB,EAAAA,EAAAoB,CAAAA,EAAAA,CAAAA,IAAAA,IAAAR,EACL,EAAA,IAAAiC,QAAgB,CAAA,CAAA,IACRzB,EAAA,EAAAR,EAAA,EAAA,IAG8D,MAAAsC,EAC1DA,CAAAJ,EAAAX,KAAAf,EAAA,EAAAW,EAAAX,CAAAA,IAAAA,EAAAR,EAAAA,QACVN,QAAAc,EAAAA,EAAAR,EAAAA,QACFuB,EAAAC,WAAAc,UAAA9B,IAAApB,EAAA,CAAA,EAAA,CAAA,IAAAoB,IAAAR,EAAA,EAAA,IACFN,EAAA,IAAA6B,EAAAC,WAAAc,QAAA,GACF9B,EAAA,EAAApB,EAAAoB,CAAAA,EAAAA,CAAAA,IAAAA,EAAA,EAAAR,QAEAiC,EAAAA,IAAoBC,EAAA,EAAA,GAAA1B,IAAAR,EAEe,EAAA,IAAA,QAEjCuC,2BAGF,CAAA,CAAAA,CAAA,EAAA,CAEMC,KAAaD,SACT,CACCE,MACEF,IAAA,YAAA/B,EAAA,EAAApB,EAAA,CAAA,EAAA,CAAA,IAAA,UAAAoB,EAAApB,EAAAA,UAAAsD,EAAAH,CAAA,GACXI,OAAA,MACU,CACR,CAAM,GAICC,GAAApC,IAAAR,EAAA,EAAA,IAAA,CAAA,GACI6C,EAAA,UAAA,EAAA,GAAAA,EACD,iBAAA,EAAA,GAAAA,EACD,gBAAA,EACL,GAAAA,EAAA,gBAAA,EACA,GAAAA,EAAA,gBAAA,EACA,GAAAA,EAAA,iBAAA,CAAA,GAGArB,GAAAhB,IAAAR,EAAA,EAAA,IAAA,CACF8C,KAAA,CAAAC,SAAA,CAAAC,KAAA,eAAA,CAAA,EACFC,QAAA,CACFC,QAAA,EACA,EAAaH,SACF,CACTC,KAAQ,gBACNG,sBAAA,EAAA,EACQC,SACC,CAAAC,UAAAT,CAAA,EACTU,QAAA,CACAC,UAAA,CAAAC,OACQ,eAAAC,MACC,CACT,WACA,eACE,YACA,UACF,cACA,SACQ,CAER,EACFC,YAAA,CACFC,QAAA,QACFC,OAAA,CAEM,CACCpB,KAAA,QACHqB,MAAW,2BACE,EACN,aAEPA,MAAA,6BACF,EACW,CACArB,KAAA,OACTqB,MAAU,4BACG,EACN,CACLrB,KAAQ,2CAER,EAEJ,CAAA,GAGesB,GAAAtD,EAAA,EAAAR,EAAA,EAAA,IAAA,CACb+D,IAAA,CACFC,QAAA,CAAAd,QAAA,EAAA,EACMe,YAAA,YACJC,MAAS,CACIC,SAAAA,EAAAC,SACb,CACF,EACAC,UAAe,CACbL,QAAS,SACTV,QAAa,CAAA,GAAA,gBAAA,EACbW,YAAe,iCACjBC,MAAA,CACFI,KAAA,CAAAC,QAAA,QAAA,EAEMJ,SAAeA,EAAAC,UACZI,aAAA,CAAAD,QAAAE,EAAA,CAAA,CACP,CACA,EAEFC,GAAM,CACFV,QAAa,OACbC,YAAc,oBAClBC,MAAA,CAAAI,KAAA,CAAAC,QAAA,QAAA,EAAAJ,SAAAA,EAAAC,SAAA,CAEM,EACJzC,KAAA,CACUqC,QAAA,OACVC,YAAA,sBACFC,MAAA,CAAAI,KAAA,CAAAC,QAAA,QAAA,EAAAJ,SAAAA,EAAAC,SAAA,CAEM,EACI,cAAA,CACVJ,QAAA,OAEMC,YAAA,4CACJC,MAAA,CAAgBI,KAAA,CAAAC,QAAA,QAAA,EAAAJ,SAAAA,EAAAC,SAAA,CACR,CACN,GAEAO,GAAAnE,EAAAR,EAAAA,EAAmB4E,EAAAA,IAAAA,OAAAC,QAAAC,CAAA,EAAAC,IAAA,CAAA,CAAAC,EAAAnB,CAAA,KAAArD,IAAAW,EAAA,CAAA,IAAAX,EAAA,EAAAR,EAAA,EAAA,IAAA,CACjBoC,MAAA4C,EACFnB,MAAAA,CAAA,EACF,GAEFoB,GAAAzE,IAAAR,EAAA,EAAA,IAAA,CAEA,CAAAoC,MAAoB,KAAAyB,MAAA,SAAA,EAClB,CAAQzB,MAAA,MAAAyB,MAAA,YAAA,CAAA,GAAArD,EAAA,EAAAR,EAAA,EAAA,IAEO,QACWkF,GAAA,CAAA1E,EAAA,EAAAW,EAAA,CAAA,IAAAX,IAAAR,EAAA,EAAA,IAAA,UACfqE,KAAAO,OAAAhB,OAAAqB,CAAA,EAAAzE,EAAA,EAAAR,EAAA,EAAA,IACDkF,EAAAC,UAAAC,OAAAf,EAAAR,KAAA,CAC6C,EAAArD,EAAAR,EAAAA,EAEvD,EAAA,IAAA,MACSqF,EAAAA,CAAAH,EAAAb,IAAA,CAAA7D,EAAA,EAAAW,EAAA,CAAA,IAAAX,IAAAR,EAAA,EAAA,IACDkF,EAAAC,UAAAG,IAAAjB,CAAA,CAAA,EAAA7D,EAAA,EAAAR,EAAA,EAAA,IAEmB,MAChBuF,EAAAA,CAAArD,EAAAX,KAAAf,EAAA,EAAAW,EAAA,CAAA,IAAAX,EAAA,EAAAR,EAAA,EAAA,IAAAe,EACA,IAAA,CAAAP,EAAA,EAAAW,EAAA,EAAA,IACD,MAAAqE,GAAAhF,EAAA,EAAAR,EAAA,EAAA,IAAAyF,OAAA3D,SAAA0D,MAAAhF,OAAAA,IAAAR,EAAA0F,EAAAA,IAAAA,EACCF,CAAA,EAAAhF,EAAA,EAAAR,EAAA,EAAA,IACTqF,EAAAG,EAAAjE,EAAAoE,QAAAC,OAAA,EAAApF,EAAA,EAAAR,EACF,EAAA,IAAA,IAAA,CAAAQ,EAAA,EAAAW,EAAA,EAAA,IAAAX,EAAA,EAAAR,EACF0F,EAAAA,IAAAA,EAAAF,CAAA,CAEA,CACE,EAAY,CAAAjE,EAAAoE,QAAAC,OAAA,CAAA,EAAApF,EAAA,EAAAR,EAAA,EAAA,IAAAiC,EAAA,IACTC,EAAwB,CAAA,CAAM,GAG/B2D,GAAArF,EAAA,EAAAR,EAAA,EAAA,IAAA,CACAoB,OAAA,CACFoB,KAAA,SACAyB,YAAA,8BACAO,aAAAM,EAAAgB,OACAC,QAAA,CAAAC,KAAA,QAEgBC,MAAA,CAAA,GAAAtB,EAAA,CAAAvC,MAAA,MAAAyB,MAAA,QAAA,CAAA,CACd,CAAM,EAEN+B,QAAA,CACFpD,KAAA,UACAyB,YAAiB,6CACnBO,aAAAS,EAAA,CAAA,EAAApB,MACekC,QAAA","x_google_ignoreList":[0]}