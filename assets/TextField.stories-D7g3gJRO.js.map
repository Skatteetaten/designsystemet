{"version":3,"file":"TextField.stories-D7g3gJRO.js","sources":["../../../../apps/ds-playground/src/stories/components/TextField.stories.tsx"],"sourcesContent":["import { useState, ChangeEvent, FocusEvent, JSX } from 'react';\n\nimport { Meta, StoryObj } from '@storybook/react';\n\nimport {\n  dsI18n,\n  formArrSize,\n  getCommonAutoCompleteDefault,\n  getCommonFormVariantDefault,\n  getAutoCompletePropDescription,\n} from '@skatteetaten/ds-core-utils';\nimport { TextField, getTextFieldAsDefault } from '@skatteetaten/ds-forms';\n\nimport { category, htmlEventDescription } from '../../../.storybook/helpers';\nimport { SystemSVGPaths } from '../utils/icon.systems';\nimport { exampleParameters } from '../utils/stories.utils';\n\nconst meta = {\n  component: TextField,\n  title: 'Komponenter/TextField',\n  argTypes: {\n    // Props\n    as: {\n      control: 'inline-radio',\n      table: {\n        category: category.props,\n        defaultValue: { summary: getTextFieldAsDefault() },\n      },\n    },\n    variant: {\n      options: [...formArrSize],\n      control: 'inline-radio',\n      table: {\n        category: category.props,\n        defaultValue: { summary: getCommonFormVariantDefault() },\n      },\n    },\n    autosize: { table: { category: category.props } },\n    classNames: {\n      control: false,\n      table: { category: category.props },\n    },\n    defaultValue: {\n      control: 'text',\n      table: { category: category.props },\n    },\n    description: { table: { category: category.props } },\n    errorMessage: { table: { category: category.props } },\n    helpSvgPath: {\n      options: Object.keys(SystemSVGPaths),\n      mapping: SystemSVGPaths,\n      table: {\n        category: category.props,\n        defaultValue: { summary: 'HelpSimpleSVGpath' },\n      },\n    },\n    helpText: { table: { category: category.props } },\n    hideLabel: { table: { category: category.props } },\n    label: { table: { category: category.props } },\n    showRequiredMark: { table: { category: category.props } },\n    thousandSeparator: { table: { category: category.props } },\n    titleHelpSvg: {\n      table: {\n        category: category.props,\n        defaultValue: { summary: dsI18n.t('Shared:shared.Help') },\n      },\n    },\n    // HTML\n    autoComplete: {\n      table: {\n        category: category.htmlAttribute,\n        defaultValue: { summary: getCommonAutoCompleteDefault() },\n        type: { summary: 'string' },\n      },\n      type: 'string',\n      description: getAutoCompletePropDescription(),\n    },\n    disabled: {\n      control: 'boolean',\n      table: { category: category.htmlAttribute },\n    },\n    form: { table: { category: category.htmlAttribute } },\n    inputMode: {\n      control: 'inline-radio',\n      table: { category: category.htmlAttribute },\n    },\n    maxLength: { table: { category: category.htmlAttribute } },\n    minLength: { table: { category: category.htmlAttribute } },\n    name: { table: { category: category.htmlAttribute } },\n    pattern: { table: { category: category.htmlAttribute } },\n    placeholder: { table: { category: category.htmlAttribute } },\n    readOnly: { table: { category: category.htmlAttribute } },\n    required: {\n      control: 'boolean',\n      table: { category: category.htmlAttribute },\n    },\n    rows: { table: { category: category.htmlAttribute } },\n    value: {\n      control: 'text',\n      table: { category: category.htmlAttribute },\n    },\n    list: { control: 'text', table: { category: category.htmlAttribute } },\n    // Events\n    onBlur: { ...htmlEventDescription },\n    onChange: { ...htmlEventDescription },\n    onFocus: { ...htmlEventDescription },\n    onHelpToggle: { table: { category: category.event } },\n  },\n  args: {\n    label: 'Navn',\n  },\n} satisfies Meta<typeof TextField>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Preview: Story = {} satisfies Story;\n\nconst countries = [\n  { text: 'Afghanistan', key: 'AF' },\n  { text: 'Ã…land Islands', key: 'AX' },\n  { text: 'Albania', key: 'AL' },\n  { text: 'Algeria', key: 'DZ' },\n  { text: 'American Samoa', key: 'AS' },\n  { text: 'AndorrA', key: 'AD' },\n  { text: 'Angola', key: 'AO' },\n  { text: 'Anguilla', key: 'AI' },\n  { text: 'Antarctica', key: 'AQ' },\n  { text: 'Antigua and Barbuda', key: 'AG' },\n  { text: 'Argentina', key: 'AR' },\n  { text: 'Armenia', key: 'AM' },\n  { text: 'Aruba', key: 'AW' },\n  { text: 'Australia', key: 'AU' },\n  { text: 'Austria', key: 'AT' },\n  { text: 'Azerbaijan', key: 'AZ' },\n  { text: 'Bahamas', key: 'BS' },\n  { text: 'Bahrain', key: 'BH' },\n  { text: 'Bangladesh', key: 'BD' },\n  { text: 'Barbados', key: 'BB' },\n  { text: 'Belarus', key: 'BY' },\n  { text: 'Belgium', key: 'BE' },\n  { text: 'Belize', key: 'BZ' },\n  { text: 'Benin', key: 'BJ' },\n  { text: 'Bermuda', key: 'BM' },\n  { text: 'Bhutan', key: 'BT' },\n  { text: 'Bolivia', key: 'BO' },\n  { text: 'Bosnia and Herzegovina', key: 'BA' },\n  { text: 'Botswana', key: 'BW' },\n  { text: 'Bouvet Island', key: 'BV' },\n  { text: 'Brazil', key: 'BR' },\n  { text: 'British Indian Ocean Territory', key: 'IO' },\n  { text: 'Brunei Darussalam', key: 'BN' },\n  { text: 'Bulgaria', key: 'BG' },\n  { text: 'Burkina Faso', key: 'BF' },\n  { text: 'Burundi', key: 'BI' },\n  { text: 'Cambodia', key: 'KH' },\n  { text: 'Cameroon', key: 'CM' },\n  { text: 'Canada', key: 'CA' },\n  { text: 'Cape Verde', key: 'CV' },\n  { text: 'Cayman Islands', key: 'KY' },\n  { text: 'Central African Republic', key: 'CF' },\n  { text: 'Chad', key: 'TD' },\n  { text: 'Chile', key: 'CL' },\n  { text: 'China', key: 'CN' },\n  { text: 'Christmas Island', key: 'CX' },\n  { text: 'Cocos (Keeling) Islands', key: 'CC' },\n  { text: 'Colombia', key: 'CO' },\n  { text: 'Comoros', key: 'KM' },\n  { text: 'Congo', key: 'CG' },\n  { text: 'Congo, The Democratic Republic of the', key: 'CD' },\n  { text: 'Cook Islands', key: 'CK' },\n  { text: 'Costa Rica', key: 'CR' },\n  { text: \"Cote D'Ivoire\", key: 'CI' },\n  { text: 'Croatia', key: 'HR' },\n  { text: 'Cuba', key: 'CU' },\n  { text: 'Cyprus', key: 'CY' },\n  { text: 'Czech Republic', key: 'CZ' },\n  { text: 'Denmark', key: 'DK' },\n  { text: 'Djibouti', key: 'DJ' },\n  { text: 'Dominica', key: 'DM' },\n  { text: 'Dominican Republic', key: 'DO' },\n  { text: 'Ecuador', key: 'EC' },\n  { text: 'Egypt', key: 'EG' },\n  { text: 'El Salvador', key: 'SV' },\n  { text: 'Equatorial Guinea', key: 'GQ' },\n  { text: 'Eritrea', key: 'ER' },\n  { text: 'Estonia', key: 'EE' },\n  { text: 'Ethiopia', key: 'ET' },\n  { text: 'Falkland Islands (Malvinas)', key: 'FK' },\n  { text: 'Faroe Islands', key: 'FO' },\n  { text: 'Fiji', key: 'FJ' },\n  { text: 'Finland', key: 'FI' },\n  { text: 'France', key: 'FR' },\n  { text: 'French Guiana', key: 'GF' },\n  { text: 'French Polynesia', key: 'PF' },\n  { text: 'French Southern Territories', key: 'TF' },\n  { text: 'Gabon', key: 'GA' },\n  { text: 'Gambia', key: 'GM' },\n  { text: 'Georgia', key: 'GE' },\n  { text: 'Germany', key: 'DE' },\n  { text: 'Ghana', key: 'GH' },\n  { text: 'Gibraltar', key: 'GI' },\n  { text: 'Greece', key: 'GR' },\n  { text: 'Greenland', key: 'GL' },\n  { text: 'Grenada', key: 'GD' },\n  { text: 'Guadeloupe', key: 'GP' },\n  { text: 'Guam', key: 'GU' },\n  { text: 'Guatemala', key: 'GT' },\n  { text: 'Guernsey', key: 'GG' },\n  { text: 'Guinea', key: 'GN' },\n  { text: 'Guinea-Bissau', key: 'GW' },\n  { text: 'Guyana', key: 'GY' },\n  { text: 'Haiti', key: 'HT' },\n  { text: 'Heard Island and Mcdonald Islands', key: 'HM' },\n  { text: 'Holy See (Vatican City State)', key: 'VA' },\n  { text: 'Honduras', key: 'HN' },\n  { text: 'Hong Kong', key: 'HK' },\n  { text: 'Hungary', key: 'HU' },\n  { text: 'Iceland', key: 'IS' },\n  { text: 'India', key: 'IN' },\n  { text: 'Indonesia', key: 'ID' },\n  { text: 'Iran, Islamic Republic Of', key: 'IR' },\n  { text: 'Iraq', key: 'IQ' },\n  { text: 'Ireland', key: 'IE' },\n  { text: 'Isle of Man', key: 'IM' },\n  { text: 'Israel', key: 'IL' },\n  { text: 'Italy', key: 'IT' },\n  { text: 'Jamaica', key: 'JM' },\n  { text: 'Japan', key: 'JP' },\n  { text: 'Jersey', key: 'JE' },\n  { text: 'Jordan', key: 'JO' },\n  { text: 'Kazakhstan', key: 'KZ' },\n  { text: 'Kenya', key: 'KE' },\n  { text: 'Kiribati', key: 'KI' },\n  { text: \"Korea, Democratic People'S Republic of\", key: 'KP' },\n  { text: 'Korea, Republic of', key: 'KR' },\n  { text: 'Kuwait', key: 'KW' },\n  { text: 'Kyrgyzstan', key: 'KG' },\n  { text: \"Lao People'S Democratic Republic\", key: 'LA' },\n  { text: 'Latvia', key: 'LV' },\n  { text: 'Lebanon', key: 'LB' },\n  { text: 'Lesotho', key: 'LS' },\n  { text: 'Liberia', key: 'LR' },\n  { text: 'Libyan Arab Jamahiriya', key: 'LY' },\n  { text: 'Liechtenstein', key: 'LI' },\n  { text: 'Lithuania', key: 'LT' },\n  { text: 'Luxembourg', key: 'LU' },\n  { text: 'Macao', key: 'MO' },\n  { text: 'Macedonia, The Former Yugoslav Republic of', key: 'MK' },\n  { text: 'Madagascar', key: 'MG' },\n  { text: 'Malawi', key: 'MW' },\n  { text: 'Malaysia', key: 'MY' },\n  { text: 'Maldives', key: 'MV' },\n  { text: 'Mali', key: 'ML' },\n  { text: 'Malta', key: 'MT' },\n  { text: 'Marshall Islands', key: 'MH' },\n  { text: 'Martinique', key: 'MQ' },\n  { text: 'Mauritania', key: 'MR' },\n  { text: 'Mauritius', key: 'MU' },\n  { text: 'Mayotte', key: 'YT' },\n  { text: 'Mexico', key: 'MX' },\n  { text: 'Micronesia, Federated States of', key: 'FM' },\n  { text: 'Moldova, Republic of', key: 'MD' },\n  { text: 'Monaco', key: 'MC' },\n  { text: 'Mongolia', key: 'MN' },\n  { text: 'Montserrat', key: 'MS' },\n  { text: 'Morocco', key: 'MA' },\n  { text: 'Mozambique', key: 'MZ' },\n  { text: 'Myanmar', key: 'MM' },\n  { text: 'Namibia', key: 'NA' },\n  { text: 'Nauru', key: 'NR' },\n  { text: 'Nepal', key: 'NP' },\n  { text: 'Netherlands', key: 'NL' },\n  { text: 'Netherlands Antilles', key: 'AN' },\n  { text: 'New Caledonia', key: 'NC' },\n  { text: 'New Zealand', key: 'NZ' },\n  { text: 'Nicaragua', key: 'NI' },\n  { text: 'Niger', key: 'NE' },\n  { text: 'Nigeria', key: 'NG' },\n  { text: 'Niue', key: 'NU' },\n  { text: 'Norfolk Island', key: 'NF' },\n  { text: 'Northern Mariana Islands', key: 'MP' },\n  { text: 'Norway', key: 'NO' },\n  { text: 'Oman', key: 'OM' },\n  { text: 'Pakistan', key: 'PK' },\n  { text: 'Palau', key: 'PW' },\n  { text: 'Palestinian Territory, Occupied', key: 'PS' },\n  { text: 'Panama', key: 'PA' },\n  { text: 'Papua New Guinea', key: 'PG' },\n  { text: 'Paraguay', key: 'PY' },\n  { text: 'Peru', key: 'PE' },\n  { text: 'Philippines', key: 'PH' },\n  { text: 'Pitcairn', key: 'PN' },\n  { text: 'Poland', key: 'PL' },\n  { text: 'Portugal', key: 'PT' },\n  { text: 'Puerto Rico', key: 'PR' },\n  { text: 'Qatar', key: 'QA' },\n  { text: 'Reunion', key: 'RE' },\n  { text: 'Romania', key: 'RO' },\n  { text: 'Russian Federation', key: 'RU' },\n  { text: 'RWANDA', key: 'RW' },\n  { text: 'Saint Helena', key: 'SH' },\n  { text: 'Saint Kitts and Nevis', key: 'KN' },\n  { text: 'Saint Lucia', key: 'LC' },\n  { text: 'Saint Pierre and Miquelon', key: 'PM' },\n  { text: 'Saint Vincent and the Grenadines', key: 'VC' },\n  { text: 'Samoa', key: 'WS' },\n  { text: 'San Marino', key: 'SM' },\n  { text: 'Sao Tome and Principe', key: 'ST' },\n  { text: 'Saudi Arabia', key: 'SA' },\n  { text: 'Senegal', key: 'SN' },\n  { text: 'Serbia and Montenegro', key: 'CS' },\n  { text: 'Seychelles', key: 'SC' },\n  { text: 'Sierra Leone', key: 'SL' },\n  { text: 'Singapore', key: 'SG' },\n  { text: 'Slovakia', key: 'SK' },\n  { text: 'Slovenia', key: 'SI' },\n  { text: 'Solomon Islands', key: 'SB' },\n  { text: 'Somalia', key: 'SO' },\n  { text: 'South Africa', key: 'ZA' },\n  { text: 'South Georgia and the South Sandwich Islands', key: 'GS' },\n  { text: 'Spain', key: 'ES' },\n  { text: 'Sri Lanka', key: 'LK' },\n  { text: 'Sudan', key: 'SD' },\n  { text: 'Suriname', key: 'SR' },\n  { text: 'Svalbard and Jan Mayen', key: 'SJ' },\n  { text: 'Swaziland', key: 'SZ' },\n  { text: 'Sweden', key: 'SE' },\n  { text: 'Switzerland', key: 'CH' },\n  { text: 'Syrian Arab Republic', key: 'SY' },\n  { text: 'Taiwan, Province of China', key: 'TW' },\n  { text: 'Tajikistan', key: 'TJ' },\n  { text: 'Tanzania, United Republic of', key: 'TZ' },\n  { text: 'Thailand', key: 'TH' },\n  { text: 'Timor-Leste', key: 'TL' },\n  { text: 'Togo', key: 'TG' },\n  { text: 'Tokelau', key: 'TK' },\n  { text: 'Tonga', key: 'TO' },\n  { text: 'Trinidad and Tobago', key: 'TT' },\n  { text: 'Tunisia', key: 'TN' },\n  { text: 'Turkey', key: 'TR' },\n  { text: 'Turkmenistan', key: 'TM' },\n  { text: 'Turks and Caicos Islands', key: 'TC' },\n  { text: 'Tuvalu', key: 'TV' },\n  { text: 'Uganda', key: 'UG' },\n  { text: 'Ukraine', key: 'UA' },\n  { text: 'United Arab Emirates', key: 'AE' },\n  { text: 'United Kingdom', key: 'GB' },\n  { text: 'United States', key: 'US' },\n  { text: 'United States Minor Outlying Islands', key: 'UM' },\n  { text: 'Uruguay', key: 'UY' },\n  { text: 'Uzbekistan', key: 'UZ' },\n  { text: 'Vanuatu', key: 'VU' },\n  { text: 'Venezuela', key: 'VE' },\n  { text: 'Viet Nam', key: 'VN' },\n  { text: 'Virgin Islands, British', key: 'VG' },\n  { text: 'Virgin Islands, U.S.', key: 'VI' },\n  { text: 'Wallis and Futuna', key: 'WF' },\n  { text: 'Western Sahara', key: 'EH' },\n  { text: 'Yemen', key: 'YE' },\n  { text: 'Zambia', key: 'ZM' },\n  { text: 'Zimbabwe', key: 'ZW' },\n];\n\nexport const Examples: Story = {\n  render: (_args): JSX.Element => {\n    const [creditInput, setCreditInput] = useState('10000');\n\n    const [postaCodeInput, setPostaCodeInput] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const [infoInput, setInfoInput] = useState('');\n\n    return (\n      <form noValidate>\n        <TextField\n          label={'Ã˜nsket kredittgrense'}\n          className={'textField300'}\n          description={'Gjennomsnittlig oppgjÃ¸r for fire dager'}\n          value={creditInput}\n          thousandSeparator\n          onChange={(e: ChangeEvent<HTMLInputElement>): void =>\n            setCreditInput(e.target.value)\n          }\n        />\n        <TextField\n          label={'Postnummer'}\n          as={'input'}\n          name={'test'}\n          className={'textField150'}\n          errorMessage={errorMessage}\n          value={postaCodeInput}\n          maxLength={4}\n          pattern={'\\\\d{4}'}\n          required\n          onChange={(e: ChangeEvent<HTMLInputElement>): void => {\n            setErrorMessage('');\n            if (e.target.value.length > 0 && isNaN(Number(e.target.value))) {\n              setErrorMessage('Postnummer kan kun inneholde tall.');\n            }\n\n            setPostaCodeInput(e.target.value);\n          }}\n          onBlur={(e: FocusEvent<HTMLInputElement>): void => {\n            if (e.target.validity.patternMismatch) {\n              setErrorMessage('Postnummer mÃ¥ inneholde fire tall.');\n            }\n            if (e.target.validity.valueMissing) {\n              setErrorMessage('Postnummer er pÃ¥krevd.');\n            }\n          }}\n        />\n        <TextField\n          label={'Andre opplysninger'}\n          className={'textField300'}\n          as={'textarea'}\n          rows={4}\n          value={infoInput}\n          autosize\n          onChange={(e: ChangeEvent<HTMLTextAreaElement>): void =>\n            setInfoInput(e.target.value)\n          }\n        />\n        <TextField label={'Nettleser'} list={'browsers'} />\n        <datalist id={'browsers'}>\n          <option value={'Edge'} />\n          <option value={'Firefox'} />\n          <option value={'Chrome'} />\n          <option value={'Opera'} />\n          <option value={'Safari'} />\n        </datalist>\n        <TextField label={'Land'} list={'countries'} />\n        <datalist id={'countries'}>\n          {countries.map(({ text, key }) => (\n            <option key={key} value={text} />\n          ))}\n        </datalist>\n      </form>\n    );\n  },\n} satisfies Story;\nExamples.parameters = exampleParameters;\n"],"names":["meta","component","TextField","title","argTypes","as","control","table","category","props","defaultValue","summary","getTextFieldAsDefault","variant","options","formArrSize","getCommonFormVariantDefault","autosize","classNames","description","errorMessage","helpSvgPath","Object","keys","SystemSVGPaths","mapping","helpText","hideLabel","label","showRequiredMark","thousandSeparator","titleHelpSvg","dsI18n","t","autoComplete","htmlAttribute","getCommonAutoCompleteDefault","type","getAutoCompletePropDescription","disabled","form","inputMode","maxLength","minLength","name","pattern","placeholder","readOnly","required","rows","value","list","onBlur","htmlEventDescription","onChange","onFocus","onHelpToggle","event","args","Preview","countries","text","key","Examples","render","_args","creditInput","setCreditInput","useState","postaCodeInput","setPostaCodeInput","setErrorMessage","infoInput","setInfoInput","jsxs","jsx","e","target","length","isNaN","Number","validity","patternMismatch","valueMissing","map","parameters","exampleParameters","docs","source","originalSource"],"mappings":"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"}