"use strict";(self.webpackChunk_skatteetaten_designsystemet=self.webpackChunk_skatteetaten_designsystemet||[]).push([[9674],{"./apps/ds-playground/src/stories/__tests__/TopBannerLangPicker.test.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CloseMenuWhenClickOnLangButton:()=>CloseMenuWhenClickOnLangButton,Defaults:()=>Defaults,WithAttributes:()=>WithAttributes,WithKeyboardNavigation:()=>WithKeyboardNavigation,WithLocale:()=>WithLocale,WithRef:()=>WithRef,WithoutSami:()=>WithoutSami,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/ds-core-utils/src/index.ts"),_storybook_test__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),_libs_ds_layout_src_TopBannerLangPicker_TopBannerLangPicker__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./libs/ds-layout/src/TopBannerLangPicker/TopBannerLangPicker.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={component:_libs_ds_layout_src_TopBannerLangPicker_TopBannerLangPicker__WEBPACK_IMPORTED_MODULE_3__.N,title:"Tester/TopBanner/TopBannerLangPicker (intern)",render:args=>{const[openMenuState,setOpenMenu]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("None");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_libs_ds_layout_src_TopBannerLangPicker_TopBannerLangPicker__WEBPACK_IMPORTED_MODULE_3__.N,Object.assign({},args,{openMenu:openMenuState,setOpenMenu}))},argTypes:{key:{table:{disable:!0}},ref:{table:{disable:!0}},className:{table:{disable:!0}},classNames:{table:{disable:!0}},id:{table:{disable:!0}},lang:{table:{disable:!0}},"data-testid":{table:{disable:!0}},defaultLocale:{table:{disable:!0}},showSami:{table:{disable:!0}},openMenu:{table:{disable:!0}},setOpenMenu:{table:{disable:!0}},menuButtonRef:{table:{disable:!0}},onLanguageClick:{table:{disable:!0}}}},menuText=_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__.g0.t("ds_layout:topbannerbutton.Menu"),defaultArgs={openMenu:"None",setOpenMenu:()=>{Function.prototype()}},WithRef={name:"With Ref (FA1)",args:Object.assign({},defaultArgs,{ref:instance=>{instance&&(instance.id="dummyIdForwardedFromRef")}}),argTypes:{ref:{table:{disable:!1}}},parameters:{imageSnapshot:{disable:!0}},play:async({canvasElement})=>{const container=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getAllByRole("generic")[1];await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(container).toHaveAttribute("id","dummyIdForwardedFromRef")}},WithAttributes={name:"With Attributes (FA2-5)",args:Object.assign({},defaultArgs,{id:"htmlid",className:"dummyClassname",lang:"nb","data-testid":"123ID"}),argTypes:{id:{table:{disable:!1}},className:{table:{disable:!1}},lang:{table:{disable:!1}},"data-testid":{table:{disable:!1}}},play:async({canvasElement})=>{const container=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getAllByRole("generic")[1];await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(container).toHaveAttribute("id","htmlid"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(container).toHaveClass("dummyClassname"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(container).toHaveAttribute("lang","nb"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(container).toHaveAttribute("data-testid","123ID")}},Defaults={name:"Defaults (LanguagePicker A1, A2 delvis, A4, A7, B1, B2, B3)",args:Object.assign({},defaultArgs),argTypes:{},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement),menuButton=canvas.getByRole("button",{name:`Bokm친l ${menuText}`});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(menuButton).toBeInTheDocument(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(menuButton).toHaveAttribute("aria-expanded","false"),await menuButton.click(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(menuButton).toHaveAttribute("aria-expanded","true");const list=canvas.getByRole("list");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(list).toBeInTheDocument(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(list.tagName).toBe("UL");const listItems=canvas.getAllByRole("listitem");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(listItems).toHaveLength(4);const bokmalButton=canvas.getByRole("button",{name:"Bokm친l"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(bokmalButton).toHaveAttribute("lang","nb"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(bokmalButton).toHaveAttribute("aria-current","true");const nynorskButton=canvas.getByRole("button",{name:"Nynorsk"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(nynorskButton).toHaveAttribute("lang","nn");const englishButton=canvas.getByRole("button",{name:"English"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(englishButton).toHaveAttribute("lang","en");const samiskButton=canvas.getByRole("button",{name:"S치megiella"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(samiskButton).toHaveAttribute("lang","se");const html=document.querySelector("html");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(html).toHaveAttribute("lang","nb")}},WithoutSami={name:"Without Sami (LanguagePicker A2 delvis)",args:Object.assign({},defaultArgs,{showSami:!1}),argTypes:{showSami:{table:{disable:!1}}},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement),menuButton=canvas.getByRole("button");await _storybook_test__WEBPACK_IMPORTED_MODULE_2__.mV.click(menuButton);const listItems=canvas.getAllByRole("listitem");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(listItems).toHaveLength(3);for(const item of listItems)await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(item).not.toHaveAttribute("lang","se")}},WithLocale={name:"With Locale (LanguagePicker A7, A4, B2)",args:Object.assign({},defaultArgs,{defaultLocale:_skatteetaten_ds_core_utils__WEBPACK_IMPORTED_MODULE_1__.lI.Engelsk}),argTypes:{defaultLocale:{table:{disable:!1}}},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement),menuButton=canvas.getByRole("button",{name:`English ${menuText}`});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(menuButton).toBeInTheDocument(),await menuButton.click();const englishButton=canvas.getByRole("button",{name:"English"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(englishButton).toHaveAttribute("aria-current","true");const html=document.querySelector("html");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(html).toHaveAttribute("lang","en")}},CloseMenuWhenClickOnLangButton={name:"Close Menu When Click On LangButton (LanguagePicker A4)",args:Object.assign({},defaultArgs),parameters:{imageSnapshot:{disable:!0}},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement),menuButtonBokmal=canvas.getByRole("button",{name:`Bokm친l ${menuText}`});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(menuButtonBokmal).toHaveAttribute("aria-expanded","false"),await menuButtonBokmal.click(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(menuButtonBokmal).toHaveAttribute("aria-expanded","true");const englishButton=canvas.getByRole("button",{name:"English"});await englishButton.click(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(englishButton).not.toBeInTheDocument();const menuButtonEnglish=canvas.getByRole("button",{name:`English ${menuText}`});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(menuButtonEnglish).toHaveAttribute("aria-expanded","false")}},WithKeyboardNavigation={name:"Change focus when pressing arrow keys or tab (LanguagePicker C1)",args:Object.assign({},defaultArgs,{openMenu:"Lang"}),play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement),menuButton=canvas.getByRole("button");await _storybook_test__WEBPACK_IMPORTED_MODULE_2__.mV.click(menuButton);const listItems=canvas.getAllByRole("listitem");await _storybook_test__WEBPACK_IMPORTED_MODULE_2__.mV.keyboard("[ArrowDown]"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(listItems[0].firstChild).toHaveFocus(),await _storybook_test__WEBPACK_IMPORTED_MODULE_2__.mV.keyboard("[ArrowDown]"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(listItems[1].firstChild).toHaveFocus(),await _storybook_test__WEBPACK_IMPORTED_MODULE_2__.mV.keyboard("[Tab]"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(listItems[2].firstChild).toHaveFocus(),await _storybook_test__WEBPACK_IMPORTED_MODULE_2__.mV.keyboard("[ArrowUp]"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.l_)(listItems[1].firstChild).toHaveFocus()},parameters:{HTMLSnapshot:{disable:!0},imageSnapshot:{disable:!0}}};WithRef.parameters={...WithRef.parameters,docs:{...WithRef.parameters?.docs,source:{originalSource:"{\n  name: 'With Ref (FA1)',\n  args: {\n    ...defaultArgs,\n    ref: (instance: HTMLDivElement | null): void => {\n      if (instance) {\n        instance.id = 'dummyIdForwardedFromRef';\n      }\n    }\n  },\n  argTypes: {\n    ref: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  parameters: {\n    imageSnapshot: {\n      disable: true\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const container = canvas.getAllByRole('generic')[1];\n    await expect(container).toHaveAttribute('id', 'dummyIdForwardedFromRef');\n  }\n} satisfies Story",...WithRef.parameters?.docs?.source}}},WithAttributes.parameters={...WithAttributes.parameters,docs:{...WithAttributes.parameters?.docs,source:{originalSource:"{\n  name: 'With Attributes (FA2-5)',\n  args: {\n    ...defaultArgs,\n    id: 'htmlid',\n    className: 'dummyClassname',\n    lang: 'nb',\n    'data-testid': '123ID'\n  },\n  argTypes: {\n    id: {\n      table: {\n        disable: false\n      }\n    },\n    className: {\n      table: {\n        disable: false\n      }\n    },\n    lang: {\n      table: {\n        disable: false\n      }\n    },\n    'data-testid': {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const container = canvas.getAllByRole('generic')[1];\n    await expect(container).toHaveAttribute('id', 'htmlid');\n    await expect(container).toHaveClass('dummyClassname');\n    await expect(container).toHaveAttribute('lang', 'nb');\n    await expect(container).toHaveAttribute('data-testid', '123ID');\n  }\n} satisfies Story",...WithAttributes.parameters?.docs?.source}}},Defaults.parameters={...Defaults.parameters,docs:{...Defaults.parameters?.docs,source:{originalSource:"{\n  name: 'Defaults (LanguagePicker A1, A2 delvis, A4, A7, B1, B2, B3)',\n  args: {\n    ...defaultArgs\n  },\n  argTypes: {},\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const menuButton = canvas.getByRole('button', {\n      name: `${bokmalText} ${menuText}`\n    });\n    await expect(menuButton).toBeInTheDocument();\n    await expect(menuButton).toHaveAttribute('aria-expanded', 'false');\n    await menuButton.click();\n    await expect(menuButton).toHaveAttribute('aria-expanded', 'true');\n    const list = canvas.getByRole('list');\n    await expect(list).toBeInTheDocument();\n    await expect(list.tagName).toBe('UL');\n    const listItems = canvas.getAllByRole('listitem');\n    await expect(listItems).toHaveLength(4);\n    const bokmalButton = canvas.getByRole('button', {\n      name: bokmalText\n    });\n    await expect(bokmalButton).toHaveAttribute('lang', 'nb');\n    await expect(bokmalButton).toHaveAttribute('aria-current', 'true');\n    const nynorskButton = canvas.getByRole('button', {\n      name: 'Nynorsk'\n    });\n    await expect(nynorskButton).toHaveAttribute('lang', 'nn');\n    const englishButton = canvas.getByRole('button', {\n      name: englishText\n    });\n    await expect(englishButton).toHaveAttribute('lang', 'en');\n    const samiskButton = canvas.getByRole('button', {\n      name: 'S치megiella'\n    });\n    await expect(samiskButton).toHaveAttribute('lang', 'se');\n    // eslint-disable-next-line testing-library/no-node-access\n    const html = document.querySelector('html');\n    await expect(html).toHaveAttribute('lang', 'nb');\n  }\n} satisfies Story",...Defaults.parameters?.docs?.source}}},WithoutSami.parameters={...WithoutSami.parameters,docs:{...WithoutSami.parameters?.docs,source:{originalSource:"{\n  name: 'Without Sami (LanguagePicker A2 delvis)',\n  args: {\n    ...defaultArgs,\n    showSami: false\n  },\n  argTypes: {\n    showSami: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const menuButton = canvas.getByRole('button');\n    await userEvent.click(menuButton);\n    const listItems = canvas.getAllByRole('listitem');\n    await expect(listItems).toHaveLength(3);\n    for (const item of listItems) {\n      await expect(item).not.toHaveAttribute('lang', 'se');\n    }\n  }\n} satisfies Story",...WithoutSami.parameters?.docs?.source}}},WithLocale.parameters={...WithLocale.parameters,docs:{...WithLocale.parameters?.docs,source:{originalSource:"{\n  name: 'With Locale (LanguagePicker A7, A4, B2)',\n  args: {\n    ...defaultArgs,\n    defaultLocale: Languages.Engelsk\n  },\n  argTypes: {\n    defaultLocale: {\n      table: {\n        disable: false\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const menuButton = canvas.getByRole('button', {\n      name: `${englishText} ${menuText}`\n    });\n    await expect(menuButton).toBeInTheDocument();\n    await menuButton.click();\n    const englishButton = canvas.getByRole('button', {\n      name: englishText\n    });\n    await expect(englishButton).toHaveAttribute('aria-current', 'true');\n    // eslint-disable-next-line testing-library/no-node-access\n    const html = document.querySelector('html');\n    await expect(html).toHaveAttribute('lang', 'en');\n  }\n} satisfies Story",...WithLocale.parameters?.docs?.source}}},CloseMenuWhenClickOnLangButton.parameters={...CloseMenuWhenClickOnLangButton.parameters,docs:{...CloseMenuWhenClickOnLangButton.parameters?.docs,source:{originalSource:"{\n  name: 'Close Menu When Click On LangButton (LanguagePicker A4)',\n  args: {\n    ...defaultArgs\n  },\n  parameters: {\n    imageSnapshot: {\n      disable: true\n    }\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const menuButtonBokmal = canvas.getByRole('button', {\n      name: `${bokmalText} ${menuText}`\n    });\n    await expect(menuButtonBokmal).toHaveAttribute('aria-expanded', 'false');\n    await menuButtonBokmal.click();\n    await expect(menuButtonBokmal).toHaveAttribute('aria-expanded', 'true');\n    const englishButton = canvas.getByRole('button', {\n      name: englishText\n    });\n    await englishButton.click();\n    await expect(englishButton).not.toBeInTheDocument();\n    const menuButtonEnglish = canvas.getByRole('button', {\n      name: `${englishText} ${menuText}`\n    });\n    await expect(menuButtonEnglish).toHaveAttribute('aria-expanded', 'false');\n  }\n} satisfies Story",...CloseMenuWhenClickOnLangButton.parameters?.docs?.source}}},WithKeyboardNavigation.parameters={...WithKeyboardNavigation.parameters,docs:{...WithKeyboardNavigation.parameters?.docs,source:{originalSource:"{\n  name: 'Change focus when pressing arrow keys or tab (LanguagePicker C1)',\n  args: {\n    ...defaultArgs,\n    openMenu: 'Lang'\n  },\n  play: async ({\n    canvasElement\n  }): Promise<void> => {\n    const canvas = within(canvasElement);\n    const menuButton = canvas.getByRole('button');\n    await userEvent.click(menuButton);\n    const listItems = canvas.getAllByRole('listitem');\n\n    /* eslint-disable testing-library/no-node-access */\n    await userEvent.keyboard('[ArrowDown]');\n    await expect(listItems[0].firstChild).toHaveFocus();\n    await userEvent.keyboard('[ArrowDown]');\n    await expect(listItems[1].firstChild).toHaveFocus();\n    await userEvent.keyboard('[Tab]');\n    await expect(listItems[2].firstChild).toHaveFocus();\n    await userEvent.keyboard('[ArrowUp]');\n    await expect(listItems[1].firstChild).toHaveFocus();\n    /* eslint-enable testing-library/no-node-access */\n  },\n  parameters: {\n    HTMLSnapshot: {\n      disable: true\n    },\n    imageSnapshot: {\n      disable: true\n    }\n  }\n} satisfies Story",...WithKeyboardNavigation.parameters?.docs?.source}}};const __namedExportsOrder=["WithRef","WithAttributes","Defaults","WithoutSami","WithLocale","CloseMenuWhenClickOnLangButton","WithKeyboardNavigation"]}}]);